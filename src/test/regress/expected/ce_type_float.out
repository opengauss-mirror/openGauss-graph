\! gs_ktool -d all
DELETE ALL

\! gs_ktool -g
GENERATE
1
DROP CLIENT MASTER KEY IF EXISTS floatCMK CASCADE;
NOTICE:  client master key "floatcmk" does not exist
CREATE CLIENT MASTER KEY floatCMK WITH ( KEY_STORE = gs_ktool , KEY_PATH = "gs_ktool/1" , ALGORITHM = AES_256_CBC);
CREATE COLUMN ENCRYPTION KEY floatCEK WITH VALUES (CLIENT_MASTER_KEY = floatCMK, ALGORITHM = AEAD_AES_256_CBC_HMAC_SHA256);
CREATE TABLE IF NOT EXISTS float_type_t1(id INT, fl_col1 float4 ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC),
fl_col2 float8 ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC));
INSERT INTO float_type_t1 (id, fl_col1, fl_col2) VALUES (1, 5.555555, 5.555555567876534);
INSERT INTO float_type_t1 (id, fl_col1, fl_col2) VALUES (2, -5.5555556, -5.5555555678765342);
INSERT INTO float_type_t1 (id, fl_col1, fl_col2) VALUES (3, -3.40E+38, -1.79E+308);
INSERT INTO float_type_t1 (id, fl_col1, fl_col2) VALUES (4, 3.40E+38, 1.79E+308);
INSERT INTO float_type_t1 (id, fl_col1, fl_col2) VALUES (5, 0, 0);
INSERT INTO float_type_t1 (id, fl_col1) VALUES (6, -3.50E+38);
ERROR(CLIENT):  -3.50E+38 is out of range for type real

INSERT INTO float_type_t1 (id, fl_col1) VALUES (7, 3.50E+38);
ERROR(CLIENT):  3.50E+38 is out of range for type real

INSERT INTO float_type_t1 (id, fl_col2) VALUES (8, -1.80E+308);  
ERROR(CLIENT):  -1.80E+308 is out of range for type double precision

INSERT INTO float_type_t1 (id, fl_col2) VALUES (9, 1.80E+308);
ERROR(CLIENT):  1.80E+308 is out of range for type double precision

INSERT INTO float_type_t1 (id, fl_col1, fl_col2) VALUES (10, -5.5555556, -5.5555555678765342);
SELECT * from float_type_t1 order by id;
 id | fl_col1  |      fl_col2      
----+----------+-------------------
  1 |  5.55555 |  5.55555556787653
  2 | -5.55556 | -5.55555556787653
  3 | -3.4e+38 |        -1.79e+308
  4 |  3.4e+38 |         1.79e+308
  5 |        0 |                 0
 10 | -5.55556 | -5.55555556787653
(6 rows)

SELECT * from float_type_t1 where fl_col1 = 5.555555;
 id | fl_col1 |     fl_col2      
----+---------+------------------
  1 | 5.55555 | 5.55555556787653
(1 row)

DELETE FROM float_type_t1 where fl_col1 = 5.555555;
SELECT * from float_type_t1 order by id;
 id | fl_col1  |      fl_col2      
----+----------+-------------------
  2 | -5.55556 | -5.55555556787653
  3 | -3.4e+38 |        -1.79e+308
  4 |  3.4e+38 |         1.79e+308
  5 |        0 |                 0
 10 | -5.55556 | -5.55555556787653
(5 rows)

DELETE FROM float_type_t1 as alias_test where alias_test.fl_col1 = -5.555555;
SELECT * from float_type_t1 order by id;
 id | fl_col1  |      fl_col2      
----+----------+-------------------
  2 | -5.55556 | -5.55555556787653
  3 | -3.4e+38 |        -1.79e+308
  4 |  3.4e+38 |         1.79e+308
  5 |        0 |                 0
 10 | -5.55556 | -5.55555556787653
(5 rows)

UPDATE float_type_t1 SET fl_col1 = -0.12 where fl_col1 = 0;
SELECT * from float_type_t1 order by id;
 id | fl_col1  |      fl_col2      
----+----------+-------------------
  2 | -5.55556 | -5.55555556787653
  3 | -3.4e+38 |        -1.79e+308
  4 |  3.4e+38 |         1.79e+308
  5 |     -.12 |                 0
 10 | -5.55556 | -5.55555556787653
(5 rows)

DROP TABLE float_type_t1;
CREATE TABLE IF NOT EXISTS t_float_1(id INT, num float(1) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC));
CREATE TABLE IF NOT EXISTS t_float_53(id INT, num float(53) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC));
CREATE TABLE IF NOT EXISTS t_float_3(id INT, num float(3) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC));
CREATE TABLE IF NOT EXISTS t_float_4(id INT, 
num1 NUMERIC(10,3) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC),
num2 decimal(10,3) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC),
num3 NUMBER(10,3) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC),
num4 INTEGER ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC)
);
--core dump
--CREATE TABLE IF NOT EXISTS t_float_54(id INT, num float(54) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC));
--CREATE TABLE IF NOT EXISTS t_float_0(id INT, num float(0) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC));
INSERT INTO t_float_3 (id, num) VALUES (1, 123.333);
INSERT INTO t_float_3 (id, num) VALUES (2, 123.4445);
INSERT INTO t_float_3 (id, num) VALUES (3, 1.32);
INSERT INTO t_float_4 (id, num1,num2,num3,num4) VALUES (1, 100,100,100,100);
INSERT INTO t_float_4 (id, num1,num2,num3,num4) VALUES (2, 100.00,100.00,100.00,100);
INSERT INTO t_float_4 (id, num1,num2,num3,num4) VALUES (3, 100.0000,100.0000,100.0000,100);
SELECT * from t_float_4 order by id;
 id |  num1   |  num2   |  num3   | num4 
----+---------+---------+---------+------
  1 | 100.000 | 100.000 | 100.000 |  100
  2 | 100.000 | 100.000 | 100.000 |  100
  3 | 100.000 | 100.000 | 100.000 |  100
(3 rows)

SELECT * from t_float_3 order by id;
 id |   num   
----+---------
  1 | 123.333
  2 | 123.445
  3 |    1.32
(3 rows)

DROP TABLE IF EXISTS t_float_3;
DROP TABLE IF EXISTS t_float_4;
DROP TABLE IF EXISTS t_float_1;
DROP TABLE IF EXISTS t_float_53;
CREATE TABLE IF NOT EXISTS float_type_t2_test1(id INT, num DECIMAL(5,5) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC));
CREATE TABLE IF NOT EXISTS float_type_t2_test2(id INT, num DECIMAL(5,0) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC));
CREATE TABLE IF NOT EXISTS float_type_t2_test3(id INT, num DECIMAL(5,6) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC));
ERROR:  NUMERIC scale 6 must be between 0 and precision 5
LINE 1: ...BLE IF NOT EXISTS float_type_t2_test3(id INT, num DECIMAL(5,...
                                                             ^
CREATE TABLE IF NOT EXISTS float_type_t2_test4(id INT, num DECIMAL(5,-1) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC));
ERROR:  NUMERIC scale -1 must be between 0 and precision 5
LINE 1: ...BLE IF NOT EXISTS float_type_t2_test4(id INT, num DECIMAL(5,...
                                                             ^
CREATE TABLE IF NOT EXISTS float_type_t2(id INT,
d1 DECIMAL(5,3) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC),
d2 DECIMAL(5) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC),
d3 DECIMAL ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC),
n1 NUMERIC ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC),
n2 NUMERIC (5) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC),
n3 NUMERIC (5,2) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = floatCEK, ENCRYPTION_TYPE = DETERMINISTIC)
);
INSERT INTO float_type_t2 VALUES (1, 0, 0, 0, 0, 0, 0);
INSERT INTO float_type_t2 VALUES (2, 99.999, 99999.34534, 45.45, 3455645.6495869576948, 9999.87584272435245, 999.99);
INSERT INTO float_type_t2 VALUES (3, -99.999, -99999.34534, -45.45, -3455645.6495869576948, -9999.87584272435245, -999.99);
--false
INSERT INTO float_type_t2 (id, d1) VALUES (4, 100);
ERROR(CLIENT): numeric field overflow, A field with precision 5 , scale 3 must round to an absolute value less than 10^2

INSERT INTO float_type_t2 (id, d1) VALUES (5, -100);
ERROR(CLIENT): numeric field overflow, A field with precision 5 , scale 3 must round to an absolute value less than 10^2

INSERT INTO float_type_t2 (id, d2) VALUES (4, 100000);
ERROR(CLIENT): numeric field overflow, A field with precision 5 , scale 0 must round to an absolute value less than 10^5

INSERT INTO float_type_t2 (id, d2) VALUES (5, -100000);
ERROR(CLIENT): numeric field overflow, A field with precision 5 , scale 0 must round to an absolute value less than 10^5

INSERT INTO float_type_t2 (id, n2) VALUES (4, 100000);
ERROR(CLIENT): numeric field overflow, A field with precision 5 , scale 0 must round to an absolute value less than 10^5

INSERT INTO float_type_t2 (id, n2) VALUES (5, -100000);
ERROR(CLIENT): numeric field overflow, A field with precision 5 , scale 0 must round to an absolute value less than 10^5

INSERT INTO float_type_t2 (id, n3) VALUES (4, 1000);
ERROR(CLIENT): numeric field overflow, A field with precision 5 , scale 2 must round to an absolute value less than 10^3

INSERT INTO float_type_t2 (id, n3) VALUES (4, -1000);
ERROR(CLIENT): numeric field overflow, A field with precision 5 , scale 2 must round to an absolute value less than 10^3

SELECT * from float_type_t2 order by id;
 id |   d1    |   d2   |   d3   |           n1           |   n2   |   n3    
----+---------+--------+--------+------------------------+--------+---------
  1 |   0.000 |      0 |      0 |                      0 |      0 |    0.00
  2 |  99.999 |  99999 |  45.45 |  3455645.6495869576948 |  10000 |  999.99
  3 | -99.999 | -99999 | -45.45 | -3455645.6495869576948 | -10000 | -999.99
(3 rows)

DROP TABLE IF EXISTS float_type_t2;
DROP TABLE IF EXISTS float_type_t2_test1;
DROP TABLE IF EXISTS float_type_t2_test2;
DROP COLUMN ENCRYPTION KEY floatCEK;
DROP CLIENT MASTER KEY floatCMK;
select  count(*), 'count' from gs_client_global_keys;
 count | ?column? 
-------+----------
     0 | count
(1 row)

select  count(*), 'count' from gs_column_keys;
 count | ?column? 
-------+----------
     0 | count
(1 row)

\! gs_ktool -d all
DELETE ALL
 1
