 /*
 * This file is used to test the function of ExecVecAppend
 */
----
--- Create Table and Insert Data
----
create schema vector_append_engine_part2;
set current_schema=vector_append_engine_part2;
create table vector_append_engine_part2.VECTOR_APPEND_TABLE_01
(
   col_int	int
  ,col_int2	int
  ,col_num	numeric(10,4)
  ,col_char	char
  ,col_varchar	varchar(20)
  ,col_date	date
  ,col_interval	interval
) with(orientation=column)  ;
COPY VECTOR_APPEND_TABLE_01(col_int, col_int2, col_num, col_char, col_varchar, col_date, col_interval) FROM stdin;
analyze vector_append_table_01;
----
--- test 2: cased summarizd from user requirements(With Union and Using agg or unique node)
----
explain (verbose, costs off) 
(select distinct col_int, col_int2, col_num from vector_append_table_01 where col_int<13) 
union
(select distinct col_int, col_int2, col_num from vector_append_table_01 where col_int>=13);
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Row Adapter
   Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
   ->  Vector Sonic Hash Aggregate
         Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
         Group By Key: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
         ->  Vector Append
               ->  Vector Sonic Hash Aggregate
                     Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     Group By Key: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     ->  CStore Scan on vector_append_engine_part2.vector_append_table_01
                           Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                           Filter: (vector_append_engine_part2.vector_append_table_01.col_int < 13)
               ->  Vector Sonic Hash Aggregate
                     Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     Group By Key: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     ->  CStore Scan on vector_append_engine_part2.vector_append_table_01
                           Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                           Filter: (vector_append_engine_part2.vector_append_table_01.col_int >= 13)
(18 rows)

explain (verbose, costs off) 
(select distinct col_int2, col_num from vector_append_table_01 where col_int2<23) 
union
(select distinct col_int2, col_num from vector_append_table_01 where col_int2>=23);
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Row Adapter
   Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
   ->  Vector Sonic Hash Aggregate
         Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
         Group By Key: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
         ->  Vector Append
               ->  Vector Sonic Hash Aggregate
                     Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     Group By Key: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     ->  CStore Scan on vector_append_engine_part2.vector_append_table_01
                           Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                           Filter: (vector_append_engine_part2.vector_append_table_01.col_int2 < 23)
               ->  Vector Sonic Hash Aggregate
                     Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     Group By Key: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     ->  CStore Scan on vector_append_engine_part2.vector_append_table_01
                           Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                           Filter: (vector_append_engine_part2.vector_append_table_01.col_int2 >= 23)
(18 rows)

explain (verbose, costs off) 
(select distinct col_int, col_int2, col_num from vector_append_table_01 where col_int<13 order by col_int) 
union
(select distinct col_int, col_int2, col_num from vector_append_table_01 where col_int>=13);
                                                                                                     QUERY PLAN                                                                                                     
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Row Adapter
   Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
   ->  Vector Sonic Hash Aggregate
         Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
         Group By Key: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
         ->  Vector Append
               ->  Vector Sonic Hash Aggregate
                     Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     Group By Key: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     ->  CStore Scan on vector_append_engine_part2.vector_append_table_01
                           Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                           Filter: (vector_append_engine_part2.vector_append_table_01.col_int < 13)
               ->  Vector Sonic Hash Aggregate
                     Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     Group By Key: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     ->  CStore Scan on vector_append_engine_part2.vector_append_table_01
                           Output: vector_append_engine_part2.vector_append_table_01.col_int, vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                           Filter: (vector_append_engine_part2.vector_append_table_01.col_int >= 13)
(18 rows)

explain (verbose, costs off) 
(select distinct col_int2, col_num from vector_append_table_01 where col_int2<23 order by col_int2) 
union
(select distinct col_int2, col_num from vector_append_table_01 where col_int2>=23);
                                                                       QUERY PLAN                                                                        
---------------------------------------------------------------------------------------------------------------------------------------------------------
 Row Adapter
   Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
   ->  Vector Sonic Hash Aggregate
         Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
         Group By Key: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
         ->  Vector Append
               ->  Vector Sonic Hash Aggregate
                     Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     Group By Key: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     ->  CStore Scan on vector_append_engine_part2.vector_append_table_01
                           Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                           Filter: (vector_append_engine_part2.vector_append_table_01.col_int2 < 23)
               ->  Vector Sonic Hash Aggregate
                     Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     Group By Key: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                     ->  CStore Scan on vector_append_engine_part2.vector_append_table_01
                           Output: vector_append_engine_part2.vector_append_table_01.col_int2, vector_append_engine_part2.vector_append_table_01.col_num
                           Filter: (vector_append_engine_part2.vector_append_table_01.col_int2 >= 23)
(18 rows)

explain (verbose, costs off) 
(select distinct col_char, col_varchar from vector_append_table_01 where col_int2<23 order by col_char) 
union
(select distinct col_char, col_varchar from vector_append_table_01 where col_int2>=23)
union
(select distinct col_char, col_varchar from vector_append_table_01 where col_int2 = 26) order by col_char, col_varchar;
                                                                            QUERY PLAN                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Row Adapter
   Output: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
   ->  Vector Sort
         Output: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
         Sort Key: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
         ->  Vector Sonic Hash Aggregate
               Output: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
               Group By Key: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
               ->  Vector Append
                     ->  Vector Sonic Hash Aggregate
                           Output: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
                           Group By Key: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
                           ->  CStore Scan on vector_append_engine_part2.vector_append_table_01
                                 Output: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
                                 Filter: (vector_append_engine_part2.vector_append_table_01.col_int2 < 23)
                     ->  Vector Sonic Hash Aggregate
                           Output: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
                           Group By Key: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
                           ->  CStore Scan on vector_append_engine_part2.vector_append_table_01
                                 Output: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
                                 Filter: (vector_append_engine_part2.vector_append_table_01.col_int2 >= 23)
                     ->  Vector Sonic Hash Aggregate
                           Output: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
                           Group By Key: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
                           ->  CStore Scan on vector_append_engine_part2.vector_append_table_01
                                 Output: vector_append_engine_part2.vector_append_table_01.col_char, vector_append_engine_part2.vector_append_table_01.col_varchar
                                 Filter: (vector_append_engine_part2.vector_append_table_01.col_int2 = 26)
(27 rows)

((select distinct col_int, col_int2, col_num from vector_append_table_01 where col_int<13) 
union
(select distinct col_int, col_int2, col_num from vector_append_table_01 where col_int>=13)) order by col_int, col_int2, col_num;
 col_int | col_int2 | col_num 
---------+----------+---------
      11 |       21 |  1.2500
      12 |       12 |  1.2500
      12 |       12 |  2.2500
      12 |       22 |  2.2500
      13 |       23 |  1.2500
      15 |       25 |  2.2500
      16 |       16 |  2.3600
      16 |       26 |  2.3600
      17 |       27 |  2.2700
      18 |       27 |  2.2500
      18 |       28 |  2.2500
(11 rows)

((select distinct col_int2, col_num from vector_append_table_01 where col_int2<23) 
union
(select distinct col_int2, col_num from vector_append_table_01 where col_int2>=23)) order by col_int2, col_num;
 col_int2 | col_num 
----------+---------
       12 |  1.2500
       12 |  2.2500
       16 |  2.3600
       21 |  1.2500
       22 |  2.2500
       23 |  1.2500
       25 |  2.2500
       26 |  2.3600
       27 |  2.2500
       27 |  2.2700
       28 |  2.2500
(11 rows)

((select distinct col_int, col_int2, col_num from vector_append_table_01 where col_int<13 order by col_int) 
union
(select distinct col_int, col_int2, col_num from vector_append_table_01 where col_int>=13)) order by col_int, col_int2, col_num;
 col_int | col_int2 | col_num 
---------+----------+---------
      11 |       21 |  1.2500
      12 |       12 |  1.2500
      12 |       12 |  2.2500
      12 |       22 |  2.2500
      13 |       23 |  1.2500
      15 |       25 |  2.2500
      16 |       16 |  2.3600
      16 |       26 |  2.3600
      17 |       27 |  2.2700
      18 |       27 |  2.2500
      18 |       28 |  2.2500
(11 rows)

((select distinct col_int2, col_num from vector_append_table_01 where col_int2<23 order by col_int2) 
union
(select distinct col_int2, col_num from vector_append_table_01 where col_int2>=23)) order by col_int2, col_num;
 col_int2 | col_num 
----------+---------
       12 |  1.2500
       12 |  2.2500
       16 |  2.3600
       21 |  1.2500
       22 |  2.2500
       23 |  1.2500
       25 |  2.2500
       26 |  2.3600
       27 |  2.2500
       27 |  2.2700
       28 |  2.2500
(11 rows)

(select distinct col_char, col_varchar from vector_append_table_01 where col_int2<23 order by col_char) 
union
(select distinct col_char, col_varchar from vector_append_table_01 where col_int2>=23)
union
(select distinct col_char, col_varchar from vector_append_table_01 where col_int2 = 26) order by col_char, col_varchar;
 col_char | col_varchar 
----------+-------------
 C        | beijing
 C        | tianjing
 C        | xian
 F        | beijing
 F        | tianjing
 F        | xian
 T        | beijing
 T        | xian
(8 rows)

----
--- Clean Resource and Tables
----
drop schema vector_append_engine_part2 cascade;
NOTICE:  drop cascades to table vector_append_table_01
