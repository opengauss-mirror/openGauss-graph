--CREATE [ TEMPORARY | TEMP ] SEQUENCE name [ INCREMENT [ BY ] increment ]
--    [ MINVALUE minvalue | NO MINVALUE ] [ MAXVALUE maxvalue | NO MAXVALUE ]
--    [ START [ WITH ] start ] [ CACHE cache ] [ [ NO ] CYCLE ]
--    [ OWNED BY { table_name.column_name | NONE } ]
-- 1.CREATE SEQUENCE
-- 2.ALTER SEQUENCE
-- 3.DROP SEQUENCE
set  max_query_retry_times = 0;
CREATE SCHEMA SCH_TEST_SEQ1;
--CREATE SCHEMA SCH_TEST_SEQ2;
CREATE TABLE SCH_TEST_SEQ1.TEST_TABLE_SEQ (ID INT, NAME TEXT)
PARTITION BY RANGE (ID)
(
	PARTITION P1_TEST_TABLE_SEQ VALUES LESS THAN (10),
	PARTITION P2_TEST_TABLE_SEQ VALUES LESS THAN (20),
	PARTITION P3_TEST_TABLE_SEQ VALUES LESS THAN (30)
);
-- 1.CREATE SEQUENCE
CREATE SEQUENCE SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ 
	INCREMENT BY 1
	MINVALUE 1 MAXVALUE 30
	START 1
	CACHE 5
	OWNED BY SCH_TEST_SEQ1.TEST_TABLE_SEQ.ID;
NOTICE:  Not advised to use MAXVALUE or MINVALUE together with CACHE.
DETAIL:  If CACHE is defined, some sequence values may be wasted, causing available sequence numbers to be less than expected.
-- sequence val functions
SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       1
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       2
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       3
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       4
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       5
(1 row)

SELECT setval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ', 1);
 setval 
--------
      1
(1 row)

INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES 
	(currval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_1'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_2'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_3'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_4'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_5'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_6'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_7'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_8'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_9'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_10'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_11'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_12'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_13'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_14'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_15'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_16'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_17'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_18'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_19'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_20'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_21'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_22'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_23'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_24'),
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_25'), 
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_26'),
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_27'),
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_28'),
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_29');
ERROR:  currval function is not supported
SELECT * FROM SCH_TEST_SEQ1.TEST_TABLE_SEQ ORDER BY 1, 2;
 id | name 
----+------
(0 rows)

DELETE FROM SCH_TEST_SEQ1.TEST_TABLE_SEQ;
SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       2
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       3
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       4
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       5
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       6
(1 row)

-- 2.ALTER SEQUENCE
ALTER SEQUENCE SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ 
	INCREMENT BY 2
	MINVALUE 0 MAXVALUE 28
	START 0
	RESTART 0
	CYCLE
	CACHE 10;
ERROR:  ALTER SEQUENCE is not yet supported.
--ERROR:  invalid OWNED BY option
--HINT:  Specify OWNED BY table.column or OWNED BY NONE.
	--OWNED BY NONE;
--ALTER SEQUENCE SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ 
--	RENAME TO SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ2;
--ALTER TABLE SCH_TEST_SEQ1.TEST_TABLE_SEQ
--	SET SCHEMA SCH_TEST_SEQ2;
--ALTER SEQUENCE SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ2
--	SET SCHEMA SCH_TEST_SEQ2;
SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       7
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       8
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
       9
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
      10
(1 row)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
 nextval 
---------
      11
(1 row)

SELECT setval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ', 1);
 setval 
--------
      1
(1 row)

INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES 
	(currval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_1'); 
ERROR:  currval function is not supported
CONTEXT:  referenced column: id
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_2');
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_3'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_4'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_5'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_6'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_7'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_8'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_9'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_10'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_11'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_12'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_13'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_14'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_15'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_16'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_17'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_18'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_19'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_20'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_21'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_22'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_23'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_24');
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_25'); 
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_26');
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_27');
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_28');
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_29');
INSERT INTO SCH_TEST_SEQ1.TEST_TABLE_SEQ VALUES
	(nextval ('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ'), 'STUDENT_30');
ERROR:  inserted partition key does not map to any table partition
SELECT * FROM SCH_TEST_SEQ1.TEST_TABLE_SEQ ORDER BY 1, 2;
 id |    name    
----+------------
  2 | STUDENT_2
  3 | STUDENT_3
  4 | STUDENT_4
  5 | STUDENT_5
  6 | STUDENT_6
  7 | STUDENT_7
  8 | STUDENT_8
  9 | STUDENT_9
 10 | STUDENT_10
 11 | STUDENT_11
 12 | STUDENT_12
 13 | STUDENT_13
 14 | STUDENT_14
 15 | STUDENT_15
 16 | STUDENT_16
 17 | STUDENT_17
 18 | STUDENT_18
 19 | STUDENT_19
 20 | STUDENT_20
 21 | STUDENT_21
 22 | STUDENT_22
 23 | STUDENT_23
 24 | STUDENT_24
 25 | STUDENT_25
 26 | STUDENT_26
 27 | STUDENT_27
 28 | STUDENT_28
 29 | STUDENT_29
(28 rows)

SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
WARNING:  Failed to receive GTM rollback transaction response  for aborting prepared (null).
--?ERROR:  Sequence reached maximum value.*
CONTEXT:  referenced column: nextval
SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
WARNING:  Failed to receive GTM rollback transaction response  for aborting prepared (null).
--?ERROR:  Sequence reached maximum value.*
CONTEXT:  referenced column: nextval
SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
WARNING:  Failed to receive GTM rollback transaction response  for aborting prepared (null).
--?ERROR:  Sequence reached maximum value.*
CONTEXT:  referenced column: nextval
SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
WARNING:  Failed to receive GTM rollback transaction response  for aborting prepared (null).
--?ERROR:  Sequence reached maximum value.*
CONTEXT:  referenced column: nextval
SELECT nextval('SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ');
WARNING:  Failed to receive GTM rollback transaction response  for aborting prepared (null).
--?ERROR:  Sequence reached maximum value.*
CONTEXT:  referenced column: nextval
--3.CLEAN UP
DROP SEQUENCE  SCH_TEST_SEQ1.SEQ_TEST_TABLE_SEQ;
DROP TABLE SCH_TEST_SEQ1.TEST_TABLE_SEQ;
DROP SCHEMA SCH_TEST_SEQ1;
--DROP SCHEMA SCH_TEST_SEQ2;
