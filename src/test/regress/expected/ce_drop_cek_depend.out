\! gs_ktool -d all
DELETE ALL

\! gs_ktool -g
GENERATE
1
\! gs_ktool -g
GENERATE
2
CREATE CLIENT MASTER KEY MyCMK WITH ( KEY_STORE = gs_ktool , KEY_PATH = "gs_ktool/1" , ALGORITHM = AES_256_CBC);
CREATE COLUMN ENCRYPTION KEY MyCEK770 WITH VALUES (CLIENT_MASTER_KEY = MyCMK, ALGORITHM = AEAD_AES_256_CBC_HMAC_SHA256);
CREATE TABLE IF NOT EXISTS tr2(i1 INT ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = DETERMINISTIC) , i2 INT);
\d tr2
      Table "public.tr2"
 Column |  Type   | Modifiers  
--------+---------+------------
 i1     | integer |  encrypted
 i2     | integer | 

DROP COLUMN ENCRYPTION KEY MyCEK770;
ERROR:  cannot drop column encryption key: mycek770 because other objects depend on it
DETAIL:  encrypted column: i1 depends on column encryption key: mycek770
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
DROP CLIENT MASTER KEY MyCMK;
ERROR:  cannot drop client master key: mycmk because other objects depend on it
DETAIL:  column encryption key: mycek770 depends on client master key: mycmk
encrypted column: i1 depends on column encryption key: mycek770
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
DROP COLUMN ENCRYPTION KEY MyCEK770 CASCADE;
ERROR:  cannot drop column encryption key: mycek770 cascadely because encrypted column depend on it.
HINT:  we have to drop encrypted column: i1, ... before drop column encryption key: mycek770 cascadely.
DROP TABLE tr2;
DROP COLUMN ENCRYPTION KEY MyCEK770 CASCADE;
\d tr2
DROP CLIENT MASTER KEY MyCMK;
DROP TABLE tr2;
ERROR:  table "tr2" does not exist
CREATE CLIENT MASTER KEY MyCMK WITH ( KEY_STORE = gs_ktool , KEY_PATH = "gs_ktool/2" , ALGORITHM = AES_256_CBC);
CREATE CLIENT MASTER KEY MyCMK1 WITH ( KEY_STORE = gs_ktool , KEY_PATH = "gs_ktool/1" , ALGORITHM = AES_256_CBC);
CREATE COLUMN ENCRYPTION KEY MyCEK WITH VALUES (CLIENT_MASTER_KEY = MyCMK1, ALGORITHM = AEAD_AES_256_CBC_HMAC_SHA256, ENCRYPTED_VALUE='abcdefghieffffffefoewinfewgnwlsdngkaisgndfkaghksngsdngjklmnopqrstuvwxyz1');
CREATE COLUMN ENCRYPTION KEY MyCEK1 WITH VALUES (CLIENT_MASTER_KEY = MyCMK, ALGORITHM = AEAD_AES_256_CBC_HMAC_SHA256);
CREATE COLUMN ENCRYPTION KEY MyCEK2 WITH VALUES (CLIENT_MASTER_KEY = MyCMK,CLIENT_MASTER_KEY = MyCMK1, ALGORITHM = AEAD_AES_256_CBC_HMAC_SHA256);
ERROR(CLIENT): duplicate master key args
CREATE COLUMN ENCRYPTION KEY MyCEK3 WITH VALUES (CLIENT_MASTER_KEY = MyCMK,ALGORITHM = RSA_2048, ALGORITHM = AEAD_AES_256_CBC_HMAC_SHA256);
ERROR(CLIENT): duplicate CEK algorithm args
CREATE COLUMN ENCRYPTION KEY MyCEK4 WITH VALUES (CLIENT_MASTER_KEY = MyCMK,ALGORITHM = AEAD_AES_256_CBC_HMAC_SHA256,ENCRYPTED_VALUE='abcdefghijklmno',ENCRYPTED_VALUE='abcdefghijklmnopqrstuvwxyz1');
ERROR(CLIENT): duplicate expected value args
DROP COLUMN ENCRYPTION KEY IF EXISTS MyCEK;
DROP COLUMN ENCRYPTION KEY IF EXISTS MyCEK1;
DROP COLUMN ENCRYPTION KEY IF EXISTS MyCEK2;
NOTICE:  column encryption key "mycek2" does not exist
DROP COLUMN ENCRYPTION KEY IF EXISTS MyCEK3;
NOTICE:  column encryption key "mycek3" does not exist
DROP COLUMN ENCRYPTION KEY IF EXISTS MyCEK4;
NOTICE:  column encryption key "mycek4" does not exist
DROP CLIENT MASTER KEY MyCMK CASCADE;
DROP CLIENT MASTER KEY MyCMK1 CASCADE;
\! gs_ktool -d all
DELETE ALL
 1 2
