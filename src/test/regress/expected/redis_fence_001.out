--- This test is used to ensure the the patterns of auxiliary relations names, like toast table names and toast table index names.
create schema redis_fence_001;
set search_path to redis_fence_001;
--- We do not really need to check the columns of pg_class and pg_partition here. Just remind someone who adds other auxiliary relations 
--- to consider the impact on the redistribution.
\d pg_class
           Table "pg_catalog.pg_class"
      Column      |       Type       | Modifiers 
------------------+------------------+-----------
 relname          | name             | not null
 relnamespace     | oid              | not null
 reltype          | oid              | not null
 reloftype        | oid              | not null
 relowner         | oid              | not null
 relam            | oid              | not null
 relfilenode      | oid              | not null
 reltablespace    | oid              | not null
 relpages         | double precision | not null
 reltuples        | double precision | not null
 relallvisible    | integer          | not null
 reltoastrelid    | oid              | not null
 reltoastidxid    | oid              | not null
 reldeltarelid    | oid              | not null
 reldeltaidx      | oid              | not null
 relcudescrelid   | oid              | not null
 relcudescidx     | oid              | not null
 relhasindex      | boolean          | not null
 relisshared      | boolean          | not null
 relpersistence   | "char"           | not null
 relkind          | "char"           | not null
 relnatts         | smallint         | not null
 relchecks        | smallint         | not null
 relhasoids       | boolean          | not null
 relhaspkey       | boolean          | not null
 relhasrules      | boolean          | not null
 relhastriggers   | boolean          | not null
 relhassubclass   | boolean          | not null
 relcmprs         | tinyint          | not null
 relhasclusterkey | boolean          | not null
 relrowmovement   | boolean          | not null
 parttype         | "char"           | not null
 relfrozenxid     | xid              | not null
 relacl           | aclitem[]        | 
 reloptions       | text[]           | 
Indexes:
    "pg_class_oid_index" UNIQUE, btree (oid) TABLESPACE pg_default
    "pg_class_relname_nsp_index" UNIQUE, btree (relname, relnamespace) TABLESPACE pg_default

\d pg_partition
          Table "pg_catalog.pg_partition"
       Column       |       Type       | Modifiers 
--------------------+------------------+-----------
 relname            | name             | not null
 parttype           | "char"           | not null
 parentid           | oid              | not null
 rangenum           | integer          | not null
 intervalnum        | integer          | not null
 partstrategy       | "char"           | not null
 relfilenode        | oid              | not null
 reltablespace      | oid              | not null
 relpages           | double precision | not null
 reltuples          | double precision | not null
 relallvisible      | integer          | not null
 reltoastrelid      | oid              | not null
 reltoastidxid      | oid              | not null
 indextblid         | oid              | not null
 indisusable        | boolean          | not null
 reldeltarelid      | oid              | not null
 reldeltaidx        | oid              | not null
 relcudescrelid     | oid              | not null
 relcudescidx       | oid              | not null
 relfrozenxid       | xid              | not null
 intspnum           | integer          | 
 partkey            | int2vector       | 
 intervaltablespace | oidvector        | 
 interval           | text[]           | 
 boundaries         | text[]           | 
 transit            | text[]           | 
 reloptions         | text[]           | 
Indexes:
    "pg_partition_partoid_index" UNIQUE, btree (relname, parttype, parentid) TABLESPACE pg_default
    "pg_partition_reloid_index" UNIQUE, btree (oid) TABLESPACE pg_default
    "pg_partition_indextblid_index" btree (indextblid) TABLESPACE pg_default
    "pg_partition_parentoid_index" btree (parttype, parentid) TABLESPACE pg_default

--- row tables.
create table row_table_001(a int, b text);
select B.relname='pg_toast_'||A.oid as relname_matched,C.relname='pg_toast_'||A.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_class C where A.relname='row_table_001' and B.oid=A.reltoastrelid and C.oid=B.reltoastidxid;
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

select pd.deptype from pg_class pc, pg_depend pd where pd.objid=pc.reltoastrelid and pd.refobjid=pc.oid and pc.relname='row_table_001';
 deptype 
---------
 i
(1 row)

create table row_table_002(a int, b text) partition by range(a)(
partition row_table_002_partition_a values less than(10),
partition row_table_002_partition_b values less than(20),
partition row_table_002_partition_c values less than(30)
);
select B.relname from pg_partition A, pg_partition B where A.relname='row_table_002' and B.parentid=A.parentid and B.relfilenode!=0 order by relname;
          relname          
---------------------------
 row_table_002_partition_a
 row_table_002_partition_b
 row_table_002_partition_c
(3 rows)

select A.relname='pg_toast_part_'||C.oid as relname_matched, B.relname='pg_toast_part_'||C.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_partition C where A.oid=C.reltoastrelid and B.oid=A.reltoastidxid and C.relname='row_table_002_partition_a';
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

select A.relname='pg_toast_part_'||C.oid as relname_matched, B.relname='pg_toast_part_'||C.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_partition C where A.oid=C.reltoastrelid and B.oid=A.reltoastidxid and C.relname='row_table_002_partition_b';
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

select A.relname='pg_toast_part_'||C.oid as relname_matched, B.relname='pg_toast_part_'||C.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_partition C where A.oid=C.reltoastrelid and B.oid=A.reltoastidxid and C.relname='row_table_002_partition_c';
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

--- column tables.
create table col_table_001(a int, b text) with(orientation=column);
select B.relname='pg_toast_'||A.oid as relname_matched,C.relname='pg_toast_'||A.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_class C where A.relname='col_table_001' and B.oid=A.reltoastrelid and C.oid=B.reltoastidxid;
 relname_matched | relindex_matched 
-----------------+------------------
(0 rows)

select pd.deptype from pg_class pc, pg_depend pd where pd.objid=pc.reltoastrelid and pd.refobjid=pc.oid and pc.relname='col_table_001';
 deptype 
---------
(0 rows)

--- FIX IT: column store don't support pg_delta_%d_index now.
select B.relname='pg_delta_'||A.oid as relname_matched, A.reldeltaidx=0 as relindex_matched from pg_class A, pg_class B where A.relname='col_table_001' and B.oid=A.reldeltarelid;
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

select pd.deptype from pg_class pc, pg_depend pd where pd.objid=pc.reldeltarelid and pd.refobjid=pc.oid and pc.relname='col_table_001';
 deptype 
---------
 i
(1 row)

select B.relname='pg_cudesc_'||A.oid as relname_matched,C.relname='pg_cudesc_'||A.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_class C where A.relname='col_table_001' and B.oid=A.relcudescrelid and C.oid=A.relcudescidx;
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

select pd.deptype from pg_class pc, pg_depend pd where pd.objid=pc.relcudescrelid and pd.refobjid=pc.oid and pc.relname='col_table_001';
 deptype 
---------
 i
(1 row)

create table col_table_002(a int, b text) with(orientation=column) partition by range(a)(
partition col_table_002_partition_a values less than(10),
partition col_table_002_partition_b values less than(20),
partition col_table_002_partition_c values less than(30)
);
select B.relname from pg_partition A, pg_partition B where A.relname='col_table_002' and B.parentid=A.parentid and B.relfilenode!=0 order by relname;
          relname          
---------------------------
 col_table_002_partition_a
 col_table_002_partition_b
 col_table_002_partition_c
(3 rows)

select A.relname='pg_toast_part_'||C.oid as relname_matched, B.relname='pg_toast_part_'||C.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_partition C where A.oid=C.reltoastrelid and B.oid=A.reltoastidxid and C.relname='col_table_002_partition_a';
 relname_matched | relindex_matched 
-----------------+------------------
(0 rows)

select A.relname='pg_toast_part_'||C.oid as relname_matched, B.relname='pg_toast_part_'||C.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_partition C where A.oid=C.reltoastrelid and B.oid=A.reltoastidxid and C.relname='col_table_002_partition_b';
 relname_matched | relindex_matched 
-----------------+------------------
(0 rows)

select A.relname='pg_toast_part_'||C.oid as relname_matched, B.relname='pg_toast_part_'||C.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_partition C where A.oid=C.reltoastrelid and B.oid=A.reltoastidxid and C.relname='col_table_002_partition_c';
 relname_matched | relindex_matched 
-----------------+------------------
(0 rows)

--- FIX IT: column store don't support pg_delta_part_%d_index now.
select A.relname='pg_delta_part_'||B.oid as relname_matched, B.reldeltaidx=0 as relindex_matched from pg_class A, pg_partition B where A.oid=B.reldeltarelid and B.relname='col_table_002_partition_a';
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

select A.relname='pg_delta_part_'||B.oid as relname_matched, B.reldeltaidx=0 as relindex_matched from pg_class A, pg_partition B where A.oid=B.reldeltarelid and B.relname='col_table_002_partition_b';
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

select A.relname='pg_delta_part_'||B.oid as relname_matched, B.reldeltaidx=0 as relindex_matched from pg_class A, pg_partition B where A.oid=B.reldeltarelid and B.relname='col_table_002_partition_c';
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

select A.relname='pg_cudesc_part_'||C.oid as relname_matched, B.relname='pg_cudesc_part_'||C.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_partition C where A.oid=C.relcudescrelid and B.oid=C.relcudescidx and C.relname='col_table_002_partition_a';
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

select A.relname='pg_cudesc_part_'||C.oid as relname_matched, B.relname='pg_cudesc_part_'||C.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_partition C where A.oid=C.relcudescrelid and B.oid=C.relcudescidx and C.relname='col_table_002_partition_b';
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

select A.relname='pg_cudesc_part_'||C.oid as relname_matched, B.relname='pg_cudesc_part_'||C.oid||'_index' as relindex_matched from pg_class A, pg_class B, pg_partition C where A.oid=C.relcudescrelid and B.oid=C.relcudescidx and C.relname='col_table_002_partition_c';
 relname_matched | relindex_matched 
-----------------+------------------
 t               | t
(1 row)

drop schema redis_fence_001 cascade;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to table row_table_001
drop cascades to table row_table_002
drop cascades to table col_table_001
drop cascades to table col_table_002
