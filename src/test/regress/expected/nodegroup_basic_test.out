/*---------------------------------------------------------------------------------------
 *
 * Test basic nodegroup functionality
 *        #1. CREATE/DROP NDOE GROUP with give node lists
 *        #2. CREATE/DROP TABLE TO NDOE GROUP
 *        #3. SIMPLE QUERY ON table which is one *created* NodeGroup
 *        #4. Basic nagtive tests that we don't support for now(will remove)
 *        #5. There is no installation group
 *
 * Portions Copyright (c) 2016, Huawei
 *
 *
 * IDENTIFICATION
 *	  src/test/regress/sql/nodegroup_basic_test.sql
 *---------------------------------------------------------------------------------------
 */
/*
 * Checkpoint 1
 * Verify the initial node/nodegroup information
 */
create schema nodegroup_basic_test;
set current_schema = nodegroup_basic_test;
set expected_computing_nodegroup='group1';
select node_name, node_type from pgxc_node order by 1,2;
  node_name   | node_type 
--------------+-----------
 coordinator1 | C
 coordinator2 | C
 coordinator3 | C
 datanode1    | D
 datanode10   | D
 datanode11   | D
 datanode12   | D
 datanode2    | D
 datanode3    | D
 datanode4    | D
 datanode5    | D
 datanode6    | D
 datanode7    | D
 datanode8    | D
 datanode9    | D
(15 rows)

-- Before any operation, we need verify whether the data content in pgxc_group is correct
-- we should see all node group information in pgxc_group in each coordinator nodes
execute direct on (coordinator1) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution |                              group_members                              
------------+-------------------+-------------------------------------------------------------------------
 group1     | n                 | 16384 16393 16394 16395 16385 16386 16387 16388 16389 16390 16391 16392
(1 row)

execute direct on (coordinator2) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution |                              group_members                              
------------+-------------------+-------------------------------------------------------------------------
 group1     | n                 | 16384 16393 16394 16395 16385 16386 16387 16388 16389 16390 16391 16392
(1 row)

execute direct on (coordinator2) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution |                              group_members                              
------------+-------------------+-------------------------------------------------------------------------
 group1     | n                 | 16384 16393 16394 16395 16385 16386 16387 16388 16389 16390 16391 16392
(1 row)

-- we shouldn't see any node group information in pgxc_group in each data nodes
execute direct on (datanode1) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode2) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode3) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode4) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode5) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode6) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode7) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode8) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode9) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode10) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode11) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode12) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

-- Test nodegroup create
create node group ngroup1 with (datanode1, datanode3, datanode5, datanode7);
create node group ngroup2 with (datanode2, datanode4, datanode6, datanode8, datanode10, datanode12);
create node group ngroup3 with (datanode1, datanode2, datanode3, datanode4, datanode5, datanode6);
/*
 * Checkpoint 2
 *
 * After creating node group, reverify nodegroup information in pgxc_group
 * ngroup1: datanode1 datanode3 datanode5 datanode7
 * ngroup2: datanode2 datanode4 datanode6 datanode8 datanode10 datanode12
 * ngroup3: datanode1 datanode2 datanode3 datanode4 datanode5 datanode6
 *
 * Note: 'group1' is the default gaussdb nodegroup(for whole cluster) created at initdb time
 *       verify nodegroup's catalog information is correctly populated
 */
-- we should see all node group information in pgxc_group in each coordinator nodes
execute direct on (coordinator1) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution |                              group_members                              
------------+-------------------+-------------------------------------------------------------------------
 group1     | n                 | 16384 16393 16394 16395 16385 16386 16387 16388 16389 16390 16391 16392
 ngroup1    | n                 | 16384 16386 16388 16390
 ngroup2    | n                 | 16393 16395 16385 16387 16389 16391
 ngroup3    | n                 | 16384 16385 16386 16387 16388 16389
(4 rows)

execute direct on (coordinator2) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution |                              group_members                              
------------+-------------------+-------------------------------------------------------------------------
 group1     | n                 | 16384 16393 16394 16395 16385 16386 16387 16388 16389 16390 16391 16392
 ngroup1    | n                 | 16384 16386 16388 16390
 ngroup2    | n                 | 16393 16395 16385 16387 16389 16391
 ngroup3    | n                 | 16384 16385 16386 16387 16388 16389
(4 rows)

execute direct on (coordinator2) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution |                              group_members                              
------------+-------------------+-------------------------------------------------------------------------
 group1     | n                 | 16384 16393 16394 16395 16385 16386 16387 16388 16389 16390 16391 16392
 ngroup1    | n                 | 16384 16386 16388 16390
 ngroup2    | n                 | 16393 16395 16385 16387 16389 16391
 ngroup3    | n                 | 16384 16385 16386 16387 16388 16389
(4 rows)

-- we shouldn't see any node group information in pgxc_group in each data nodes
execute direct on (datanode1) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode2) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode3) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode4) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode5) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode6) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode7) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode8) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode9) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode10) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode11) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode12) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

-- T1 in default group
create table t1(c1 int, c2 int) distribute by hash(c1);
insert into t1 select v,v from generate_series(1,30) as v;
create table t1ng1(c1 int, c2 int) distribute by hash(c1) to group ngroup1;
create table t1ng2(c1 int, c2 int) distribute by hash(c1) to group ngroup2;
create table t1ng3(c1 int, c2 int) distribute by hash(c1) to group ngroup3;
insert into t1ng1 select v,v from generate_series(1,30) as v;
insert into t1ng2 select v,v from generate_series(1,30) as v;
insert into t1ng3 select v,v from generate_series(1,30) as v;
select * from t1 order by 1;
 c1 | c2 
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
(30 rows)

select * from t1ng1 order by 1;
 c1 | c2 
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
(30 rows)

select * from t1ng2 order by 1;
 c1 | c2 
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
(30 rows)

select * from t1ng3 order by 1;
 c1 | c2 
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
(30 rows)

-- test if index can be create/dropped
create index t1ix on t1(c2);
create index t1ng1ix on t1ng1(c2);
create index t1ng2ix on t1ng2(c2);
create index t1ng3ix on t1ng3(c2);
create view t1v as select * from t1;
create view t1ng1v as select * from t1ng1;
create view t1ng2v as select * from t1ng2;
create view t1ng3v as select * from t1ng3;
-- verify access via index
set enable_seqscan=false;
show enable_seqscan;
 enable_seqscan 
----------------
 off
(1 row)

select c2 from t1 order by 1;
 c2 
----
  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
(30 rows)

select c2 from t1ng1 order by 1;
 c2 
----
  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
(30 rows)

select c2 from t1ng2 order by 1;
 c2 
----
  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
(30 rows)

select c2 from t1ng3 order by 1;
 c2 
----
  1
  2
  3
  4
  5
  6
  7
  8
  9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
(30 rows)

set enable_seqscan=true;
show enable_seqscan;
 enable_seqscan 
----------------
 on
(1 row)

-- verify access via view
select * from t1v order by 1;
 c1 | c2 
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
(30 rows)

select * from t1ng1v order by 1;
 c1 | c2 
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
(30 rows)

select * from t1ng2v order by 1;
 c1 | c2 
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
(30 rows)

select * from t1ng3v order by 1;
 c1 | c2 
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
 29 | 29
 30 | 30
(30 rows)

-- simple update/delete tests
delete from t1 where c1 < 15;
delete from t1ng1 where c1 < 15;
delete from t1ng2 where c1 < 15;
delete from t1ng3 where c1 < 15;
update t1 set c2 = 10*c2;
update t1ng1 set c2 = 10*c2;
update t1ng2 set c2 = 10*c2;
update t1ng3 set c2 = 10*c2;
-- verify update/delete results via base table (results should be identical)
select * from t1 order by 1;
 c1 | c2  
----+-----
 15 | 150
 16 | 160
 17 | 170
 18 | 180
 19 | 190
 20 | 200
 21 | 210
 22 | 220
 23 | 230
 24 | 240
 25 | 250
 26 | 260
 27 | 270
 28 | 280
 29 | 290
 30 | 300
(16 rows)

select * from t1ng1 order by 1;
 c1 | c2  
----+-----
 15 | 150
 16 | 160
 17 | 170
 18 | 180
 19 | 190
 20 | 200
 21 | 210
 22 | 220
 23 | 230
 24 | 240
 25 | 250
 26 | 260
 27 | 270
 28 | 280
 29 | 290
 30 | 300
(16 rows)

select * from t1ng2 order by 1;
 c1 | c2  
----+-----
 15 | 150
 16 | 160
 17 | 170
 18 | 180
 19 | 190
 20 | 200
 21 | 210
 22 | 220
 23 | 230
 24 | 240
 25 | 250
 26 | 260
 27 | 270
 28 | 280
 29 | 290
 30 | 300
(16 rows)

select * from t1ng3 order by 1;
 c1 | c2  
----+-----
 15 | 150
 16 | 160
 17 | 170
 18 | 180
 19 | 190
 20 | 200
 21 | 210
 22 | 220
 23 | 230
 24 | 240
 25 | 250
 26 | 260
 27 | 270
 28 | 280
 29 | 290
 30 | 300
(16 rows)

-- verify update/delete results via view (results should be identical)
select * from t1v order by 1;
 c1 | c2  
----+-----
 15 | 150
 16 | 160
 17 | 170
 18 | 180
 19 | 190
 20 | 200
 21 | 210
 22 | 220
 23 | 230
 24 | 240
 25 | 250
 26 | 260
 27 | 270
 28 | 280
 29 | 290
 30 | 300
(16 rows)

select * from t1ng1v order by 1;
 c1 | c2  
----+-----
 15 | 150
 16 | 160
 17 | 170
 18 | 180
 19 | 190
 20 | 200
 21 | 210
 22 | 220
 23 | 230
 24 | 240
 25 | 250
 26 | 260
 27 | 270
 28 | 280
 29 | 290
 30 | 300
(16 rows)

select * from t1ng2v order by 1;
 c1 | c2  
----+-----
 15 | 150
 16 | 160
 17 | 170
 18 | 180
 19 | 190
 20 | 200
 21 | 210
 22 | 220
 23 | 230
 24 | 240
 25 | 250
 26 | 260
 27 | 270
 28 | 280
 29 | 290
 30 | 300
(16 rows)

select * from t1ng3v order by 1;
 c1 | c2  
----+-----
 15 | 150
 16 | 160
 17 | 170
 18 | 180
 19 | 190
 20 | 200
 21 | 210
 22 | 220
 23 | 230
 24 | 240
 25 | 250
 26 | 260
 27 | 270
 28 | 280
 29 | 290
 30 | 300
(16 rows)

-- verify delete with shuffle
create table dt1 (a int, b int, c int) distribute by hash (a) to group ngroup3;
create table dt2 (a int, b int) distribute by hash(a) to group ngroup3;
insert into dt1 values (1,1,1);
insert into dt1 values (2,2,2);
insert into dt2 values (1,1);
insert into dt2 values (3,3);
delete from dt1 using dt2 where dt1.b = dt2.a and dt1.c = dt2.b;
select * from dt1 order by a, b, c;
 a | b | c 
---+---+---
 2 | 2 | 2
(1 row)

select * from dt2 order by a, b;
 a | b 
---+---
 1 | 1
 3 | 3
(2 rows)

drop table dt1;
drop table dt2;
-- verify aggregation happens on correct nodes
explain (costs off) select count(*),c1 from t1 group by c1;
       QUERY PLAN        
-------------------------
 Data Node Scan
   Node/s: All datanodes
(2 rows)

explain (costs off) select count(*),c2 from t1 group by c2;
                QUERY PLAN                 
-------------------------------------------
 Streaming (type: GATHER)
   Node/s: All datanodes
   ->  HashAggregate
         Group By Key: c2
         ->  Streaming(type: REDISTRIBUTE)
               Spawn on: All datanodes
               ->  Seq Scan on t1
(7 rows)

explain (costs off) select count(*),c1 from t1ng1 group by c1;
                      QUERY PLAN                      
------------------------------------------------------
 Data Node Scan
   Node/s: datanode1, datanode3, datanode5, datanode7
(2 rows)

explain (costs off) select count(*),c2 from t1ng1 group by c2;
                                  QUERY PLAN                                  
------------------------------------------------------------------------------
 Streaming (type: GATHER)
   Node/s: All datanodes
   ->  HashAggregate
         Group By Key: c2
         ->  Streaming(type: REDISTRIBUTE)
               Spawn on: (ngroup1) datanode1, datanode3, datanode5, datanode7
               ->  HashAggregate
                     Group By Key: c2
                     ->  Seq Scan on t1ng1
(9 rows)

explain (costs off) select count(*),c1 from t1ng2 group by c1;
                                       QUERY PLAN                                       
----------------------------------------------------------------------------------------
 Data Node Scan
   Node/s: (ngroup2) datanode10, datanode12, datanode2, datanode4, datanode6, datanode8
(2 rows)

explain (costs off) select count(*),c2 from t1ng2 group by c2;
                                              QUERY PLAN                                              
------------------------------------------------------------------------------------------------------
 Streaming (type: GATHER)
   Node/s: All datanodes
   ->  HashAggregate
         Group By Key: c2
         ->  Streaming(type: REDISTRIBUTE)
               Spawn on: (ngroup2) datanode10, datanode12, datanode2, datanode4, datanode6, datanode8
               ->  HashAggregate
                     Group By Key: c2
                     ->  Seq Scan on t1ng2
(9 rows)

explain (costs off) select count(*),c1 from t1ng3 group by c1;
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Data Node Scan
   Node/s: (ngroup3) datanode1, datanode2, datanode3, datanode4, datanode5, datanode6
(2 rows)

explain (costs off) select count(*),c2 from t1ng3 group by c2;
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Streaming (type: GATHER)
   Node/s: All datanodes
   ->  HashAggregate
         Group By Key: c2
         ->  Streaming(type: REDISTRIBUTE)
               Spawn on: (ngroup3) datanode1, datanode2, datanode3, datanode4, datanode5, datanode6
               ->  HashAggregate
                     Group By Key: c2
                     ->  Seq Scan on t1ng3
(9 rows)

/*
 * Checkpint 3
 * check point to see if index,tables created and they are correctl populated into pgxc_class
 */
execute direct on (coordinator1) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
   nodename   |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup  | redistributed | redis_order | pcattnum 
--------------+----------------------+---------+---------+---------------+-----------------+---------------+---------+---------------+-------------+----------
 coordinator1 | nodegroup_basic_test | t1      | r       | H             |               1 |          4096 | group1  | n             |        1024 | 1
 coordinator1 | nodegroup_basic_test | t1ix    | i       |               |                 |               |         |               |             | 
 coordinator1 | nodegroup_basic_test | t1ng1   | r       | H             |               1 |          4096 | ngroup1 | n             |        1024 | 1
 coordinator1 | nodegroup_basic_test | t1ng1ix | i       |               |                 |               |         |               |             | 
 coordinator1 | nodegroup_basic_test | t1ng1v  | v       |               |                 |               |         |               |             | 
 coordinator1 | nodegroup_basic_test | t1ng2   | r       | H             |               1 |          4096 | ngroup2 | n             |        1024 | 1
 coordinator1 | nodegroup_basic_test | t1ng2ix | i       |               |                 |               |         |               |             | 
 coordinator1 | nodegroup_basic_test | t1ng2v  | v       |               |                 |               |         |               |             | 
 coordinator1 | nodegroup_basic_test | t1ng3   | r       | H             |               1 |          4096 | ngroup3 | n             |        1024 | 1
 coordinator1 | nodegroup_basic_test | t1ng3ix | i       |               |                 |               |         |               |             | 
 coordinator1 | nodegroup_basic_test | t1ng3v  | v       |               |                 |               |         |               |             | 
 coordinator1 | nodegroup_basic_test | t1v     | v       |               |                 |               |         |               |             | 
(12 rows)

execute direct on (coordinator2) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
   nodename   |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup  | redistributed | redis_order | pcattnum 
--------------+----------------------+---------+---------+---------------+-----------------+---------------+---------+---------------+-------------+----------
 coordinator2 | nodegroup_basic_test | t1      | r       | H             |               1 |          4096 | group1  | n             |        1024 | 1
 coordinator2 | nodegroup_basic_test | t1ix    | i       |               |                 |               |         |               |             | 
 coordinator2 | nodegroup_basic_test | t1ng1   | r       | H             |               1 |          4096 | ngroup1 | n             |        1024 | 1
 coordinator2 | nodegroup_basic_test | t1ng1ix | i       |               |                 |               |         |               |             | 
 coordinator2 | nodegroup_basic_test | t1ng1v  | v       |               |                 |               |         |               |             | 
 coordinator2 | nodegroup_basic_test | t1ng2   | r       | H             |               1 |          4096 | ngroup2 | n             |        1024 | 1
 coordinator2 | nodegroup_basic_test | t1ng2ix | i       |               |                 |               |         |               |             | 
 coordinator2 | nodegroup_basic_test | t1ng2v  | v       |               |                 |               |         |               |             | 
 coordinator2 | nodegroup_basic_test | t1ng3   | r       | H             |               1 |          4096 | ngroup3 | n             |        1024 | 1
 coordinator2 | nodegroup_basic_test | t1ng3ix | i       |               |                 |               |         |               |             | 
 coordinator2 | nodegroup_basic_test | t1ng3v  | v       |               |                 |               |         |               |             | 
 coordinator2 | nodegroup_basic_test | t1v     | v       |               |                 |               |         |               |             | 
(12 rows)

execute direct on (coordinator3) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
   nodename   |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup  | redistributed | redis_order | pcattnum 
--------------+----------------------+---------+---------+---------------+-----------------+---------------+---------+---------------+-------------+----------
 coordinator3 | nodegroup_basic_test | t1      | r       | H             |               1 |          4096 | group1  | n             |        1024 | 1
 coordinator3 | nodegroup_basic_test | t1ix    | i       |               |                 |               |         |               |             | 
 coordinator3 | nodegroup_basic_test | t1ng1   | r       | H             |               1 |          4096 | ngroup1 | n             |        1024 | 1
 coordinator3 | nodegroup_basic_test | t1ng1ix | i       |               |                 |               |         |               |             | 
 coordinator3 | nodegroup_basic_test | t1ng1v  | v       |               |                 |               |         |               |             | 
 coordinator3 | nodegroup_basic_test | t1ng2   | r       | H             |               1 |          4096 | ngroup2 | n             |        1024 | 1
 coordinator3 | nodegroup_basic_test | t1ng2ix | i       |               |                 |               |         |               |             | 
 coordinator3 | nodegroup_basic_test | t1ng2v  | v       |               |                 |               |         |               |             | 
 coordinator3 | nodegroup_basic_test | t1ng3   | r       | H             |               1 |          4096 | ngroup3 | n             |        1024 | 1
 coordinator3 | nodegroup_basic_test | t1ng3ix | i       |               |                 |               |         |               |             | 
 coordinator3 | nodegroup_basic_test | t1ng3v  | v       |               |                 |               |         |               |             | 
 coordinator3 | nodegroup_basic_test | t1v     | v       |               |                 |               |         |               |             | 
(12 rows)

execute direct on (datanode1) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
 nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
-----------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode1 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode1 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
 datanode1 | nodegroup_basic_test | t1ng1   | r       |               |                 |               |        |               |             | 
 datanode1 | nodegroup_basic_test | t1ng1ix | i       |               |                 |               |        |               |             | 
 datanode1 | nodegroup_basic_test | t1ng3   | r       |               |                 |               |        |               |             | 
 datanode1 | nodegroup_basic_test | t1ng3ix | i       |               |                 |               |        |               |             | 
(6 rows)

execute direct on (datanode2) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
 nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
-----------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode2 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode2 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
 datanode2 | nodegroup_basic_test | t1ng2   | r       |               |                 |               |        |               |             | 
 datanode2 | nodegroup_basic_test | t1ng2ix | i       |               |                 |               |        |               |             | 
 datanode2 | nodegroup_basic_test | t1ng3   | r       |               |                 |               |        |               |             | 
 datanode2 | nodegroup_basic_test | t1ng3ix | i       |               |                 |               |        |               |             | 
(6 rows)

execute direct on (datanode3) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
 nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
-----------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode3 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode3 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
 datanode3 | nodegroup_basic_test | t1ng1   | r       |               |                 |               |        |               |             | 
 datanode3 | nodegroup_basic_test | t1ng1ix | i       |               |                 |               |        |               |             | 
 datanode3 | nodegroup_basic_test | t1ng3   | r       |               |                 |               |        |               |             | 
 datanode3 | nodegroup_basic_test | t1ng3ix | i       |               |                 |               |        |               |             | 
(6 rows)

execute direct on (datanode4) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
 nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
-----------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode4 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode4 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
 datanode4 | nodegroup_basic_test | t1ng2   | r       |               |                 |               |        |               |             | 
 datanode4 | nodegroup_basic_test | t1ng2ix | i       |               |                 |               |        |               |             | 
 datanode4 | nodegroup_basic_test | t1ng3   | r       |               |                 |               |        |               |             | 
 datanode4 | nodegroup_basic_test | t1ng3ix | i       |               |                 |               |        |               |             | 
(6 rows)

execute direct on (datanode5) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
 nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
-----------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode5 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode5 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
 datanode5 | nodegroup_basic_test | t1ng1   | r       |               |                 |               |        |               |             | 
 datanode5 | nodegroup_basic_test | t1ng1ix | i       |               |                 |               |        |               |             | 
 datanode5 | nodegroup_basic_test | t1ng3   | r       |               |                 |               |        |               |             | 
 datanode5 | nodegroup_basic_test | t1ng3ix | i       |               |                 |               |        |               |             | 
(6 rows)

execute direct on (datanode5) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
 nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
-----------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode5 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode5 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
 datanode5 | nodegroup_basic_test | t1ng1   | r       |               |                 |               |        |               |             | 
 datanode5 | nodegroup_basic_test | t1ng1ix | i       |               |                 |               |        |               |             | 
 datanode5 | nodegroup_basic_test | t1ng3   | r       |               |                 |               |        |               |             | 
 datanode5 | nodegroup_basic_test | t1ng3ix | i       |               |                 |               |        |               |             | 
(6 rows)

execute direct on (datanode6) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
 nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
-----------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode6 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode6 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
 datanode6 | nodegroup_basic_test | t1ng2   | r       |               |                 |               |        |               |             | 
 datanode6 | nodegroup_basic_test | t1ng2ix | i       |               |                 |               |        |               |             | 
 datanode6 | nodegroup_basic_test | t1ng3   | r       |               |                 |               |        |               |             | 
 datanode6 | nodegroup_basic_test | t1ng3ix | i       |               |                 |               |        |               |             | 
(6 rows)

execute direct on (datanode7) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
 nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
-----------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode7 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode7 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
 datanode7 | nodegroup_basic_test | t1ng1   | r       |               |                 |               |        |               |             | 
 datanode7 | nodegroup_basic_test | t1ng1ix | i       |               |                 |               |        |               |             | 
(4 rows)

execute direct on (datanode8) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
 nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
-----------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode8 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode8 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
 datanode8 | nodegroup_basic_test | t1ng2   | r       |               |                 |               |        |               |             | 
 datanode8 | nodegroup_basic_test | t1ng2ix | i       |               |                 |               |        |               |             | 
(4 rows)

execute direct on (datanode9) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
 nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
-----------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode9 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode9 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
(2 rows)

execute direct on (datanode10) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
  nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
------------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode10 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode10 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
 datanode10 | nodegroup_basic_test | t1ng2   | r       |               |                 |               |        |               |             | 
 datanode10 | nodegroup_basic_test | t1ng2ix | i       |               |                 |               |        |               |             | 
(4 rows)

execute direct on (datanode11) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
  nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
------------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode11 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode11 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
(2 rows)

execute direct on (datanode12) '
    select (select pgxc_node_str()) as nodename, nspname, relname, relkind, pclocatortype, pchashalgorithm, pchashbuckets, pgroup, redistributed, redis_order, pcattnum
    from pg_class left join pgxc_class on (pg_class.oid = pgxc_class.pcrelid)
                       join pg_namespace on (pg_class.relnamespace = pg_namespace.oid)
    where pg_class.relname like ''t1%'' order by 1,2,3,4;
';
  nodename  |       nspname        | relname | relkind | pclocatortype | pchashalgorithm | pchashbuckets | pgroup | redistributed | redis_order | pcattnum 
------------+----------------------+---------+---------+---------------+-----------------+---------------+--------+---------------+-------------+----------
 datanode12 | nodegroup_basic_test | t1      | r       |               |                 |               |        |               |             | 
 datanode12 | nodegroup_basic_test | t1ix    | i       |               |                 |               |        |               |             | 
 datanode12 | nodegroup_basic_test | t1ng2   | r       |               |                 |               |        |               |             | 
 datanode12 | nodegroup_basic_test | t1ng2ix | i       |               |                 |               |        |               |             | 
(4 rows)

-- verify index drop
drop index t1ix;
drop index t1ng1ix;
-- t1ng2ix and t1ng3ix are dropped along with t1ng2 and t1ng3's table drop
-- simple multi-nodegroup join case
select * from t1 join t1ng1 on t1.c1 = t1ng1.c1 order by 1;
 c1 | c2  | c1 | c2  
----+-----+----+-----
 15 | 150 | 15 | 150
 16 | 160 | 16 | 160
 17 | 170 | 17 | 170
 18 | 180 | 18 | 180
 19 | 190 | 19 | 190
 20 | 200 | 20 | 200
 21 | 210 | 21 | 210
 22 | 220 | 22 | 220
 23 | 230 | 23 | 230
 24 | 240 | 24 | 240
 25 | 250 | 25 | 250
 26 | 260 | 26 | 260
 27 | 270 | 27 | 270
 28 | 280 | 28 | 280
 29 | 290 | 29 | 290
 30 | 300 | 30 | 300
(16 rows)

select * from t1 join t1ng2 on t1.c1 = t1ng2.c1 order by 1;
 c1 | c2  | c1 | c2  
----+-----+----+-----
 15 | 150 | 15 | 150
 16 | 160 | 16 | 160
 17 | 170 | 17 | 170
 18 | 180 | 18 | 180
 19 | 190 | 19 | 190
 20 | 200 | 20 | 200
 21 | 210 | 21 | 210
 22 | 220 | 22 | 220
 23 | 230 | 23 | 230
 24 | 240 | 24 | 240
 25 | 250 | 25 | 250
 26 | 260 | 26 | 260
 27 | 270 | 27 | 270
 28 | 280 | 28 | 280
 29 | 290 | 29 | 290
 30 | 300 | 30 | 300
(16 rows)

-- should fail as we do not support drop multiple tables from different nodegroup
drop table t1ng1,t1ng2,t1ng3;
ERROR:  NOT-SUPPORT: Not support DROP multiple objects different nodegroup
-- should fail as we do not support drop node group where exists tables
drop node group ngroup1;
ERROR:  cannot drop 'ngroup1' because other objects depend on it
drop node group ngroup2;
ERROR:  cannot drop 'ngroup2' because other objects depend on it
drop node group ngroup3;
ERROR:  cannot drop 'ngroup3' because other objects depend on it
-- should fail as default_computing node group is pointing to existing node group
set expected_computing_nodegroup=ngroup1;
reset expected_computing_nodegroup;
-- drop views
drop view t1ng1v;
drop view t1ng2v;
drop view t1ng3v;
-- drop tables
drop table t1ng1;
drop table t1ng2;
drop table t1ng3;
-- should be OK as we already have all underlying tables dropped
drop node group ngroup1;
drop node group ngroup2;
drop node group ngroup3;
/*
 * Checkpoint 4
 * After drop all testing objects, we should see nothing in pgxc_group(besides t1 as it is created under default nodegroup)
 */
-- check coordinator nodes
execute direct on (coordinator1) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution |                              group_members                              
------------+-------------------+-------------------------------------------------------------------------
 group1     | n                 | 16384 16393 16394 16395 16385 16386 16387 16388 16389 16390 16391 16392
(1 row)

execute direct on (coordinator2) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution |                              group_members                              
------------+-------------------+-------------------------------------------------------------------------
 group1     | n                 | 16384 16393 16394 16395 16385 16386 16387 16388 16389 16390 16391 16392
(1 row)

execute direct on (coordinator2) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution |                              group_members                              
------------+-------------------+-------------------------------------------------------------------------
 group1     | n                 | 16384 16393 16394 16395 16385 16386 16387 16388 16389 16390 16391 16392
(1 row)

-- check data nodes
execute direct on (datanode1) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode2) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode3) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode4) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode5) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode6) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode7) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode8) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode9) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode10) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode11) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

execute direct on (datanode12) 'select group_name, in_redistribution, group_members from pgxc_group order by 1,2';
 group_name | in_redistribution | group_members 
------------+-------------------+---------------
(0 rows)

drop view t1v;
drop table t1;
drop schema nodegroup_basic_test cascade;
/*
 * Checkpoint 5
 * There is no installation group
 */
set current_schema = public;
set xc_maintenance_mode=on;
start transaction;
execute direct on (coordinator1) 'update pgxc_group set is_installation=false where group_name=''group1''';
execute direct on (coordinator2) 'update pgxc_group set is_installation=false where group_name=''group1''';
execute direct on (coordinator3) 'update pgxc_group set is_installation=false where group_name=''group1''';
execute direct on (coordinator1) 'select group_name, is_installation from pgxc_group';
 group_name | is_installation 
------------+-----------------
 group1     | f
(1 row)

execute direct on (coordinator2) 'select group_name, is_installation from pgxc_group';
 group_name | is_installation 
------------+-----------------
 group1     | f
(1 row)

execute direct on (coordinator3) 'select group_name, is_installation from pgxc_group';
 group_name | is_installation 
------------+-----------------
 group1     | f
(1 row)

commit;
reset xc_maintenance_mode;
-- should succeed as current MPPDB is none-multi nodegroup system, we identify
-- first node group as installation old group
create table t1(c1 int, c2 int);
drop table t1;
-- should fail in multi node group environment
create node group group2 with (datanode1);
select group_name, is_installation from pgxc_group order by 1;
 group_name | is_installation 
------------+-----------------
 group1     | f
 group2     | f
(2 rows)

create table t2(c1 int, c2 int);
ERROR:  Installation node group is not defined in current cluster
drop node group group2;
set xc_maintenance_mode=on;
start transaction;
execute direct on (coordinator1) 'update pgxc_group set is_installation=true where group_name=''group1''';
execute direct on (coordinator2) 'update pgxc_group set is_installation=true where group_name=''group1''';
execute direct on (coordinator3) 'update pgxc_group set is_installation=true where group_name=''group1''';
execute direct on (coordinator1) 'select group_name, is_installation from pgxc_group';
 group_name | is_installation 
------------+-----------------
 group1     | t
(1 row)

execute direct on (coordinator2) 'select group_name, is_installation from pgxc_group';
 group_name | is_installation 
------------+-----------------
 group1     | t
(1 row)

execute direct on (coordinator3) 'select group_name, is_installation from pgxc_group';
 group_name | is_installation 
------------+-----------------
 group1     | t
(1 row)

commit;
reset xc_maintenance_mode;
