\! gs_ktool -d all
DELETE ALL

\! gs_ktool -g
GENERATE
1
DROP CLIENT MASTER KEY MyCMK CASCADE;
ERROR:  client master key "mycmk" does not exist
CREATE CLIENT MASTER KEY MyCMK WITH ( KEY_STORE = gs_ktool , KEY_PATH = "gs_ktool/1" , ALGORITHM = AES_256_CBC);
CREATE COLUMN ENCRYPTION KEY MyCEK770 WITH VALUES (CLIENT_MASTER_KEY = MyCMK, ALGORITHM = AEAD_AES_256_CBC_HMAC_SHA256);
CREATE TABLE IF NOT EXISTS tr2(i1 INT ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED) , i2 INT);
INSERT INTO tr2 (i1, i2) VALUES (12, 13);
INSERT INTO tr2 VALUES (15,16);
INSERT INTO tr2 (i1, i2) VALUES (22, 23), (24, 25), (26,27);
INSERT INTO tr2 VALUES (35,36), (36,37), (38,39);
SELECT * from tr2 ORDER BY i2;
 i1 | i2 
----+----
 12 | 13
 15 | 16
 22 | 23
 24 | 25
 26 | 27
 35 | 36
 36 | 37
 38 | 39
(8 rows)

SELECT i1 FROM tr2 WHERE i2  = 25;
 i1 
----
 24
(1 row)

SELECT i1 FROM tr2 WHERE i1  = 24;
ERROR(CLIENT): operator is not allowed on datatype of this column
DROP TABLE tr2;
CREATE TABLE IF NOT EXISTS tr1(i1 INT ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = DETERMINISTIC) ,i2 INT ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE =
 RANDOMIZED), i3 INT);
INSERT INTO tr1 VALUES (1, 2, 3);
select * from tr1;
 i1 | i2 | i3 
----+----+----
  1 |  2 |  3
(1 row)

DROP TABLE tr1;
 CREATE TABLE IF NOT EXISTS tr3(i1 INT ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED) ,i2 INT ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE =
 RANDOMIZED), i3 INT);
 INSERT INTO tr3 VALUES (1, 2, 3);
select * from tr3;
 i1 | i2 | i3 
----+----+----
  1 |  2 |  3
(1 row)

DROP TABLE tr3;
CREATE TABLE IF NOT EXISTS tr2(
i INT,
ii INT,
i1 INT1       ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED),
i2 INT2       ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED),
i4 INT4       ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED),
i8 INT8       ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED),
f4 FLOAT4     ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED),
f8 FLOAT8     ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED),
c  CHAR       ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED),
c8 CHAR(8)    ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED),
v  VARCHAR    ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED),
v8 VARCHAR(8) ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED),
b  BYTEA      ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED)
);
INSERT INTO tr2 VALUES ( 1, 1, 1, 1, 1, 1, 3.14, 3.14,'C','IDO'       ,'Ido''s'    , 'Shlomo'    , '\x1234');
BEGIN;
DECLARE select_all_tr2 CURSOR FOR SELECT * from tr2 ORDER BY i;
FETCH 5 from select_all_tr2;
 i | ii | i1 | i2 | i4 | i8 |  f4  |  f8  | c |    c8    |   v   |   v8   |   b    
---+----+----+----+----+----+------+------+---+----------+-------+--------+--------
 1 |  1 | 1  |  1 |  1 |  1 | 3.14 | 3.14 | C | IDO      | Ido's | Shlomo | \x1234
(1 row)

CLOSE select_all_tr2;
END;
INSERT INTO tr2 VALUES (-1, -1, 0,-1,-1,-1,-3.14,-3.14,' ','AVI'       ,'Avi''s'    , 'Kessel'    , '\x5678');
BEGIN;
DECLARE select_all_tr2 CURSOR FOR SELECT * from tr2 ORDER BY i;
FETCH 5 from select_all_tr2;
 i  | ii | i1 | i2 | i4 | i8 |  f4   |  f8   | c |    c8    |   v   |   v8   |   b    
----+----+----+----+----+----+-------+-------+---+----------+-------+--------+--------
 -1 | -1 | 0  | -1 | -1 | -1 | -3.14 | -3.14 |   | AVI      | Avi's | Kessel | \x5678
  1 |  1 | 1  |  1 |  1 |  1 |  3.14 |  3.14 | C | IDO      | Ido's | Shlomo | \x1234
(2 rows)

CLOSE select_all_tr2;
END;
INSERT INTO tr2 VALUES ( 4, 4, 0, 0, 0, 0,-0.14,-0.14,'z','A A       ','A a       ', 'A a       ', '\xababababababababababababababababababababab');
BEGIN;
DECLARE select_all_tr2 CURSOR FOR SELECT * from tr2 ORDER BY i;
FETCH 5 from select_all_tr2;
 i  | ii | i1 | i2 | i4 | i8 |  f4   |  f8   | c |    c8    |     v      |    v8    |                      b                       
----+----+----+----+----+----+-------+-------+---+----------+------------+----------+----------------------------------------------
 -1 | -1 | 0  | -1 | -1 | -1 | -3.14 | -3.14 |   | AVI      | Avi's      | Kessel   | \x5678
  1 |  1 | 1  |  1 |  1 |  1 |  3.14 |  3.14 | C | IDO      | Ido's      | Shlomo   | \x1234
  4 |  4 | 0  |  0 |  0 |  0 |  -.14 |  -.14 | z | A A      | A a        | A a      | \xababababababababababababababababababababab
(3 rows)

CLOSE select_all_tr2;
END;
BEGIN;
DECLARE select_one_tr2 CURSOR FOR SELECT * from tr2 WHERE i1=1 AND ii=1;
ERROR(CLIENT): operator is not allowed on datatype of this column
FETCH 5 from select_one_tr2;
ERROR:  cursor "select_one_tr2" does not exist
CLOSE select_one_tr2;
--?ERROR:  current transaction is aborted, commands ignored until end of transaction block.*
END;
DROP TABLE tr2;
CREATE TABLE products (
    product_no integer DEFAULT 1,
    name text ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED) DEFAULT 'Test Product',
    TITLE varchar(35) NOT NULL DEFAULT ' ',
   price numeric ENCRYPTED WITH (COLUMN_ENCRYPTION_KEY = MyCEK770, ENCRYPTION_TYPE = RANDOMIZED) DEFAULT 9.99,
    MAX_PRICE decimal(6,0) DEFAULT NULL
);
INSERT INTO products (name) VALUES ('Test2');
INSERT INTO products (price) VALUES (34);
INSERT INTO products (name) VALUES (DEFAULT);
INSERT INTO products (price) VALUES (DEFAULT);
INSERT INTO products (name, price) VALUES (DEFAULT, DEFAULT);
INSERT INTO products DEFAULT VALUES;
SELECT * FROM products;
 product_no |     name     | title | price | max_price 
------------+--------------+-------+-------+-----------
          1 | Test Product |       |  9.99 |          
          1 | Test Product |       |  9.99 |          
          1 | Test Product |       |  9.99 |          
          1 | Test Product |       |  9.99 |          
          1 | Test Product |       |    34 |          
          1 | Test2        |       |  9.99 |          
(6 rows)

DROP TABLE products;
DROP CLIENT MASTER KEY MyCMK CASCADE;
NOTICE:  drop cascades to column encryption key: mycek770
\! gs_ktool -d all
DELETE ALL
 1
