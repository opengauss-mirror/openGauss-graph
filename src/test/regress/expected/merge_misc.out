--
-- MERGE INTO
--
-- \h help
\h MERGE
Command:     MERGE
Description: insert, update, or delete rows of a table based upon source data
Syntax:
MERGE INTO table_name [ [ AS ] alias ]
USING { { table_name | view_name } | subquery } [ [ AS ] alias ]
ON ( condition )
[
  WHEN MATCHED THEN
  UPDATE SET { column_name = { expression | subquery | DEFAULT } |
          ( column_name [, ...] ) = ( { expression | subquery | DEFAULT } [, ...] ) } [, ...]
  [ WHERE condition ]
]
[
  WHEN NOT MATCHED THEN
  INSERT { DEFAULT VALUES |
  [ ( column_name [, ...] ) ] VALUES ( { expression | subquery | DEFAULT } [, ...] ) [, ...] [ WHERE condition ] }
];
NOTICE: 'subquery' in the UPDATE and INSERT clauses are only avaliable in CENTRALIZED mode!

-- information_schema.sql_features
SELECT * FROM information_schema.sql_features WHERE feature_name LIKE '%MERGE%' ORDER BY 1;
 feature_id |            feature_name            | sub_feature_id | sub_feature_name | is_supported | is_verified_by | comments 
------------+------------------------------------+----------------+------------------+--------------+----------------+----------
 F312       | MERGE statement                    |                |                  | YES          |                | 
 F313       | Enhanced MERGE statement           |                |                  | YES          |                | 
 F314       | MERGE statement with DELETE branch |                |                  | NO           |                | 
(3 rows)

CREATE SCHEMA mergeinto_misc;
SET current_schema = mergeinto_misc;
CREATE TABLE t1(c1 INT, c2 INT);
CREATE TABLE t2(c1 INT, c2 INT);
MERGE INTO t1 t1 USING t2 t2 ON t1.c1=t2.c1 WHEN NOT MATCHED THEN INSERT(c1,c2) VALUES(c1,c2);
ERROR:  Invalid column reference in the INSERT VALUES Clause
HINT:  You may have referenced target table's column
CREATE TABLE row_update 
(
c1 INT NOT NULL, 
c2 VARCHAR(100) NOT NULL, 
c3 DATE DEFAULT '2018-06-14', 
c4 TIMESTAMP WITH TIME ZONE DEFAULT '2018-06-14 12:30:30+8', 
c5 NUMERIC(18,9) DEFAULT 999999999.999999999 CHECK (c5>100), 
c6 TEXT DEFAULT 'COMMENTS',
UNIQUE(c1,c3,c4)
)
DISTRIBUTE BY HASH(c1,c3)
PARTITION BY RANGE(c4)
(
PARTITION row_on_01 VALUES LESS THAN('19901231'),
PARTITION row_on_02 VALUES LESS THAN('19991231'),
PARTITION row_on_03 VALUES LESS THAN('20151231'),
PARTITION row_on_04 VALUES LESS THAN('20181231')
);
NOTICE:  CREATE TABLE / UNIQUE will create implicit index "row_update_c1_c3_c4_key" for table "row_update"
CREATE TABLE col_update
(
c1 SERIAL NOT NULL, 
c2 VARCHAR(100) NOT NULL, 
c3 DATE DEFAULT '2018-06-14',  
c4 TIMESTAMP WITH TIME ZONE DEFAULT '2018-06-14 12:30:30+8',  
c5 NUMERIC(18,9) DEFAULT -999999999.999999999,  
c6 TEXT DEFAULT 'COMMENTS',
PARTIAL CLUSTER KEY(c1,c3)
)
WITH(ORIENTATION=column, COMPRESSION=high)
DISTRIBUTE BY HASH(c2,c4)
PARTITION BY RANGE(c1)
(
PARTITION col_on_01 VALUES LESS THAN(0),
PARTITION col_on_02 VALUES LESS THAN(100),
PARTITION col_on_03 VALUES LESS THAN(200)
);
NOTICE:  CREATE TABLE will create implicit sequence "col_update_c1_seq" for serial column "col_update.c1"
INSERT INTO row_update VALUES(GENERATE_SERIES(1,100),'A'||CHR(GENERATE_SERIES(60,159))||'Z', DATE'2000-03-01'+GENERATE_SERIES(1,100), TIMESTAMP'2000-03-01 12:00:00.123456'+GENERATE_SERIES(1,100));
INSERT INTO col_update SELECT * FROM row_update;
MERGE INTO row_update t1
USING col_update t2
ON t1.c1=t2.c1
WHEN MATCHED THEN UPDATE SET t1.c6=t2.c2||t2.c6
WHERE t2.c5>100;
SELECT * FROM row_update ORDER BY 1;
 c1  |    c2    |            c3            |                 c4                  |         c5          |        c6        
-----+----------+--------------------------+-------------------------------------+---------------------+------------------
   1 | A<Z      | Thu Mar 02 00:00:00 2000 | Thu Mar 02 12:00:00.123456 2000 PST | 999999999.999999999 | A<ZCOMMENTS
   2 | A=Z      | Fri Mar 03 00:00:00 2000 | Fri Mar 03 12:00:00.123456 2000 PST | 999999999.999999999 | A=ZCOMMENTS
   3 | A>Z      | Sat Mar 04 00:00:00 2000 | Sat Mar 04 12:00:00.123456 2000 PST | 999999999.999999999 | A>ZCOMMENTS
   4 | A?Z      | Sun Mar 05 00:00:00 2000 | Sun Mar 05 12:00:00.123456 2000 PST | 999999999.999999999 | A?ZCOMMENTS
   5 | A@Z      | Mon Mar 06 00:00:00 2000 | Mon Mar 06 12:00:00.123456 2000 PST | 999999999.999999999 | A@ZCOMMENTS
   6 | AAZ      | Tue Mar 07 00:00:00 2000 | Tue Mar 07 12:00:00.123456 2000 PST | 999999999.999999999 | AAZCOMMENTS
   7 | ABZ      | Wed Mar 08 00:00:00 2000 | Wed Mar 08 12:00:00.123456 2000 PST | 999999999.999999999 | ABZCOMMENTS
   8 | ACZ      | Thu Mar 09 00:00:00 2000 | Thu Mar 09 12:00:00.123456 2000 PST | 999999999.999999999 | ACZCOMMENTS
   9 | ADZ      | Fri Mar 10 00:00:00 2000 | Fri Mar 10 12:00:00.123456 2000 PST | 999999999.999999999 | ADZCOMMENTS
  10 | AEZ      | Sat Mar 11 00:00:00 2000 | Sat Mar 11 12:00:00.123456 2000 PST | 999999999.999999999 | AEZCOMMENTS
  11 | AFZ      | Sun Mar 12 00:00:00 2000 | Sun Mar 12 12:00:00.123456 2000 PST | 999999999.999999999 | AFZCOMMENTS
  12 | AGZ      | Mon Mar 13 00:00:00 2000 | Mon Mar 13 12:00:00.123456 2000 PST | 999999999.999999999 | AGZCOMMENTS
  13 | AHZ      | Tue Mar 14 00:00:00 2000 | Tue Mar 14 12:00:00.123456 2000 PST | 999999999.999999999 | AHZCOMMENTS
  14 | AIZ      | Wed Mar 15 00:00:00 2000 | Wed Mar 15 12:00:00.123456 2000 PST | 999999999.999999999 | AIZCOMMENTS
  15 | AJZ      | Thu Mar 16 00:00:00 2000 | Thu Mar 16 12:00:00.123456 2000 PST | 999999999.999999999 | AJZCOMMENTS
  16 | AKZ      | Fri Mar 17 00:00:00 2000 | Fri Mar 17 12:00:00.123456 2000 PST | 999999999.999999999 | AKZCOMMENTS
  17 | ALZ      | Sat Mar 18 00:00:00 2000 | Sat Mar 18 12:00:00.123456 2000 PST | 999999999.999999999 | ALZCOMMENTS
  18 | AMZ      | Sun Mar 19 00:00:00 2000 | Sun Mar 19 12:00:00.123456 2000 PST | 999999999.999999999 | AMZCOMMENTS
  19 | ANZ      | Mon Mar 20 00:00:00 2000 | Mon Mar 20 12:00:00.123456 2000 PST | 999999999.999999999 | ANZCOMMENTS
  20 | AOZ      | Tue Mar 21 00:00:00 2000 | Tue Mar 21 12:00:00.123456 2000 PST | 999999999.999999999 | AOZCOMMENTS
  21 | APZ      | Wed Mar 22 00:00:00 2000 | Wed Mar 22 12:00:00.123456 2000 PST | 999999999.999999999 | APZCOMMENTS
  22 | AQZ      | Thu Mar 23 00:00:00 2000 | Thu Mar 23 12:00:00.123456 2000 PST | 999999999.999999999 | AQZCOMMENTS
  23 | ARZ      | Fri Mar 24 00:00:00 2000 | Fri Mar 24 12:00:00.123456 2000 PST | 999999999.999999999 | ARZCOMMENTS
  24 | ASZ      | Sat Mar 25 00:00:00 2000 | Sat Mar 25 12:00:00.123456 2000 PST | 999999999.999999999 | ASZCOMMENTS
  25 | ATZ      | Sun Mar 26 00:00:00 2000 | Sun Mar 26 12:00:00.123456 2000 PST | 999999999.999999999 | ATZCOMMENTS
  26 | AUZ      | Mon Mar 27 00:00:00 2000 | Mon Mar 27 12:00:00.123456 2000 PST | 999999999.999999999 | AUZCOMMENTS
  27 | AVZ      | Tue Mar 28 00:00:00 2000 | Tue Mar 28 12:00:00.123456 2000 PST | 999999999.999999999 | AVZCOMMENTS
  28 | AWZ      | Wed Mar 29 00:00:00 2000 | Wed Mar 29 12:00:00.123456 2000 PST | 999999999.999999999 | AWZCOMMENTS
  29 | AXZ      | Thu Mar 30 00:00:00 2000 | Thu Mar 30 12:00:00.123456 2000 PST | 999999999.999999999 | AXZCOMMENTS
  30 | AYZ      | Fri Mar 31 00:00:00 2000 | Fri Mar 31 12:00:00.123456 2000 PST | 999999999.999999999 | AYZCOMMENTS
  31 | AZZ      | Sat Apr 01 00:00:00 2000 | Sat Apr 01 12:00:00.123456 2000 PST | 999999999.999999999 | AZZCOMMENTS
  32 | A[Z      | Sun Apr 02 00:00:00 2000 | Sun Apr 02 12:00:00.123456 2000 PDT | 999999999.999999999 | A[ZCOMMENTS
  33 | A\Z      | Mon Apr 03 00:00:00 2000 | Mon Apr 03 12:00:00.123456 2000 PDT | 999999999.999999999 | A\ZCOMMENTS
  34 | A]Z      | Tue Apr 04 00:00:00 2000 | Tue Apr 04 12:00:00.123456 2000 PDT | 999999999.999999999 | A]ZCOMMENTS
  35 | A^Z      | Wed Apr 05 00:00:00 2000 | Wed Apr 05 12:00:00.123456 2000 PDT | 999999999.999999999 | A^ZCOMMENTS
  36 | A_Z      | Thu Apr 06 00:00:00 2000 | Thu Apr 06 12:00:00.123456 2000 PDT | 999999999.999999999 | A_ZCOMMENTS
  37 | A`Z      | Fri Apr 07 00:00:00 2000 | Fri Apr 07 12:00:00.123456 2000 PDT | 999999999.999999999 | A`ZCOMMENTS
  38 | AaZ      | Sat Apr 08 00:00:00 2000 | Sat Apr 08 12:00:00.123456 2000 PDT | 999999999.999999999 | AaZCOMMENTS
  39 | AbZ      | Sun Apr 09 00:00:00 2000 | Sun Apr 09 12:00:00.123456 2000 PDT | 999999999.999999999 | AbZCOMMENTS
  40 | AcZ      | Mon Apr 10 00:00:00 2000 | Mon Apr 10 12:00:00.123456 2000 PDT | 999999999.999999999 | AcZCOMMENTS
  41 | AdZ      | Tue Apr 11 00:00:00 2000 | Tue Apr 11 12:00:00.123456 2000 PDT | 999999999.999999999 | AdZCOMMENTS
  42 | AeZ      | Wed Apr 12 00:00:00 2000 | Wed Apr 12 12:00:00.123456 2000 PDT | 999999999.999999999 | AeZCOMMENTS
  43 | AfZ      | Thu Apr 13 00:00:00 2000 | Thu Apr 13 12:00:00.123456 2000 PDT | 999999999.999999999 | AfZCOMMENTS
  44 | AgZ      | Fri Apr 14 00:00:00 2000 | Fri Apr 14 12:00:00.123456 2000 PDT | 999999999.999999999 | AgZCOMMENTS
  45 | AhZ      | Sat Apr 15 00:00:00 2000 | Sat Apr 15 12:00:00.123456 2000 PDT | 999999999.999999999 | AhZCOMMENTS
  46 | AiZ      | Sun Apr 16 00:00:00 2000 | Sun Apr 16 12:00:00.123456 2000 PDT | 999999999.999999999 | AiZCOMMENTS
  47 | AjZ      | Mon Apr 17 00:00:00 2000 | Mon Apr 17 12:00:00.123456 2000 PDT | 999999999.999999999 | AjZCOMMENTS
  48 | AkZ      | Tue Apr 18 00:00:00 2000 | Tue Apr 18 12:00:00.123456 2000 PDT | 999999999.999999999 | AkZCOMMENTS
  49 | AlZ      | Wed Apr 19 00:00:00 2000 | Wed Apr 19 12:00:00.123456 2000 PDT | 999999999.999999999 | AlZCOMMENTS
  50 | AmZ      | Thu Apr 20 00:00:00 2000 | Thu Apr 20 12:00:00.123456 2000 PDT | 999999999.999999999 | AmZCOMMENTS
  51 | AnZ      | Fri Apr 21 00:00:00 2000 | Fri Apr 21 12:00:00.123456 2000 PDT | 999999999.999999999 | AnZCOMMENTS
  52 | AoZ      | Sat Apr 22 00:00:00 2000 | Sat Apr 22 12:00:00.123456 2000 PDT | 999999999.999999999 | AoZCOMMENTS
  53 | ApZ      | Sun Apr 23 00:00:00 2000 | Sun Apr 23 12:00:00.123456 2000 PDT | 999999999.999999999 | ApZCOMMENTS
  54 | AqZ      | Mon Apr 24 00:00:00 2000 | Mon Apr 24 12:00:00.123456 2000 PDT | 999999999.999999999 | AqZCOMMENTS
  55 | ArZ      | Tue Apr 25 00:00:00 2000 | Tue Apr 25 12:00:00.123456 2000 PDT | 999999999.999999999 | ArZCOMMENTS
  56 | AsZ      | Wed Apr 26 00:00:00 2000 | Wed Apr 26 12:00:00.123456 2000 PDT | 999999999.999999999 | AsZCOMMENTS
  57 | AtZ      | Thu Apr 27 00:00:00 2000 | Thu Apr 27 12:00:00.123456 2000 PDT | 999999999.999999999 | AtZCOMMENTS
  58 | AuZ      | Fri Apr 28 00:00:00 2000 | Fri Apr 28 12:00:00.123456 2000 PDT | 999999999.999999999 | AuZCOMMENTS
  59 | AvZ      | Sat Apr 29 00:00:00 2000 | Sat Apr 29 12:00:00.123456 2000 PDT | 999999999.999999999 | AvZCOMMENTS
  60 | AwZ      | Sun Apr 30 00:00:00 2000 | Sun Apr 30 12:00:00.123456 2000 PDT | 999999999.999999999 | AwZCOMMENTS
  61 | AxZ      | Mon May 01 00:00:00 2000 | Mon May 01 12:00:00.123456 2000 PDT | 999999999.999999999 | AxZCOMMENTS
  62 | AyZ      | Tue May 02 00:00:00 2000 | Tue May 02 12:00:00.123456 2000 PDT | 999999999.999999999 | AyZCOMMENTS
  63 | AzZ      | Wed May 03 00:00:00 2000 | Wed May 03 12:00:00.123456 2000 PDT | 999999999.999999999 | AzZCOMMENTS
  64 | A{Z      | Thu May 04 00:00:00 2000 | Thu May 04 12:00:00.123456 2000 PDT | 999999999.999999999 | A{ZCOMMENTS
  65 | A|Z      | Fri May 05 00:00:00 2000 | Fri May 05 12:00:00.123456 2000 PDT | 999999999.999999999 | A|ZCOMMENTS
  66 | A}Z      | Sat May 06 00:00:00 2000 | Sat May 06 12:00:00.123456 2000 PDT | 999999999.999999999 | A}ZCOMMENTS
  67 | A~Z      | Sun May 07 00:00:00 2000 | Sun May 07 12:00:00.123456 2000 PDT | 999999999.999999999 | A~ZCOMMENTS
  68 | A\x7FZ   | Mon May 08 00:00:00 2000 | Mon May 08 12:00:00.123456 2000 PDT | 999999999.999999999 | A\x7FZCOMMENTS
  69 | A\u0080Z | Tue May 09 00:00:00 2000 | Tue May 09 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0080ZCOMMENTS
  70 | A\u0081Z | Wed May 10 00:00:00 2000 | Wed May 10 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0081ZCOMMENTS
  71 | A\u0082Z | Thu May 11 00:00:00 2000 | Thu May 11 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0082ZCOMMENTS
  72 | A\u0083Z | Fri May 12 00:00:00 2000 | Fri May 12 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0083ZCOMMENTS
  73 | A\u0084Z | Sat May 13 00:00:00 2000 | Sat May 13 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0084ZCOMMENTS
  74 | A\u0085Z | Sun May 14 00:00:00 2000 | Sun May 14 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0085ZCOMMENTS
  75 | A\u0086Z | Mon May 15 00:00:00 2000 | Mon May 15 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0086ZCOMMENTS
  76 | A\u0087Z | Tue May 16 00:00:00 2000 | Tue May 16 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0087ZCOMMENTS
  77 | A\u0088Z | Wed May 17 00:00:00 2000 | Wed May 17 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0088ZCOMMENTS
  78 | A\u0089Z | Thu May 18 00:00:00 2000 | Thu May 18 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0089ZCOMMENTS
  79 | A\u008AZ | Fri May 19 00:00:00 2000 | Fri May 19 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u008AZCOMMENTS
  80 | A\u008BZ | Sat May 20 00:00:00 2000 | Sat May 20 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u008BZCOMMENTS
  81 | A\u008CZ | Sun May 21 00:00:00 2000 | Sun May 21 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u008CZCOMMENTS
  82 | A\u008DZ | Mon May 22 00:00:00 2000 | Mon May 22 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u008DZCOMMENTS
  83 | A\u008EZ | Tue May 23 00:00:00 2000 | Tue May 23 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u008EZCOMMENTS
  84 | A\u008FZ | Wed May 24 00:00:00 2000 | Wed May 24 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u008FZCOMMENTS
  85 | A\u0090Z | Thu May 25 00:00:00 2000 | Thu May 25 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0090ZCOMMENTS
  86 | A\u0091Z | Fri May 26 00:00:00 2000 | Fri May 26 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0091ZCOMMENTS
  87 | A\u0092Z | Sat May 27 00:00:00 2000 | Sat May 27 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0092ZCOMMENTS
  88 | A\u0093Z | Sun May 28 00:00:00 2000 | Sun May 28 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0093ZCOMMENTS
  89 | A\u0094Z | Mon May 29 00:00:00 2000 | Mon May 29 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0094ZCOMMENTS
  90 | A\u0095Z | Tue May 30 00:00:00 2000 | Tue May 30 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0095ZCOMMENTS
  91 | A\u0096Z | Wed May 31 00:00:00 2000 | Wed May 31 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0096ZCOMMENTS
  92 | A\u0097Z | Thu Jun 01 00:00:00 2000 | Thu Jun 01 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0097ZCOMMENTS
  93 | A\u0098Z | Fri Jun 02 00:00:00 2000 | Fri Jun 02 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0098ZCOMMENTS
  94 | A\u0099Z | Sat Jun 03 00:00:00 2000 | Sat Jun 03 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u0099ZCOMMENTS
  95 | A\u009AZ | Sun Jun 04 00:00:00 2000 | Sun Jun 04 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u009AZCOMMENTS
  96 | A\u009BZ | Mon Jun 05 00:00:00 2000 | Mon Jun 05 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u009BZCOMMENTS
  97 | A\u009CZ | Tue Jun 06 00:00:00 2000 | Tue Jun 06 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u009CZCOMMENTS
  98 | A\u009DZ | Wed Jun 07 00:00:00 2000 | Wed Jun 07 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u009DZCOMMENTS
  99 | A\u009EZ | Thu Jun 08 00:00:00 2000 | Thu Jun 08 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u009EZCOMMENTS
 100 | A\u009FZ | Fri Jun 09 00:00:00 2000 | Fri Jun 09 12:00:00.123456 2000 PDT | 999999999.999999999 | A\u009FZCOMMENTS
(100 rows)

CREATE TABLE labor_plan
(
location_id NUMBER(19,0) NOT NULL ,
job_classification_cd VARCHAR(50) NOT NULL ,
work_shift_cd VARCHAR(50) NOT NULL ,
plan_period_start_dt DATE NOT NULL ,
plan_period_end_dt DATE NULL ,
plan_hours_qty DECIMAL(18,12) NULL ,
plan_cost_amt DECIMAL(18,13) NULL ,
plan_overtime_hours_qty DECIMAL(18,14) NULL
);
CREATE TABLE region
(
region_cd VARCHAR(50) NOT NULL ,
region_name VARCHAR(100) NOT NULL ,
division_cd VARCHAR(50) NOT NULL ,
region_mgr_associate_id NUMBER(18,9)
)
DISTRIBUTE BY HASH(region_cd,division_cd);
INSERT INTO region VALUES ('a', 'a ', 'a', 0.123433);
INSERT INTO region VALUES ('b', 'b', 'b', null);
INSERT INTO region VALUES ('c', 'c', 'c', 2.232008908);
INSERT INTO region VALUES ('d', '   dd', 'd', 3.878789);
MERGE INTO labor_plan t1 
USING (
WITH with_001 AS (
SELECT CASE WHEN 1=0 THEN ('e') ELSE (CASE WHEN region_name=region_cd THEN 'm' ELSE CONCAT_WS('d', 'c') END) END 
FROM region )
SELECT (CASE WHEN 1=1 THEN 168 END) c6, region_mgr_associate_id c7
FROM region ) t2
ON ( t2.c7 = t1.plan_overtime_hours_qty )
WHEN NOT MATCHED THEN INSERT ( plan_overtime_hours_qty ) VALUES ( t2.c6 );
ERROR:  null value in column "location_id" violates not-null constraint
--?.*
MERGE INTO labor_plan t1 
USING (
WITH with_001 AS (
SELECT CASE WHEN 1=0 THEN ('e') ELSE (CASE WHEN 1=1 THEN 'm' ELSE concat_ws('d', 'c') END) END 
FROM region  )
SELECT region_mgr_associate_id c1,region_cd c2,'1995-07-02' c3,region_mgr_associate_id c4
FROM region  ) t2 
ON ( t2.c1 = t1.plan_overtime_hours_qty )  
WHEN NOT MATCHED THEN INSERT ( plan_overtime_hours_qty ) VALUES ( t2.c1 );
ERROR:  null value in column "location_id" violates not-null constraint
--?.*
EXPLAIN (VERBOSE ON, COSTS OFF)
MERGE INTO labor_plan t1 
USING (
WITH with_001 AS (
SELECT CASE WHEN 1=0 THEN ('e') ELSE (CASE WHEN 1=1 THEN 'm' ELSE concat_ws('d', 'c') END) END 
FROM region  )
SELECT region_mgr_associate_id c1,region_cd c2,'1995-07-02' c3,region_mgr_associate_id c4
FROM region  ) t2 
ON ( t2.c1 = t1.plan_overtime_hours_qty )  
WHEN NOT MATCHED THEN INSERT ( plan_overtime_hours_qty ) VALUES ( t2.c1 );
WARNING:  Statistics in some tables or columns(mergeinto_misc.labor_plan.location_id, mergeinto_misc.labor_plan.plan_overtime_hours_qty, mergeinto_misc.region.region_cd, mergeinto_misc.region.division_cd, mergeinto_misc.region.region_mgr_associate_id) are not collected.
HINT:  Do analyze for them in order to generate optimized plan.
                                                                                                                                                                                                                           QUERY PLAN                                                                                                                                                                                                                           
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Streaming (type: GATHER)
   Node/s: All datanodes
   ->  Merge on mergeinto_misc.labor_plan t1
         ->  Streaming(type: REDISTRIBUTE)
               Output: region.region_mgr_associate_id, region.region_cd, ('1995-07-02'::text), region.region_mgr_associate_id, t1.location_id, t1.job_classification_cd, t1.work_shift_cd, t1.plan_period_start_dt, t1.plan_period_end_dt, t1.plan_hours_qty, t1.plan_cost_amt, t1.plan_overtime_hours_qty, t1.ctid, t1.xc_node_id, region.region_mgr_associate_id, region.region_cd, ('1995-07-02'::text), region.region_mgr_associate_id, (NULL::numeric)
               Distribute Key: (NULL::numeric)
               Spawn on: All datanodes
               Consumer Nodes: All datanodes
               ->  Hash Right Join
                     Output: region.region_mgr_associate_id, region.region_cd, ('1995-07-02'::text), region.region_mgr_associate_id, t1.location_id, t1.job_classification_cd, t1.work_shift_cd, t1.plan_period_start_dt, t1.plan_period_end_dt, t1.plan_hours_qty, t1.plan_cost_amt, t1.plan_overtime_hours_qty, t1.ctid, t1.xc_node_id, region.region_mgr_associate_id, region.region_cd, ('1995-07-02'::text), region.region_mgr_associate_id, NULL::numeric
                     Hash Cond: (t1.plan_overtime_hours_qty = region.region_mgr_associate_id)
                     ->  Streaming(type: REDISTRIBUTE)
                           Output: t1.location_id, t1.job_classification_cd, t1.work_shift_cd, t1.plan_period_start_dt, t1.plan_period_end_dt, t1.plan_hours_qty, t1.plan_cost_amt, t1.plan_overtime_hours_qty, t1.ctid, t1.xc_node_id
                           Distribute Key: t1.plan_overtime_hours_qty
                           Spawn on: All datanodes
                           Consumer Nodes: All datanodes
                           ->  Seq Scan on mergeinto_misc.labor_plan t1
                                 Output: t1.location_id, t1.job_classification_cd, t1.work_shift_cd, t1.plan_period_start_dt, t1.plan_period_end_dt, t1.plan_hours_qty, t1.plan_cost_amt, t1.plan_overtime_hours_qty, t1.ctid, t1.xc_node_id
                                 Distribute Key: t1.location_id
                     ->  Hash
                           Output: region.region_mgr_associate_id, region.region_cd, ('1995-07-02'::text), region.region_mgr_associate_id
                           ->  Streaming(type: REDISTRIBUTE)
                                 Output: region.region_mgr_associate_id, region.region_cd, ('1995-07-02'::text), region.region_mgr_associate_id
                                 Distribute Key: region.region_mgr_associate_id
                                 Spawn on: All datanodes
                                 Consumer Nodes: All datanodes
                                 ->  Seq Scan on mergeinto_misc.region
                                       Output: region.region_mgr_associate_id, region.region_cd, '1995-07-02'::text, region.region_mgr_associate_id
                                       Distribute Key: region.region_cd, region.division_cd
(29 rows)

DROP TABLE IF EXISTS labor_plan CASCADE;
CREATE TABLE labor_plan
(
location_id NUMBER(19,0) NULL ,
job_classification_cd VARCHAR(50) NULL ,
work_shift_cd VARCHAR(50) NULL ,
plan_period_start_dt DATE NULL ,
plan_period_end_dt DATE NULL ,
plan_hours_qty DECIMAL(18,12) NULL ,
plan_cost_amt DECIMAL(18,13) NULL ,
plan_overtime_hours_qty DECIMAL(18,14) NULL
);
-- can be null, success
MERGE INTO labor_plan t1 
USING (
WITH with_001 AS (
SELECT CASE WHEN 1=0 THEN ('e') ELSE (CASE WHEN 1=1 THEN 'm' ELSE concat_ws('d', 'c') END) END 
FROM region  )
SELECT region_mgr_associate_id c1,region_cd c2,'1995-07-02' c3,region_mgr_associate_id c4
FROM region  ) t2 
ON ( t2.c1 = t1.plan_overtime_hours_qty )  
WHEN NOT MATCHED THEN INSERT ( plan_overtime_hours_qty ) VALUES ( t2.c1 );
 
SELECT * FROM labor_plan ORDER BY plan_overtime_hours_qty;
 location_id | job_classification_cd | work_shift_cd | plan_period_start_dt | plan_period_end_dt | plan_hours_qty | plan_cost_amt | plan_overtime_hours_qty 
-------------+-----------------------+---------------+----------------------+--------------------+----------------+---------------+-------------------------
             |                       |               |                      |                    |                |               |         .12343300000000
             |                       |               |                      |                    |                |               |        2.23200890800000
             |                       |               |                      |                    |                |               |        3.87878900000000
             |                       |               |                      |                    |                |               |                        
(4 rows)

--------------------------------
--------------------------------
drop table if exists test;
NOTICE:  table "test" does not exist, skipping
create table test
(location_id numeric, item_inv_dt timestamp(0) without time zone);
drop table if exists item_inventory_plan cascade;
NOTICE:  table "item_inventory_plan" does not exist, skipping
create table item_inventory_plan
(
    item_inventory_plan_dt date not null ,
    location_id number(35,0) not null ,
    item_id number(20,5) not null ,
    plan_on_hand_qty decimal(18,4) null,
    plan_on_hand_retail_amt number(18,4) null
)  distribute by hash(item_id);
explain (verbose on, costs off) merge into test t1 using ( 
    select plan_on_hand_retail_amt c2,'1982-11-12'::date c1
    from item_inventory_plan 
    where '1988-05-26'::date='1970-12-11'::date
    group by 1,2) t2 on ( t2.c1 = t1.item_inv_dt )  
when not matched then insert ( t1.location_id,t1.item_inv_dt ) values ( t2.c2,t2.c1 );
WARNING:  Statistics in some tables or columns(mergeinto_misc.test.location_id, mergeinto_misc.test.item_inv_dt, mergeinto_misc.item_inventory_plan.item_id, mergeinto_misc.item_inventory_plan.plan_on_hand_retail_amt) are not collected.
HINT:  Do analyze for them in order to generate optimized plan.
                                             QUERY PLAN                                             
----------------------------------------------------------------------------------------------------
 Merge on mergeinto_misc.test t1
   WHEN NOT MATCHED
     Node/s: All datanodes
     Node expr: $7
     Remote query: INSERT INTO mergeinto_misc.test (location_id, item_inv_dt) VALUES ($7, $8)
   ->  Result
         Output: t2.c2, t2.c1, t1.location_id, t1.item_inv_dt, t1.ctid, t1.xc_node_id, t2.c2, t2.c1
         One-Time Filter: false
(8 rows)

DROP TABLE IF EXISTS test_des;
NOTICE:  table "test_des" does not exist, skipping
CREATE TABLE test_des (bucket1 NUMERIC);
 
DROP TABLE IF EXISTS test_orc;
NOTICE:  table "test_orc" does not exist, skipping
CREATE TABLE test_orc(ss_quantity INT, ss_ext_discount_amt NUMERIC);
INSERT INTO test_orc VALUES(generate_series(1,20),generate_series(1,20));
MERGE INTO test_des AS t1 USING(
SELECT CASE WHEN (SELECT COUNT(*) 
                  FROM test_orc 
                  WHERE ss_quantity BETWEEN 1 AND 20) < 240409437
            THEN (SELECT AVG(ss_ext_discount_amt) 
                  FROM test_orc 
                  WHERE ss_quantity BETWEEN 1 AND 20) END bucket1 
FROM test_orc
)t2 ON (t1.bucket1=t2.bucket1)
WHEN NOT MATCHED THEN INSERT VALUES(t2.bucket1);
SELECT * FROM test_des ORDER BY 1;
       bucket1       
---------------------
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
 10.5000000000000000
(20 rows)

drop table if exists offers_20050701 cascade;
NOTICE:  table "offers_20050701" does not exist, skipping
create table offers_20050701
(
    PROMO_ID VARCHAR(10)  ,
    PARTY_ID VARCHAR(10) NULL,
    LOCATION_ID number(17,0) NULL ,
    PARTY_FIRSTNAME VARCHAR(20) NULL ,
    PARTY_LASTNAME VARCHAR(20) NULL ,
    VISITS number(38,20) NULL ,
    CLUB_LEVEL CHAR(7) NULL ,
        partial cluster key(PARTY_ID,LOCATION_ID,VISITS)
)with (orientation=column)
partition by range (club_level )
(
partition offers_20050701_1 values less than ('B'),
partition offers_20050701_2 values less than ('D'),
partition offers_20050701_3 values less than ('F'),
partition offers_20050701_4 values less than ('G'),
partition offers_20050701_5 values less than ('J'),
partition offers_20050701_6 values less than ('N'),
partition offers_20050701_7 values less than ('P'),
partition offers_20050701_8 values less than ('R'),
partition offers_20050701_9 values less than (maxvalue)
)ENABLE ROW MOVEMENT;
drop table if exists region cascade;
create table region
(
    region_cd varchar(50)  ,
    region_name varchar(100)  ,
    division_cd varchar(50)  ,
    REGION_MGR_ASSOCIATE_ID number(18,9),
        partial cluster key(region_cd,division_cd)
)with (orientation=column)
distribute by hash(region_cd)
partition by range (region_cd )
(
partition region_1 values less than ('A'),
partition region_2 values less than ('C'),
partition region_3 values less than ('E'),
partition region_4 values less than ('G'),
partition region_5 values less than ('H'),
partition region_6 values less than ('J'),
partition region_7 values less than ('L'),
partition region_8 values less than ('M'),
partition region_9 values less than ('S'),
partition region_10 values less than (maxvalue)
)ENABLE ROW MOVEMENT;
drop table if exists item_price_history cascade;
NOTICE:  table "item_price_history" does not exist, skipping
create table item_price_history
(
    ITEM_ID number(39,10)  ,
    ITEM_PRICE_START_DT DATE  ,
    PRICE_CHANGE_REASON_CD VARCHAR(50) NULL ,
    ITEM_PRICE_AMT DECIMAL(18,2) NULL ,
    CURRENT_INDICATOR CHAR(1) NULL ,
    LOCATION_ID number(2,0) NULL ,
        partial cluster key(ITEM_ID,LOCATION_ID,ITEM_PRICE_START_DT)
)with (orientation=column)
partition by range (location_id)
(
partition item_price_history_1 values less than (0),
partition item_price_history_2 values less than (2),
partition item_price_history_3 values less than (4),
partition item_price_history_4 values less than (6),
partition item_price_history_5 values less than (8),
partition item_price_history_6 values less than (10),
partition item_price_history_7 values less than (12),
partition item_price_history_8 values less than (14),
partition item_price_history_9 values less than (16),
partition item_price_history_10 values less than (18),
partition item_price_history_11 values less than (maxvalue)
)ENABLE ROW MOVEMENT;
INSERT INTO OFFERS_20050701 VALUES ('A', 'A' ,  2, 'A' , NULL, 5, 'A');
INSERT INTO OFFERS_20050701 VALUES ('B', NULL,  1, NULL, 'B' , 1, NULL);
INSERT INTO OFFERS_20050701 VALUES ('C', 'C' ,  2, 'C' , 'C' , 2, 'C');
INSERT INTO OFFERS_20050701 VALUES ('D', 'D' ,  3, 'D' , 'D' , 32.2789, 'D');
INSERT INTO OFFERS_20050701 VALUES ('E', 'E' , 14, NULL, 'E' , 4, NULL);
INSERT INTO OFFERS_20050701 VALUES ('F', NULL,  5, 'F' , NULL, 5.232, 'F');
INSERT INTO OFFERS_20050701 VALUES ('GT', 'D' ,  6, 'G' , 'G' , 6, 'G');
INSERT INTO OFFERS_20050701 VALUES ('H', 'G' , 16, 'H' , 'H' , 7, 'H');
INSERT INTO OFFERS_20050701 VALUES ('I', 'G' ,  6, 'I' , 'I' , 8, NULL);
INSERT INTO OFFERS_20050701 VALUES ('J', 'G' ,  5, 'J' , 'J' , 5665.890, 'J');
INSERT INTO OFFERS_20050701 VALUES ('K', 'E' ,  4, NULL, 'E' , 4, 'E');
INSERT INTO OFFERS_20050701 VALUES ('L', NULL, 15, 'F' , 'F' , 5, 'F');
INSERT INTO OFFERS_20050701 VALUES ('M', 'F' , 19, 'G' , NULL, 6, 'G');
INSERT INTO OFFERS_20050701 VALUES ('N', 'M' ,  6, 'H' , 'H' , 7, NULL);
INSERT INTO OFFERS_20050701 VALUES ('O', ''  ,  6, NULL, NULL, 8.213342, '');
INSERT INTO OFFERS_20050701 VALUES ('P' , 'N' ,  6, NULL, NULL, 8.213342, 'I');
INSERT INTO REGION VALUES ('A', 'A ', 'A', 0.123433);
INSERT INTO REGION VALUES ('B', 'B', 'B', NULL);
INSERT INTO REGION VALUES ('C', 'C', 'C', 2.232008908);
INSERT INTO REGION VALUES ('D', '   DD', 'D', 3.878789);
INSERT INTO REGION VALUES ('E', 'A', 'E', 4.89060603);
INSERT INTO REGION VALUES ('F', 'F', 'F', 5.82703827);
INSERT INTO REGION VALUES ('G', 'G', 'TTT', NULL);
INSERT INTO REGION VALUES ('H', 'H', 'G', 7.3829083);
INSERT INTO REGION VALUES ('I', 'C', 'M', 8.983989);
INSERT INTO REGION VALUES ('J', 'J', 'G', NULL);
INSERT INTO REGION VALUES ('K', ' ', 'C', 2.232008908);
INSERT INTO REGION VALUES ('L', 'D', 'X', 3.878789);
INSERT INTO REGION VALUES ('M', 'TTTTTT ', 'D' , 4.89060603);
INSERT INTO REGION VALUES ('N', 'G' , 'B' , NULL);
INSERT INTO REGION VALUES ('O' , 'G', 'F', 6.6703972);
INSERT INTO ITEM_PRICE_HISTORY VALUES (0.12, DATE '1970-01-01', 'A', NULL, 'A' , 4);
INSERT INTO ITEM_PRICE_HISTORY VALUES (1.3, DATE '1973-01-01', 'B', 1.0 , 'B' , 1);
INSERT INTO ITEM_PRICE_HISTORY VALUES (2.23, DATE '1976-01-01', 'C', 2.3 , NULL, NULL);
INSERT INTO ITEM_PRICE_HISTORY VALUES (3.33, DATE '1979-01-01', 'D', 3.0 , 'D' , 3);
INSERT INTO ITEM_PRICE_HISTORY VALUES (4.98, DATE '1982-01-01', 'E', 4.4 , 'E' , 4);
INSERT INTO ITEM_PRICE_HISTORY VALUES (5.01, DATE '1985-01-01', 'F', 5.0 , 'F' , 5);
INSERT INTO ITEM_PRICE_HISTORY VALUES (6, DATE '1988-01-01', 'G', 6.5 , 'G' , 6);
INSERT INTO ITEM_PRICE_HISTORY VALUES (0.7, DATE '1991-01-01', 'G', 7.0 , 'H' , 7);
INSERT INTO ITEM_PRICE_HISTORY VALUES (0.08, DATE '1994-01-01', 'G', 8.0 , NULL, 8);
INSERT INTO ITEM_PRICE_HISTORY VALUES (9.12, DATE '1997-01-01', 'O', 9.6 , 'J' , 9);
INSERT INTO ITEM_PRICE_HISTORY VALUES (10.10, DATE '1970-01-01', 'P', 0.2 , 'A' , NULL);
INSERT INTO ITEM_PRICE_HISTORY VALUES (11.11, DATE '1973-01-01', 'Q', 1.7 , 'B' , 1);
INSERT INTO ITEM_PRICE_HISTORY VALUES (12.02, DATE '1976-01-01', 'R', NULL, NULL, 2);
INSERT INTO ITEM_PRICE_HISTORY VALUES (13.99, DATE '1979-01-01', 'S', 3.0 , 'D' , 3);
INSERT INTO ITEM_PRICE_HISTORY VALUES (14, DATE '1982-01-01', 'A', 4.0 , ''  , 4);
INSERT INTO ITEM_PRICE_HISTORY VALUES (15, DATE '1985-01-01', 'H', 5.8 , 'F' , 5);
INSERT INTO ITEM_PRICE_HISTORY VALUES (16, DATE '1988-01-01', 'G', 6.0 , 'G' , NULL);
INSERT INTO ITEM_PRICE_HISTORY VALUES (17, DATE '1991-01-01', 'I', 7.9 , 'H' , 7);
INSERT INTO ITEM_PRICE_HISTORY VALUES (19, DATE '1994-01-01', '' , 8.3 , NULL, 8);
INSERT INTO ITEM_PRICE_HISTORY VALUES (20, DATE '1997-01-01', '' , NULL, 'J' , NULL);
insert into offers_20050701 select * from offers_20050701;
insert into offers_20050701 select * from offers_20050701;
insert into offers_20050701 select * from offers_20050701;
insert into offers_20050701 select * from offers_20050701;
insert into offers_20050701 select * from offers_20050701;
insert into offers_20050701 select * from offers_20050701;
insert into offers_20050701 select * from offers_20050701;
merge into offers_20050701 t1 using 
(with with_001 as (
select reg.region_name c1, reg.region_mgr_associate_id c2, 'd' c3
from (select region_mgr_associate_id                 
   from region inner join item_price_history 
      on 'q' > price_change_reason_cd)dt, region reg
   where 1=0
   group by 1, 2, 3
union
select region_name ,max(region_mgr_associate_id - item_id) , cast(division_cd as varchar) 
from region , item_price_history 
where current_indicator between current_indicator and current_indicator
   group by 1, 3)
select with_001.c1 c1, with_001.c3 c2,division_cd c3,
  max((case when with_001.c2 = region_mgr_associate_id then 120 end)) c4
  from with_001, region 
 group by 1, 2, 3
) t2 on ( t2.c2 = t1.party_firstname )  
when not matched then insert ( location_id, visits,party_lastname ) values ( t2.c4, 149, t2.c2 ) ;
drop table if exists item cascade;
NOTICE:  table "item" does not exist, skipping
create table item
(
    a int default 3,
    item_id number(18,10)  ,
    item_name varchar(100) ,
    item_level number(39,0),
    item_desc varchar(250) ,
    item_subclass_cd varchar(50) ,
    item_type_cd varchar(50) ,
    inventory_ind char(30) ,
    vendor_party_id smallint ,
    commodity_cd varchar(50),
    brand_cd varchar(50) ,
    item_available char(100) ,
    partial cluster key (item_id,item_level)
)with (orientation=column);
drop table if exists demographics cascade;
NOTICE:  table "demographics" does not exist, skipping
create table demographics
(
    a int default 27,
    ZIPCODE CHAR(50)  ,
    PRIMARYRECORD CHAR(100) NULL ,
    POPULATION DECIMAL(18,2) NULL ,
    HOUSEHOLDSPERZIPCODE DECIMAL(18,3) NULL ,
    WHITEPOPULATION DECIMAL(18,1) NULL ,
    BLACKPOPULATION DECIMAL(18,4) NULL ,
    HISPANICPOPULATION DECIMAL(18,5) NULL ,
    PERSONSPERHOUSEHOLD DECIMAL(18,6) NULL ,
    AVERAGEHOUSEVALUE DECIMAL(18,7) NULL ,
    INCOMEPERHOUSEHOLD DECIMAL(18,8) NULL ,
    LATITUDE NUMBER(18,9) NULL ,
    LONGITUDE NUMBER(18,10) NULL ,
    ELEVATION NUMBER(18,12) NULL ,
    STATE CHAR(20) NULL ,
    STATEFULLNAME VARCHAR(35) NULL ,
    CITYTYPE CHAR(100) NULL ,
    CITYALIASABBREVIATION VARCHAR(13) NULL ,
    AREACODE VARCHAR(55) NULL ,
    CITY VARCHAR(35) NULL ,
    CITYALIASNAME VARCHAR(35) NULL ,
    COUNTYNAME VARCHAR(45) NULL ,
    COUNTYFIPS CHAR(50) NULL ,
    STATEFIPS CHAR(20) ,
    TIMEZONE CHAR(20) NULL ,
    DAYLIGHTSAVING CHAR(100) NULL ,
    MSA VARCHAR(35) NULL ,
    MSA_NAME VARCHAR(150) NULL ,
    PMSA CHAR(40) NULL ,
    CSA CHAR(30) NULL ,
    CBSA CHAR(50) NULL ,
    CBSA_DIV CHAR(50) NULL ,
    CBSA_TYPE CHAR(50) NULL ,
    CBSA_NAME VARCHAR(150) NULL ,
    PMSA_NAME VARCHAR(150) NULL ,
    REGION VARCHAR(50) NULL ,
    DIVISION VARCHAR(50) NULL ,
    MAILINGNAME CHAR(100) NULL ,
    POPULATIONSF3 decimal(38,20) NULL ,
    HOUSEHOLDSPERZIPCODESF3 DECIMAL(18,13) NULL ,
    WHITEPOPULATIONSF3 DECIMAL(18,14) NULL ,
    BLACKPOPULATIONSF3 DECIMAL(18,15) NULL ,
    HISPANICPOPULATIONSF3 DECIMAL(18,16) NULL ,
    PERSONSPERHOUSEHOLDSF3 DECIMAL(18,17) NULL ,
    AVERAGEHOUSEVALUESF3 DECIMAL(38,2) NULL ,
    INCOMEPERHOUSEHOLDSF3 DECIMAL(38,3) NULL ,
    ESTABLISHMENTS2003 DECIMAL(38,4) NULL ,
    EMPLOYMENT2003 DECIMAL(38,5) NULL ,
    FIRSTQUARTERPAYROLL2003 DECIMAL(38,6) NULL ,
    ANNUALPAYROLL2003 DECIMAL(38,7) NULL ,
    EMPLYMENTFLAG2003 CHAR(100) NULL ,
    partial cluster key(POPULATIONSF3,WHITEPOPULATIONSF3,STATEFULLNAME,POPULATION)
)with (orientation=column)  ;
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (0.12, ' ' , 'A' , NULL, 'TGK' , 'A' , 2, 'A' , 'A' , 'Y');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (1.3, 'B' , NULL, 'B' , 'B' , NULL, 1, 'B' , NULL , 'N');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (2.23, 'C' , 'C' , NULL, 'C' , 'C' , 2, 'C' , 'C' , 'N');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (3.33, 'D' , 'D' , 'PT' , NULL, 'D' , 3, 'D' , 'D' , 'N');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (4.98, ' ' , NULL, 'E' , 'E' , 'E' , 4, 'E' , 'E' , 'Y');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (5.01, NULL, 'F' , ' ' , 'F' , 'F' , 5, 'F' , 'F' , 'N');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (6, 'G' , 'G' , 'G' , '_D' , 'G' , 6, 'G' , NULL ,'N');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (0.7, NULL, NULL, NULL, 'H' , 'H' , 7, NULL, 'G' , 'Y');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (0.08, 'I' , ' ' , ' T ' , NULL, 'I' , 8, 'I' , '' , 'N');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (9.12, ' ' , 'J' , ' PP' , 'J' , 'J' , 9, 'J' , NULL , 'Y');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (10.10, NULL, ' ' , 'A' , 'A' , 'A' , 2, NULL, 'A','Y');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (11.11, 'B' , 'B' , 'B' , 'BCDAA' , NULL, 1, 'B' , 'B','N');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (12.02, 'D' , NULL, NULL, 'C' , 'C' , 2, 'C' , 'C','N');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (13.99, NULL, ' ' , 'D' , 'D' , 'D' , 3, 'D' , 'D','Y');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (14, 'G' , 'E' , 'E' , NULL, 'E' , 4, 'E' , 'E','N');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (15, 'F' , ' ' , 'C' , 'CLEANING' , 'F' , 5, 'F' , 'F','Y');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (16, ''  , 'Z' , NULL, 'G' , 'G' , 6, 'G' , NULL,'N');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (17, NULL, ''  , '     PAPER' , 'H' , ''  , 7, NULL, NULL,'Y');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (19, ' ' , 'B' , ''  , ''  , 'I' , 8, 'I' , NULL,'N');
INSERT INTO ITEM (ITEM_ID, ITEM_NAME, ITEM_DESC, ITEM_SUBCLASS_CD, ITEM_TYPE_CD, INVENTORY_IND, VENDOR_PARTY_ID, COMMODITY_CD, BRAND_CD,ITEM_AVAILABLE) VALUES (20 , 'A' , 'J' , 'J' , 'J' , NULL, 9, 'J' , 'G','Y');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('A', NULL, 0.3 , 0.230 , 0.2 , 0.7887 , 2.0 , NULL, 0.0231 , 0.0231 , 0.03545 , 0.0565 , NULL, 'A' , 'A' , 'A' , 'A' , 'A' , 'A' , NULL, 'A' , NULL, 'A' , 'A' , 'A' , 'A' , NULL, 'A' , ' A' , 'A' , 'A' , NULL, ''  , ' A' , 'A' , NULL, 'A' , 0.012 , NULL, 0.023 , 0.03423 , 0.340 , 0.3420 , 0.3420 , NULL, 3   , 4   , NULL, 5   , 'A');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('B', 'B' , 1.0 , NULL, 1.0 , 1.023 , 1.6 , 1.0 , 1.0 , 1.5 , 1.0 , 1.0 , 1.0 , 'B' , NULL, 'A' , 'B' , NULL, 'B' , 'B' , NULL, 'B' , ''  , 'B' , 'B' , NULL, 'B' , 'B' , 'B' , 'B' , 'B' , 'B' , ' ' , 'B' , 'B' , 'B' , NULL,81.0 , 8981.0 , 1.0 , NULL, 1.0 , 1.0343 , 1.5 , 1.0 , 1   , 17876   , 1787  , 1   , 'B');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('C', 'C' , NULL, 2.5 , NULL, 2.0 , 2.0 , 2.0342 , 2.2320 , 2.0 , NULL, 2.8 , 2.2 , 'C' , 'C' , 'C' , 'C' , 'C' , 'C' , 'C' , 'C' , 'C' , 'C' , NULL, 'C' , 'C' , 'C' , 'C' , NULL, NULL, 'C' , NULL, 'C' , NULL, ''  , 'C' , 'C' , 2.0 , 2.0 , 2.0 , 2.0 , 2.0 , 2.5 , 2.0 , 2.4 , 2   , NULL, 278   , NULL, ' ');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('D', 'D' , 3.0 , 3.0 , 3.0 , NULL, 3.0 , -3.0 , 3.3430 , 3.0 , 3.2 , 3.0 , 3.0 , 'D' , 'D' , 'C' , NULL, 'D' , NULL, 'D' , 'D' , 'D' , 'D' , 'D' , 'D' , 'D' , 'D' , ' D' , '  D' , '  D' , '  D' , 'D' , 'D' , 'D' , 'D' , 'D' , 'D' , NULL, 3.0 , 3.83434 , 3.0 , NULL, 3.0 , 3.0879 , 3.0 , 3898   , 3454   , 3   , NULL, 'D');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('E', ' ' , 4.0 , NULL, 4.0 , 4.823 , 4.7 , 4.245 , 4.0 , 4.0 , 4.0 , NULL, 4.1 , NULL, 'E' , NULL, 'E' , ''  , 'E' , 'E' , 'E' , NULL, '  ' , 'E' , 'E' , 'E' , '  E' , 'E' , 'E' , 'E' , ''  , ' E' , NULL, 'E' , NULL, 'E' , 'E' , -4.3 , 4.3 , 4.03424 , 4.03434 , 4.0 , 4.0 , 4.0 , 4.0 , 48987   , 4   , NULL, NULL, 'E');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('F', 'F' , 5.423 , 5.423 , 5.3 , 5.0 , 5.05446 , 5.0 , 5.4 , NULL, 5.0564 , 5.0 , 5.0 , 'F' , 'F' , 'D' , 'F' , 'F' , 'F' , 'F' , 'F' , 'F' , 'F' , 'F' , 'F' , 'F' , 'F ' , ''  , 'F' , ' ' , 'F' , 'F  ' , 'F' , 'F' , 'F' , 'TTT' , NULL, 5.0 , 5.0 , 5.0 , 455.0 , 45.4350 , 5.6 , NULL, 5.0 , NULL, 5   , 5   , 5   , NULL);
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('G', NULL, 6.6 , 6.4 , 6.0 , NULL, 6.0 , 6.0 , 6.0 , 6.6 , 6.0 , 6.4530 , 6.4 , 'G' , 'G' , 'G' , 'G' , 'G' , 'G' , '  ' , 'G' , 'G' , 'G' , 'G' , 'G' , 'G' , 'G' , 'G' , 'GOO' , 'G' , 'G' , 'G' , 'G' , 'G' , 'F' , 'G' , 'G' , 32.364 , 43.260 , NULL, 12.364 , 6.8 , 6.0 , 3456.0 , 6.0 , 6879  , 6454   , 654   , 6   , 'G');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('H', 'H' , 7.0 , 7.0 , NULL, 7.0 , 7.4 , 7.9 , 7.0 , 7.0 , 7.0 , 7454.7 , 7.0 , 'H' , 'H' , 'H' , 'H' , 'H' , 'H' , NULL, 'H' , 'H' , 'H' , 'H' , NULL, 'H' , NULL, 'H' , 'H' , ''  , NULL, 'TT' , 'H' , ' ' , 'G' , 'G' , 'H' , 7.0 , 7.0 , 7.0 , 2.3270 , 7.0 , 5.43570 , 7.7 , 7.0 , 7787   , 7898   , 7   , 7   , ' ');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('O', 'I' , 8.0 , NULL, 8.4 , 8.0 , 8.0454 , 8.0 , 8.0 , 8.0 , 8453.0 , 8.0 , 8.0 , 'I' , 'I' , 'I' , 'I' , NULL, 'I' , 'I' , NULL, 'I' , 'I' , 'I' , 'I' , 'I' , 'I' , 'I' , 'I' , NULL, 'I' , 'ILO' , 'I' , ' I' , 'G' , NULL, 'I' , 8.0 , 8.0 , 8.0 , NULL, 8.0 , 8.0 , 8.0 , NULL, 8787   , 8787   , 8   , 8454   , 'I');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('S', ''  , 9.002 , 9.002 , 9.5 , 9.0 , 9.8 , NULL, 9.0 , 9343.0 , 9.36757 , 9.6 , 9.5 , NULL, 'J' , 'J' , 'J' , 'J' , 'J' , 'J' , 'J' , 'J' , 'GO' , NULL, 'J' , 'J' , 'J' , 'J' , 'HIL' , 'J' , 'J' , 'J' , NULL, 'J' , 'G' , 'F' , 'J' , NULL, 9.0 , 9.7 , 45.4590 , 9.0 , 9.7 , 987.0 , 9.6 , 9   , 9   , 9   , 9   , 'J');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('P', NULL, NULL, 0.50 , 0.450 , 0.9434 , 0343.4 , 4.03 , 024.0 , 0.7 , 0.076868 , 0.230 , NULL, 'A' , 'A' , 'A' , NULL, 'A' , 'A' , 'A' , 'A' , 'A' , NULL, 'A' , 'A' , 'A' , 'A' , 'A' , 'A' , 'A' , 'A' , 'HEIBT ' , 'A' , 'A' , 'A' , 'A' , '' , 3.2222200 , 0.4 , 0.320 , 0.6 , 0.3430 , NULL, 0.320 , 0.430 , 03   , 0.454   , 0.545  , 9   , 'A');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('I', 'B' , 1.509 , 1.509 , -1.0 , 1.0 , NULL, 1.0 , 1.0 , 1.0 , 1.045456 , 1.0 , 1.0 , 'B' , '  ' , 'A' , 'B' , ' B' , 'B' , 'B' , 'B' , 'B' , 'BB' , 'B' , 'B' , ' ' , 'B' , 'B' , NULL, 'B' , ' B' , 'B' , 'B' , 'B' , 'B' , 'B' , 'B' , 1.0 , 1.0 , 1.045 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1787   , NULL, 1   , 1   , 'B');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('J', 'C' , 2.0 , 2.0 , 2.0 , 2343.034 , 2.05656 , 2.0 , NULL, 2.0 , 2.0 , 2.0 , 2.6 , 'C' , 'C' , 'C' , 'C' , 'C' , 'C' , 'C ' , 'C' , 'C' , 'C' , 'C' , 'C' , 'C' , 'C' , 'C' , 'C' , '  ' , 'C' , 'C' , '  C' , NULL, 'C' , 'C' , 'C' , 2.5 , 2.0 , 2.9 , 2.0 , 2.0 , NULL, 2.0 , 2.0 , 2878   , 2787   , 4542   , 2   , NULL);
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('K', 'D' , 3.0 , 3.6 , 3787.5 , 3.0 , 3.0 , 3.5 , 3676.0 , NULL, 3.4 , 3.0 , 3.0 , ''  , 'D' , NULL, 'D' , ' D' , NULL, 'D' , NULL, ''  , 'D' , 'D' , 'D' , 'D' , 'D' , ''  , 'D' , 'D' , NULL, 'D' , 'D' , 'D' , NULL, 'DD ' , 'D' , 3.0 , 3.0 , 3.0 , 3.0 , 3.9 , 3.0 , 3.8 , 3.0 , NULL, 3787   , 453   , 3   , 'D');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('L', 'E' , 4454.0 , 4.7 , 4.5 , 4.3 , 4.0 , 4.0 , 4.0 , 4.0 , 4.04454 , NULL, 4.0 , 'E' , ''  , 'E' , 'E' , 'E' , 'E' , 'E' , ''  , 'E' , 'E' , 'E' , 'E' , 'E' , ''  , 'E' , ' ' , ' E' , 'E' , 'E' , ''  , ' E' , 'E' , 'E' , 'E' , 4.0 , 4.5 , NULL, 4.0 , NULL, 4.0 , 4.0 , 4.0 , 4787  , 4787   , 478   , NULL, 'E');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('M', 'F' , 5.7 , NULL, 5.0 , 5.0 , 5.0 , 5.3 , 5676.0 , 5.8 , 5.0 , 5.0 , 5.0675757 , NULL, 'F' , 'D' , 'F' , 'F' , 'F' , ''  , 'F' , 'F' , NULL, NULL, 'F' , NULL, 'F' , NULL, ' F ' , 'F' , 'F ' , NULL, 'I DONNOT THINK YOUARERIGHT ' , 'F ' , 'F' , NULL, ''  , NULL, 5.0 , 5.0 , 5.7 , 5.7870 , 5.0 , 5.0 , 5.700 , 5   , 5   , 5045   , 545  , 'F');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('N', 'G' , 6454.056 , 6.056 , NULL, 6.0 , 6.0544 , 6.0544 , 6.05454 , 6.0 , NULL, 6.0 , 6.0 , 'G' , 'G' , 'Q' , NULL, 'G' , ''  , 'G' , 'G' , 'G' , 'G' , 'G' , 'G' , ''  , 'G' , 'G' , 'G' , NULL, 'G' , ''  , NULL, 'G' , 'F' , ''  , NULL, 6.6 , 6.0 , 6.3 , -96.0 , 6.0 , 6.458 , 6.0434 , 6.0454 , 6   , -6   , NULL, 6   , 'G');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('T', 'H' , NULL, 7454.9 , 7.0 , 7.4 , 7.0 , 7.0 , NULL, 7.0454 , 7.56767 , 7.9 , 7.7 , 'H' , NULL, 'T' , 'H' , ''  , 'H' , 'H' , 'H' , 'H' , 'H' , 'H' , ''  , 'H' , 'H' , 'H' , 'H' , 'H' , ''  , 'H' , 'H' , 'H' , ''  , 'F' , 'H' , 7.0 , 7.6 , 7.0 , NULL, 7.0 , 7.0 , 7.9 , NULL, 778   , 4547   , 7787   , 7787   , 'H');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('Q', NULL, 8.8 , 8.2 , 8.6 , 8.0 , 8.0 , 8.0 , 8.0454 , 8.0 , 8.0 , NULL, 8.0 , 'I' , 'I' , ''  , ''  , 'I' , 'I' , NULL, 'I' , 'I' , 'I' , ''  , 'I' , 'I' , 'I' , 'I' , NULL, ''  , 'I' , ' I' , 'I' , NULL, 'G' , 'G' , 'I' , 8.2 , 8.0 , 8.0 , 8.0 , 8.0 , 8.0 , NULL, 8.0 , 8787   , 878   , 8787   , 8   , 'I');
INSERT INTO DEMOGRAPHICS (ZIPCODE, PRIMARYRECORD, POPULATION, HOUSEHOLDSPERZIPCODE, WHITEPOPULATION, BLACKPOPULATION, HISPANICPOPULATION, PERSONSPERHOUSEHOLD, AVERAGEHOUSEVALUE, INCOMEPERHOUSEHOLD, LATITUDE, LONGITUDE, ELEVATION, STATE, STATEFULLNAME, CITYTYPE, CITYALIASABBREVIATION, AREACODE, CITY, CITYALIASNAME, COUNTYNAME, COUNTYFIPS, STATEFIPS, TIMEZONE, DAYLIGHTSAVING, MSA, MSA_NAME, PMSA, CSA, CBSA, CBSA_DIV, CBSA_TYPE, CBSA_NAME, PMSA_NAME, REGION, DIVISION, MAILINGNAME, POPULATIONSF3, HOUSEHOLDSPERZIPCODESF3, WHITEPOPULATIONSF3, BLACKPOPULATIONSF3, HISPANICPOPULATIONSF3, PERSONSPERHOUSEHOLDSF3, AVERAGEHOUSEVALUESF3, INCOMEPERHOUSEHOLDSF3, ESTABLISHMENTS2003, EMPLOYMENT2003, FIRSTQUARTERPAYROLL2003, ANNUALPAYROLL2003, EMPLYMENTFLAG2003) VALUES ('R' , 'J' , 9.0 , 9.0 , 9.0 , 9.5 , NULL, 9.0 , 9.0 , 9.0 , -9.0343 , -9.0676 , -9.023213 , 'J' , 'J' , 'M' , 'J' , NULL, 'J' , 'J' , 'J' , 'J' , ''  , 'J' , 'J' , 'J' , 'J' , NULL, ''  , 'J' , 'J' , 'J' , 'J' , ''  , 'G' , 'F' , 'J' , 9.0 , NULL, 9.0 , 9.0 , 7.890 , -7.890 , 9.0 , 9.0 , 9   , NULL, 9   , 9   , NULL);
MERGE INTO item t1 USING (
SELECT CAST(ite.item_level AS int4) c1,
       dem.CITYTYPE c2
  FROM item ite,
       demographics dem,
       (SELECT vendor_party_id FROM item ) dt1
 WHERE dem.PMSA = dem.CSA
  ) t2 ON ( t2.c1 = t1.item_id )
  WHEN NOT MATCHED THEN INSERT ( item_available ) VALUES ( t2.c2 ) ;
DROP TABLE IF EXISTS RP_T_COMPANY,D_T_ORGAN;
NOTICE:  table "rp_t_company" does not exist, skipping
NOTICE:  table "d_t_organ" does not exist, skipping
CREATE TABLE RP_T_COMPANY(
COMCODE     CHARACTER VARYING(8)            NOT NULL   ,
COMCNAME    CHARACTER VARYING(240)          NOT NULL  ,
COMLEVEL    NUMERIC(10,0)                             ,
UPPERPATH   CHARACTER VARYING(300)                    ,
VALIDSTATUS VARCHAR(10),
LOADTIME    TIMESTAMP(0) WITHOUT TIME ZONE  )  ;
 
CREATE TABLE D_T_ORGAN(
COMCODE3 VARCHAR(10),
COMCNAME1 VARCHAR(10));
 
MERGE INTO D_T_ORGAN DES
USING
(SELECT COMCODE1, COMCNAME1,
      COMCODE2,REPLACE(COMCNAME2,COMCNAME1,'') AS COMCNAME2,
      COMCODE3
    FROM (SELECT SUBSTR(RC.UPPERPATH,10,8) AS COMCODE1,(SELECT R1.COMCNAME FROM RP_T_COMPANY R1 WHERE R1.COMCODE=SUBSTR(RC.UPPERPATH,10,8)) AS COMCNAME1,
              SUBSTR(RC.UPPERPATH,19,8) AS COMCODE2,(SELECT R1.COMCNAME FROM RP_T_COMPANY R1 WHERE R1.COMCODE=SUBSTR(RC.UPPERPATH,19,8)) AS COMCNAME2,
              RC.COMCODE AS COMCODE3, SYSDATE AS LOADTIME
                         FROM RP_T_COMPANY RC WHERE RC.COMLEVEL=4  AND RC.VALIDSTATUS='1')TT) SRC
ON(DES.COMCODE3=SRC.COMCODE3)
WHEN MATCHED THEN  UPDATE SET  DES.COMCNAME1 =SRC.COMCNAME1
WHERE SRC.COMCNAME2 IS NOT NULL;
DROP TABLE IF EXISTS rp_t_telesales;
NOTICE:  table "rp_t_telesales" does not exist, skipping
CREATE TABLE rp_t_telesales(
usercode    CHARACTER VARYING(30),
binduserid  CHARACTER VARYING(30),
validstatus CHARACTER VARYING(1)
);
INSERT INTO rp_t_telesales VALUES('0', '0', '0');
MERGE INTO rp_t_telesales rp
USING ( 
   SELECT a.usercode,a.binduserid, '0' validstatus
   FROM rp_t_telesales a
   WHERE EXISTS (
     SELECT COUNT(1) FROM rp_t_telesales ) )tmp
ON (rp.usercode = tmp.usercode)
WHEN MATCHED THEN UPDATE SET rp.validstatus = tmp.validstatus;
SELECT * FROM rp_t_telesales ORDER BY 1;
 usercode | binduserid | validstatus 
----------+------------+-------------
 0        | 0          | 0
(1 row)

DROP TABLE IF EXISTS  rp_t_cardetail;
NOTICE:  table "rp_t_cardetail" does not exist, skipping
CREATE TABLE rp_t_cardetail (
    carid character varying(30),
    custid character varying(30),
    khstcustid character varying(30),
    bi_policyno character varying(22),
    ci_policyno character varying(22),
    bi_proposalno character varying(22),
    ci_proposalno character varying(22),
    opercode character varying(30),
    comid character varying(8),
    comcode character varying(8),
    usertype character varying(2),
    custstatustype character varying(2),
    bi_premium numeric(8,2),
    ci_premium numeric(8,2),
    validtime timestamp(0) without time zone,
    startdate timestamp(0) without time zone,
    enddate timestamp(0) without time zone,
    riskcode character varying(10),
    piid character varying(30),
    processid character varying(30),
    activityid character varying(30),
    newmanagercode character varying(360),
    isfamilycar character varying(2),
    carstatus character varying(2),
    coverage character varying(2),
    upperpath character varying(300),
    monopolycode character varying(40),
    validstatus character varying(2),
    trans_type character varying(2),
    tp_inputtime timestamp(0) without time zone,
    datasource character varying(10),
    loadtime timestamp(0) without time zone,
    opertype integer,
    licenseno character varying(60),
    operatedate timestamp(0) without time zone,
    agenttype character varying(10),
    customercname character varying(200),
    engineno character varying(30),
    vinno character varying(18),
    frameno character varying(90),
    teamcode character varying(30),
    teamcode_level1 character varying(30),
    teamcode_level2 character varying(30),
    teamcode_level3 character varying(30),
    username character varying(300),
    teamcode_level4 character varying(30),
    teamcode_level5 character varying(30),
    teamcode_level6 character varying(30),
    lastdamagedci numeric(8,0),
    damaged numeric(8,0),
    sumtax numeric(14,2),
    xxz_flag character varying(2),
    enrolldate timestamp(0) without time zone,
    upperpath_team character varying(300),
    comcode_ywy character varying(8),
    upper_teamcode character varying(30),
    upper_comcode character varying(8),
    inserttimeforhis timestamp(0) without time zone,
    operatetimeforhis timestamp(0) without time zone,
    handlercode character varying(10),
    handler1code character varying(10),
    handlercode_cname character varying(300),
    handler1code_cname character varying(300)
)
WITH (orientation=row, compression=no)
DISTRIBUTE BY HASH (handlercode);
DROP TABLE IF EXISTS  rp_t_cardetail_one;
NOTICE:  table "rp_t_cardetail_one" does not exist, skipping
CREATE TABLE rp_t_cardetail_one (
    carid character varying(30),
    custid character varying(30),
    khstcustid character varying(30) NOT NULL,
    bi_policyno character varying(22),
    ci_policyno character varying(22),
    bi_proposalno character varying(22),
    ci_proposalno character varying(22),
    opercode character varying(30),
    comid character varying(8),
    comcode character varying(8),
    usertype character varying(2),
    custstatustype character varying(2),
    bi_premium numeric(8,2),
    ci_premium numeric(8,2),
    validtime timestamp(0) without time zone,
    startdate timestamp(0) without time zone,
    enddate timestamp(0) without time zone,
    riskcode character varying(10),
    piid character varying(30),
    processid character varying(30),
    activityid character varying(30),
    newmanagercode character varying(360),
    isfamilycar character varying(2),
    carstatus character varying(2),
    coverage character varying(2),
    upperpath character varying(300),
    monopolycode character varying(40),
    validstatus character varying(2),
    trans_type character varying(2),
    tp_inputtime timestamp(0) without time zone,
    datasource character varying(10),
    loadtime timestamp(0) without time zone,
    opertype integer,
    licenseno character varying(60),
    operatedate timestamp(0) without time zone,
    agenttype character varying(10),
    customercname character varying(200),
    engineno character varying(30),
    vinno character varying(18),
    frameno character varying(90),
    teamcode character varying(30),
    teamcode_level1 character varying(30),
    teamcode_level2 character varying(30),
    teamcode_level3 character varying(30),
    username character varying(300),
    teamcode_level4 character varying(30),
    teamcode_level5 character varying(30),
    teamcode_level6 character varying(30),
    lastdamagedci numeric(8,0),
    damaged numeric(8,0),
    sumtax numeric(14,2),
    xxz_flag character varying(2),
    enrolldate timestamp(0) without time zone,
    upperpath_team character varying(300),
    comcode_ywy character varying(8),
    upper_teamcode character varying(30),
    upper_comcode character varying(8)
)
WITH (orientation=row, compression=no)
DISTRIBUTE BY HASH (comid);
MERGE INTO RP_T_CARDETAIL t
   using (select *
            from RP_T_CARDETAIL_ONE tt 
           where tt.comid = 51000000
             and tt.khstcustid is not null
           ) s
    on (t.khstcustid = s.khstcustid and t.comid = s.comid)
    when matched then
    update set
           T.CARID                 = S.CARID               ,        
           T.CUSTID                = S.CUSTID              ,
           ----T.KHSTCUSTID            = S.KHSTCUSTID          ,
           T.BI_POLICYNO           = S.BI_POLICYNO         ,
           T.CI_POLICYNO           = S.CI_POLICYNO         ,
           T.BI_PROPOSALNO         = S.BI_PROPOSALNO       ,
           T.CI_PROPOSALNO         = S.CI_PROPOSALNO       ,
           T.OPERCODE              = S.OPERCODE            ,
           ----T.COMID                 = S.COMID               ,
           T.COMCODE               = S.COMCODE             ,
           T.USERTYPE              = S.USERTYPE            ,
           T.CUSTSTATUSTYPE        = S.CUSTSTATUSTYPE      ,
           T.BI_PREMIUM            = S.BI_PREMIUM          ,
           T.CI_PREMIUM            = S.CI_PREMIUM          ,
           ----T.VALIDTIME             = S.VALIDTIME           ,
           T.STARTDATE             = S.STARTDATE           ,
           T.ENDDATE               = S.ENDDATE             ,
           T.RISKCODE              = S.RISKCODE            ,
           T.PIID                  = S.PIID                ,
           T.PROCESSID             = S.PROCESSID           ,
           T.ACTIVITYID            = S.ACTIVITYID          ,
           T.NEWMANAGERCODE        = S.NEWMANAGERCODE      ,
           T.ISFAMILYCAR           = S.ISFAMILYCAR         ,
           T.CARSTATUS             = S.CARSTATUS           ,
           T.COVERAGE              = S.COVERAGE            ,
           T.UPPERPATH             = S.UPPERPATH           ,
           T.MONOPOLYCODE          = S.MONOPOLYCODE        ,
           T.VALIDSTATUS           = S.VALIDSTATUS         ,
           T.TRANS_TYPE            = S.TRANS_TYPE          ,
           T.TP_INPUTTIME          = S.TP_INPUTTIME        ,
           T.DATASOURCE            = S.DATASOURCE          ,
           T.LOADTIME              = S.LOADTIME            ,
           T.OPERTYPE              = S.OPERTYPE            ,
           T.LICENSENO             = S.LICENSENO           ,
           T.OPERATEDATE           = S.OPERATEDATE         ,
           T.AGENTTYPE             = S.AGENTTYPE           ,
           T.CUSTOMERCNAME         = S.CUSTOMERCNAME       ,
           T.ENGINENO              = S.ENGINENO            ,
           T.VINNO                 = S.VINNO               ,
           T.FRAMENO               = S.FRAMENO             ,
           T.TEAMCODE              = S.TEAMCODE            ,
           T.TEAMCODE_LEVEL1       = S.TEAMCODE_LEVEL1     ,
           T.TEAMCODE_LEVEL2       = S.TEAMCODE_LEVEL2     ,
           T.TEAMCODE_LEVEL3       = S.TEAMCODE_LEVEL3     ,
           T.TEAMCODE_LEVEL4       = S.TEAMCODE_LEVEL4     ,
           T.TEAMCODE_LEVEL5       = S.TEAMCODE_LEVEL5     ,
           T.TEAMCODE_LEVEL6       = S.TEAMCODE_LEVEL6     ,
           T.Username              = S.Username            ,
           T.LASTDAMAGEDCI         =S.LASTDAMAGEDCI  ,   
           T.DAMAGED               =S.DAMAGED        ,   
           T.SUMTAX                =S.SUMTAX         ,   
           T.XXZ_FLAG              =S.XXZ_FLAG       ,   
           T.ENROLLDATE            =S.ENROLLDATE     ,
           T.UPPERPATH_TEAM  =                    S.UPPERPATH_TEAM  ,            
           T.COMCODE_YWY     =                    S.COMCODE_YWY     ,
           T.UPPER_TEAMCODE  =                    S.UPPER_TEAMCODE  ,
           T.UPPER_COMCODE   =                    S.UPPER_COMCODE   ,
           T.OPERATETIMEFORHIS = current_timestamp(0)    
               
    when not matched then
    INSERT(
           CARID                  ,
            CUSTID                 ,
            KHSTCUSTID             ,
            BI_POLICYNO            ,
            CI_POLICYNO            ,
            BI_PROPOSALNO          ,
            CI_PROPOSALNO          ,
            OPERCODE               ,
            COMID                  ,
            COMCODE                ,
            USERTYPE               ,
            CUSTSTATUSTYPE         ,
            BI_PREMIUM             ,
            CI_PREMIUM             ,
            VALIDTIME              ,
            STARTDATE              ,
            ENDDATE                ,
            RISKCODE               ,
            PIID                   ,
            PROCESSID              ,
            ACTIVITYID             ,
            NEWMANAGERCODE         ,
            ISFAMILYCAR            ,
            CARSTATUS              ,
            COVERAGE               ,
            UPPERPATH              ,
            MONOPOLYCODE           ,
            VALIDSTATUS            ,
            TRANS_TYPE             ,
            TP_INPUTTIME           ,
            DATASOURCE             ,
            LOADTIME               ,
            OPERTYPE               ,
            LICENSENO              ,
            OPERATEDATE            ,
            AGENTTYPE              ,
            CUSTOMERCNAME          ,
            ENGINENO               ,
            VINNO                  ,
            FRAMENO                ,
            TEAMCODE               ,
            TEAMCODE_LEVEL1        ,
            TEAMCODE_LEVEL2        ,
            TEAMCODE_LEVEL3        ,
            TEAMCODE_LEVEL4        ,
            TEAMCODE_LEVEL5        ,
            TEAMCODE_LEVEL6        ,
            Username               ,
            LASTDAMAGEDCI  ,  
            DAMAGED        ,  
            SUMTAX         ,  
            XXZ_FLAG       ,  
            ENROLLDATE     ,
            UPPERPATH_TEAM  ,
            COMCODE_YWY     ,
            UPPER_TEAMCODE  ,
            UPPER_COMCODE   ,
            INSERTTIMEFORHIS  ,
            OPERATETIMEFORHIS       
    )
    VALUES(
            S.CARID                  ,
            S.CUSTID                 ,
            S.KHSTCUSTID             ,
            S.BI_POLICYNO            ,
            S.CI_POLICYNO            ,
            S.BI_PROPOSALNO          ,
            S.CI_PROPOSALNO          ,
            S.OPERCODE               ,
            S.COMID                  ,
            S.COMCODE                ,
            S.USERTYPE               ,
            S.CUSTSTATUSTYPE         ,
            S.BI_PREMIUM             ,
            S.CI_PREMIUM             ,
            S.VALIDTIME              ,
            S.STARTDATE              ,
            S.ENDDATE                ,
            S.RISKCODE               ,
            S.PIID                   ,
            S.PROCESSID              ,
            S.ACTIVITYID             ,
            S.NEWMANAGERCODE         ,
            S.ISFAMILYCAR            ,
            S.CARSTATUS              ,
            S.COVERAGE               ,
            S.UPPERPATH              ,
            S.MONOPOLYCODE           ,
            S.VALIDSTATUS            ,
            S.TRANS_TYPE             ,
            S.TP_INPUTTIME           ,
            S.DATASOURCE             ,
            S.LOADTIME               ,
            S.OPERTYPE               ,
            S.LICENSENO              ,
            S.OPERATEDATE            ,
            S.AGENTTYPE              ,
            S.CUSTOMERCNAME          ,
            S.ENGINENO               ,
            S.VINNO                  ,
            S.FRAMENO                ,
            S.TEAMCODE               ,
            S.TEAMCODE_LEVEL1        ,
            S.TEAMCODE_LEVEL2        ,
            S.TEAMCODE_LEVEL3        ,
            S.TEAMCODE_LEVEL4        ,
            S.TEAMCODE_LEVEL5        ,
            S.TEAMCODE_LEVEL6        ,
            S.Username               ,
            S.LASTDAMAGEDCI  ,  
            S.DAMAGED        ,  
            S.SUMTAX         ,  
            S.XXZ_FLAG       ,  
            S.ENROLLDATE     ,
            S.UPPERPATH_TEAM  ,
            S.COMCODE_YWY     ,
            S.UPPER_TEAMCODE  ,
            S.UPPER_COMCODE   ,
            current_timestamp(0),
            current_timestamp(0)    
    );
-- clean up
DROP SCHEMA mergeinto_misc CASCADE;
NOTICE:  drop cascades to 19 other objects
DETAIL:  drop cascades to table t1
drop cascades to table t2
drop cascades to table row_update
drop cascades to table col_update
drop cascades to table labor_plan
drop cascades to table test
drop cascades to table item_inventory_plan
drop cascades to table test_des
drop cascades to table test_orc
drop cascades to table offers_20050701
drop cascades to table region
drop cascades to table item_price_history
drop cascades to table item
drop cascades to table demographics
drop cascades to table rp_t_company
drop cascades to table d_t_organ
drop cascades to table rp_t_telesales
drop cascades to table rp_t_cardetail
drop cascades to table rp_t_cardetail_one
