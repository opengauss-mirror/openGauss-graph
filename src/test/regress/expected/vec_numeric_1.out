---- prepare work
DROP SCHEMA IF EXISTS vec_numeric_to_bigintger_1 CASCADE;
NOTICE:  schema "vec_numeric_to_bigintger_1" does not exist, skipping
CREATE SCHEMA vec_numeric_to_bigintger_1;
SET current_schema = vec_numeric_to_bigintger_1;
SET enable_fast_numeric = on;
---- NUMERIC TABLE
CREATE TABLE vec_numeric_3 (id int, val1 int, val2 numeric(19,4), val3 numeric(19,4)) WITH (orientation=column);
COPY vec_numeric_3 FROM STDIN;
analyze vec_numeric_3;
---- vnumeric_sum bi64add_64<use_ctl>
SELECT id, sum(val2 + val3), sum(CASE WHEN val1 < 0 THEN 100.12345 ELSE val2 END), sum(CASE WHEN val1 > 0 THEN val2 ELSE 999999999999999.99 END) FROM vec_numeric_3 GROUP BY id ORDER BY 1,2,3,4;
 id |          sum           |          sum           |          sum           
----+------------------------+------------------------+------------------------
 -1 | -4000000000000119.8760 | -999999999998728.36415 | 11999999999999969.9010
  1 |  4000000000000079.9160 | 1000000000001221.46040 | 13000000000000019.8590
(2 rows)

---- vnumeric_sum bi128add_128<use_ctl>
SELECT id, sum(val2 * val3 * 10.0), sum(CASE WHEN val1 < 0 THEN 112332100.1999999009892345 ELSE val2 END), sum(CASE WHEN val1 > 0 THEN val2 ELSE 99999999999998989898998999.99 END), sum(CASE WHEN val1 < 0 THEN val2 * val3 ELSE 123.1233212343898765 END) FROM vec_numeric_3 GROUP BY id ORDER BY 1,2,3,4,5;
 id |                    sum                    |                sum                |                sum                |                      sum                       
----+-------------------------------------------+-----------------------------------+-----------------------------------+------------------------------------------------
 -1 | 1999999999999999996000000005988.006002000 | -999998539682727.3690012871399515 | 1299999999998986868686986969.9010 | 99999999999999999800000001900.0034761470683945
  1 | 1999999999999999996000000003992.004002000 | 1000001347985222.3789988118708140 | 1200000000000987878787988019.8590 | 99999999999999999800000001677.0800549126785180
(2 rows)

---- NUMERIC TABLE, test agg operation
CREATE TABLE aggt_row(a numeric, b numeric, c numeric, d numeric);
INSERT INTO aggt_row VALUES(1, 1, generate_series(1, 1000)%10, generate_series(1, 1000)%5);
INSERT INTO aggt_row VALUES(1, 2, generate_series(1, 500)%10, generate_series(1, 500)%5);
INSERT INTO aggt_row VALUES (3,1,11,11),(4,2,12,12);
CREATE TABLE aggt_col(a numeric, b numeric, c numeric, d numeric) WITH(orientation=column);
INSERT INTO aggt_col SELECT * FROM aggt_row;
analyze aggt_col;
---- agg function
SELECT b, sum(a), count(a), avg(a), min(a), max(a) FROM aggt_col GROUP BY b ORDER BY 1,2,3,4,5,6;
 b | sum  | count |        avg         | min | max 
---+------+-------+--------------------+-----+-----
 1 | 1003 |  1001 | 1.0019980019980020 |   1 |   3
 2 |  504 |   501 | 1.0059880239520958 |   1 |   4
(2 rows)

SELECT b, sum(a + 0.2000), count(a / 10000.000000), avg(a * 100.00), min(a * -1), max(a * 100) FROM aggt_col GROUP BY b ORDER BY 1,2,3,4,5,6;
 b |    sum    | count |         avg          | min | max 
---+-----------+-------+----------------------+-----+-----
 1 | 1203.2000 |  1001 | 100.1998001998001998 |  -3 | 300
 2 |  604.2000 |   501 | 100.5988023952095808 |  -4 | 400
(2 rows)

SELECT c, sum(a + b - a / 2), count(a / 10000.000000), avg(a - b + b / 2.333), min(a * -1), min(b * 100), max(a * 100 - 99.88) FROM aggt_col GROUP BY c ORDER BY 1,2,3,4,5,6;
 c  |           sum            | count |          avg           | min | min |  max   
----+--------------------------+-------+------------------------+-----+-----+--------
  0 | 275.00000000000000000000 |   150 |  .23817688241177311044 |  -1 | 100 |    .12
  1 | 275.00000000000000000000 |   150 |  .23817688241177311044 |  -1 | 100 |    .12
  2 | 275.00000000000000000000 |   150 |  .23817688241177311044 |  -1 | 100 |    .12
  3 | 275.00000000000000000000 |   150 |  .23817688241177311044 |  -1 | 100 |    .12
  4 | 275.00000000000000000000 |   150 |  .23817688241177311044 |  -1 | 100 |    .12
  5 | 275.00000000000000000000 |   150 |  .23817688241177311044 |  -1 | 100 |    .12
  6 | 275.00000000000000000000 |   150 |  .23817688241177311044 |  -1 | 100 |    .12
  7 | 275.00000000000000000000 |   150 |  .23817688241177311044 |  -1 | 100 |    .12
  8 | 275.00000000000000000000 |   150 |  .23817688241177311044 |  -1 | 100 |    .12
  9 | 275.00000000000000000000 |   150 |  .23817688241177311044 |  -1 | 100 |    .12
 11 |       2.5000000000000000 |     1 | 2.42863266180882983283 |  -3 | 100 | 200.12
 12 |       4.0000000000000000 |     1 | 2.85726532361765966567 |  -4 | 200 | 300.12
(12 rows)

SELECT c, sum(a + b - a / 2), count(a / 10000.000000), avg(a - b + b / 2), min(a * -1), min(b * 100), max(a * 100 - 99.88) FROM aggt_col WHERE d / 5 > 0.2 GROUP BY c ORDER BY 1,2,3,4,5,6;
 c  |           sum            | count |          avg           | min | min |  max   
----+--------------------------+-------+------------------------+-----+-----+--------
  2 | 275.00000000000000000000 |   150 |  .33333333333333333333 |  -1 | 100 |    .12
  3 | 275.00000000000000000000 |   150 |  .33333333333333333333 |  -1 | 100 |    .12
  4 | 275.00000000000000000000 |   150 |  .33333333333333333333 |  -1 | 100 |    .12
  7 | 275.00000000000000000000 |   150 |  .33333333333333333333 |  -1 | 100 |    .12
  8 | 275.00000000000000000000 |   150 |  .33333333333333333333 |  -1 | 100 |    .12
  9 | 275.00000000000000000000 |   150 |  .33333333333333333333 |  -1 | 100 |    .12
 11 |       2.5000000000000000 |     1 | 2.50000000000000000000 |  -3 | 100 | 200.12
 12 |       4.0000000000000000 |     1 | 3.00000000000000000000 |  -4 | 200 | 300.12
(8 rows)

---- NUMERIC TABLE, test numeric functions
create table vec_numeric_4(id int,num numeric(18, 8),str text) with (orientation=column);
COPY vec_numeric_4 FROM stdin DELIMITER as ',' NULL as '' ;
analyze vec_numeric_4;
---- operator 
select num, abs(num), acos(num/1000000.0), asin(num/1000000.0), atan(num), ceil(num), cos(num), exp(num/1000000.00) from vec_numeric_4 order by 1;
       num        |       abs       |       acos       |         asin         |       atan        |  ceil   |        cos        |            exp             
------------------+-----------------+------------------+----------------------+-------------------+---------+-------------------+----------------------------
 -937933.60980600 | 937933.60980600 |  2.7874196086931 |    -1.21662328189821 | -1.57079526062135 | -937933 |  .127157294919409 |      .39143585944601509435
 -744640.24148400 | 744640.24148400 | 2.41079201422523 |    -.839995687430336 | -1.57079498386452 | -744640 |  .452549330399525 |      .47490512037236335173
 -722885.02145000 | 722885.02145000 | 2.37876490892052 |     -.80796858212562 | -1.57079494344904 | -722885 |  -.15984140658769 |      .48534998901842333787
 -676950.40632900 | 676950.40632900 | 2.31440771625508 |    -.743611389460181 | -1.57079484958181 | -676950 |  .999772450129948 |      .50816432651014929664
  -84412.90930200 |  84412.90930200 | 1.65530980682763 |   -.0845134800327288 | -1.57078448026564 |  -84412 | -.114253583852174 |      .91905169274494522198
       2.00000000 |      2.00000000 |  1.5707943267949 | 2.00000000000133e-06 |  1.10714871779409 |       2 | -.416146836547142 | 1.000002000002000001333334
    2218.95252600 |   2218.95252600 | 1.56857737244796 |   .00221895434693207 |  1.57034566373628 |    2219 |  .550266826502542 |     1.00222141622309493983
   66009.72018100 |  66009.72018100 | 1.50473857520159 |    .0660577515933104 |  1.57078117751086 |   66010 |  .145620469318815 |     1.06823710057349742913
  326045.78831100 | 326045.78831100 | 1.23867856951187 |     .332117757283026 |  1.57079325974102 |  326046 |  .302340546941767 |     1.38547880615489066125
  478104.38475800 | 478104.38475800 | 1.07230115559413 |     .498495171200771 |  1.57079423520145 |  478105 | -.447551013607765 |     1.61301384865632870154
  507877.48814900 | 507877.48814900 | 1.03807727327568 |     .532719053519217 |  1.57079435781611 |  507878 |  .232076533059434 |     1.66176034311223540574
  537680.71698700 | 537680.71698700 | 1.00311237847968 |     .567683948315213 |  1.57079446695509 |  537681 | -.962175577309009 |     1.71203156831692121040
  963449.34979100 | 963449.34979100 | .271202893034983 |     1.29959343375991 |  1.57079528885761 |  963450 | -.147504777546478 |     2.62072068298805103501
                  |                 |                  |                      |                   |         |                   |                           
                  |                 |                  |                      |                   |         |                   |                           
                  |                 |                  |                      |                   |         |                   |                           
(16 rows)

select num, floor(num), ln(@num), log(@num), log(@num, 11), mod(num, 100), power(num % 10, 5) from vec_numeric_4 order by 1;
       num        |  floor  |         ln         |        log         |        log         |     mod      |         power          
------------------+---------+--------------------+--------------------+--------------------+--------------+------------------------
 -937933.60980600 | -937934 | 13.751434447025026 |  5.972172098597264 | .17437419216415850 | -33.60980600 |  -612.9419029238385751
 -744640.24148400 | -744641 | 13.520656483392316 |  5.871946502446709 | .17735050629706862 | -40.24148400 |     -.0008211865073497
 -722885.02145000 | -722886 | 13.491005458687959 |  5.859069226034829 | .17774029371948480 | -85.02145000 | -3192.6088507215548556
 -676950.40632900 | -676951 | 13.425353294157954 |  5.830556853254444 | .17860947270876032 | -50.40632900 |     -.0110761568389186
  -84412.90930200 |  -84413 | 11.343475622702972 |  4.926408868543954 | .21138982024161918 | -12.90930200 |  -208.4222248494900209
       2.00000000 |       2 |  .6931471805599453 |  .3010299956639812 | 3.4594316186372973 |   2.00000000 |    32.0000000000000000
    2218.95252600 |    2218 | 7.7047905283819656 | 3.3461480106967276 |  .3112213452092302 |  18.95252600 | 57507.9590527187365538
   66009.72018100 |   66009 | 11.097557285634292 |  4.819607891756203 | .21607415137225096 |   9.72018100 | 86770.4320899231462019
  326045.78831100 |  326045 | 12.694793105427691 |  5.513278594590692 | .18888809395193250 |  45.78831100 |  6497.6944692393676082
  478104.38475800 |  478104 | 13.077584365787366 |  5.679522726685690 | .18335918971943865 |   4.38475800 |  1620.7952142786038923
  507877.48814900 |  507877 | 13.137995532414626 |  5.705758962997247 | .18251606699683986 |  77.48814900 | 23543.5737984717180353
  537680.71698700 |  537680 | 13.195020200125699 |  5.730524461516533 | .18172729078319468 |  80.71698700 |      .1894769593787879
  963449.34979100 |  963449 | 13.778275196478113 |  5.983828887974888 | .17403450276644934 |  49.34979100 | 71451.1980257641455553
                  |         |                    |                    |                    |              |                       
                  |         |                    |                    |                    |              |                       
                  |         |                    |                    |                    |              |                       
(16 rows)

select num, round(num), round(num, 2), sign(num), sin(num), sqrt(@num), tan(num), trunc(num) from vec_numeric_4 order by 1;
       num        |  round  |   round    | sign |        sin         |        sqrt        |        tan         |  trunc  
------------------+---------+------------+------+--------------------+--------------------+--------------------+---------
 -937933.60980600 | -937934 | -937933.61 |   -1 |   .991882564797254 |  968.4697258076785 |   7.80043776038096 | -937933
 -744640.24148400 | -744640 | -744640.24 |   -1 |  -.891739369745971 |  862.9253974035067 |  -1.97047992305881 | -744640
 -722885.02145000 | -722885 | -722885.02 |   -1 |   .987142707383319 |  850.2264530406002 |  -6.17576339233331 | -722885
 -676950.40632900 | -676950 | -676950.41 |   -1 | -.0213318532050164 |  822.7699595445862 | -.0213367083702334 | -676950
  -84412.90930200 |  -84413 |  -84412.91 |   -1 |   .993451618639244 |  290.5389979021749 |  -8.69514622775082 |  -84412
       2.00000000 |       2 |       2.00 |    1 |   .909297426825682 |  1.414213562373095 |  -2.18503986326152 |       2
    2218.95252600 |    2219 |    2218.95 |    1 |   .834988873968283 | 47.105758947287963 |   1.51742542663423 |    2218
   66009.72018100 |   66010 |   66009.72 |    1 |  -.989340527278332 |  256.9235687534330 |  -6.79396606745109 |   66009
  326045.78831100 |  326046 |  326045.79 |    1 |  -.953199975700248 |  571.0041929014182 |  -3.15273616239055 |  326045
  478104.38475800 |  478104 |  478104.38 |    1 |   -.89425840237521 |  691.4509272233280 |   1.99811501970799 |  478104
  507877.48814900 |  507877 |  507877.49 |    1 |   .972697528938525 |  712.6552379299545 |    4.1912791272585 |  507877
  537680.71698700 |  537681 |  537680.72 |    1 |  -.272430098245542 |  733.2671525351453 |   .283139693700674 |  537680
  963449.34979100 |  963449 |  963449.35 |    1 |  -.989061343194124 |  981.5545577251424 |   6.70528344671736 |  963449
                  |         |            |      |                    |                    |                    |        
                  |         |            |      |                    |                    |                    |        
                  |         |            |      |                    |                    |                    |        
(16 rows)

select num + 1, cbrt(num), cot(num), degrees(num), radians(num), width_bucket(num,@num,@num-1, 10) from vec_numeric_4 order by 1;
     ?column?     |       cbrt        |        cot        |      degrees      |      radians      | width_bucket 
------------------+-------------------+-------------------+-------------------+-------------------+--------------
 -937932.60980600 |  -97.886777814592 |  .128197933336393 |  -53739637.305354 | -16370.0296562305 |            0
 -744639.24148400 | -90.6390825233917 |  -.50749058049152 | -42664743.0926356 | -12996.4239567415 |            0
 -722884.02145000 | -89.7476478802573 | -.161923301861178 |  -41418260.802309 | -12616.7237376523 |            0
 -676949.40632900 | -87.8049401250446 | -46.8675853204748 | -38786401.2223179 | -11815.0134631545 |            0
  -84411.90930200 | -43.8668338287217 | -.115006691527334 | -4836503.43942521 | -1473.28319850725 |            0
       3.00000000 |  1.25992104989487 | -.457657554360286 |  114.591559026165 | .0349065850398866 |            1
    2219.95252600 |  13.0431554483461 |  .659010968478418 |  127136.614679693 |  38.7280275241451 |            1
   66010.72018100 |   40.414384027243 | -.147189431043946 |  3782078.37321084 |   1152.0869554786 |            1
  326046.78831100 |  68.8271095723018 | -.317184803450776 |  18681047.5982362 |  5690.57251828739 |            1
  478105.38475800 |  78.1941462487873 |  .500471689635836 |  27393363.4133322 |  8344.49568224889 |            1
  507878.48814900 |  79.7847069722392 |  .238590647302962 |  29099236.5806432 |  8864.13436495853 |            1
  537681.71698700 |  81.3157778083789 |  3.53182553434973 |  30806835.8089232 |  9384.29883590695 |            1
  963450.34979100 |   98.766492137689 |  .149136126451084 |  55201581.5176477 |  16815.3633300515 |            1
                  |                   |                   |                   |                   |             
                  |                   |                   |                   |                   |             
                  |                   |                   |                   |                   |             
(16 rows)

---- transform function
select num, num::float4::numeric, num::float8::numeric(18,8) from vec_numeric_4 order by 1;
       num        |   num    |       num        
------------------+----------+------------------
 -937933.60980600 |  -937934 | -937933.60980600
 -744640.24148400 |  -744640 | -744640.24148400
 -722885.02145000 |  -722885 | -722885.02145000
 -676950.40632900 |  -676950 | -676950.40632900
  -84412.90930200 | -84412.9 |  -84412.90930200
       2.00000000 |        2 |       2.00000000
    2218.95252600 |  2218.95 |    2218.95252600
   66009.72018100 |  66009.7 |   66009.72018100
  326045.78831100 |   326046 |  326045.78831100
  478104.38475800 |   478104 |  478104.38475800
  507877.48814900 |   507878 |  507877.48814900
  537680.71698700 |   537681 |  537680.71698700
  963449.34979100 |   963449 |  963449.34979100
                  |          |                 
                  |          |                 
                  |          |                 
(16 rows)

select num, num::char(20)::numeric(18,2), num::varchar(20)::numeric(18,6), num::bpchar(12)::numeric(18,8), num::text::numeric(18,2) from vec_numeric_4 order by 1;
       num        |    num     |      num       |       num        |    num     
------------------+------------+----------------+------------------+------------
 -937933.60980600 | -937933.61 | -937933.609806 | -937933.60980000 | -937933.61
 -744640.24148400 | -744640.24 | -744640.241484 | -744640.24140000 | -744640.24
 -722885.02145000 | -722885.02 | -722885.021450 | -722885.02140000 | -722885.02
 -676950.40632900 | -676950.41 | -676950.406329 | -676950.40630000 | -676950.41
  -84412.90930200 |  -84412.91 |  -84412.909302 |  -84412.90930000 |  -84412.91
       2.00000000 |       2.00 |       2.000000 |       2.00000000 |       2.00
    2218.95252600 |    2218.95 |    2218.952526 |    2218.95252600 |    2218.95
   66009.72018100 |   66009.72 |   66009.720181 |   66009.72018100 |   66009.72
  326045.78831100 |  326045.79 |  326045.788311 |  326045.78831000 |  326045.79
  478104.38475800 |  478104.38 |  478104.384758 |  478104.38475000 |  478104.38
  507877.48814900 |  507877.49 |  507877.488149 |  507877.48814000 |  507877.49
  537680.71698700 |  537680.72 |  537680.716987 |  537680.71698000 |  537680.72
  963449.34979100 |  963449.35 |  963449.349791 |  963449.34979000 |  963449.35
                  |            |                |                  |           
                  |            |                |                  |           
                  |            |                |                  |           
(16 rows)

select num, numtoday(num), to_char(num, '9,999,999.999') from vec_numeric_4 order by 1;
       num        |                    numtoday                    |    to_char     
------------------+------------------------------------------------+----------------
 -937933.60980600 | @ 937933 days 14 hours 38 mins 7.2384 secs ago |   -937,933.610
 -744640.24148400 | @ 744640 days 5 hours 47 mins 44.2176 secs ago |   -744,640.241
 -722885.02145000 | @ 722885 days 30 mins 53.28 secs ago           |   -722,885.021
 -676950.40632900 | @ 676950 days 9 hours 45 mins 6.8256 secs ago  |   -676,950.406
  -84412.90930200 | @ 84412 days 21 hours 49 mins 23.6928 secs ago |    -84,412.909
       2.00000000 | @ 2 days                                       |          2.000
    2218.95252600 | @ 2218 days 22 hours 51 mins 38.2464 secs      |      2,218.953
   66009.72018100 | @ 66009 days 17 hours 17 mins 3.6384 secs      |     66,009.720
  326045.78831100 | @ 326045 days 18 hours 55 mins 10.0704 secs    |    326,045.788
  478104.38475800 | @ 478104 days 9 hours 14 mins 3.0912 secs      |    478,104.385
  507877.48814900 | @ 507877 days 11 hours 42 mins 56.0736 secs    |    507,877.488
  537680.71698700 | @ 537680 days 17 hours 12 mins 27.6768 secs    |    537,680.717
  963449.34979100 | @ 963449 days 8 hours 23 mins 41.9424 secs     |    963,449.350
                  |                                                | 
                  |                                                | 
                  |                                                | 
(16 rows)

---- AGG function
select id, regr_syy(num-1, num+1), regr_sxy(num-1, num+1), regr_sxx(num-1, num+1), regr_slope(num-1, num+1), regr_r2(num-1, num+1)  from vec_numeric_4 group by id order by 1;
 id |     regr_syy     |     regr_sxy     |     regr_sxx     |    regr_slope    |     regr_r2      
----+------------------+------------------+------------------+------------------+------------------
  1 | 52431909787.2627 | 52431909787.2627 | 52431909787.2627 |                1 |                1
  2 | 158212853058.292 | 158212853058.292 | 158212853058.292 |                1 |                1
  3 | 182641382204.181 | 182641382204.181 | 182641382204.181 |                1 |                1
  4 | 1054994433.15735 |  1054994433.1571 | 1054994433.15723 | .999999999999884 | .999999999999653
  5 |    1458785025911 |    1458785025911 |    1458785025911 |                1 |                1
  6 | 503951104912.693 | 503951104912.693 | 503951104912.693 |                1 |                1
(6 rows)

select id, regr_intercept(num-1, num+1), regr_count(num-1, num+1), regr_avgy(num-1, num+1), regr_avgx(num-1, num+1) from vec_numeric_4 group by id order by 1;
 id |  regr_intercept   | regr_count |    regr_avgy     |    regr_avgx     
----+-------------------+------------+------------------+------------------
  1 | -1.99999999998998 |          2 |   164131.3704185 |   164133.3704185
  2 | -2.00000000002159 |          2 |    196844.737728 |    196846.737728
  3 | -2.00000000004183 |          3 | 348519.068378667 | 348521.068378667
  4 | -1.99999999780619 |          2 |  -699918.7138895 |  -699916.7138895
  5 | -1.99999999999041 |          2 |   109403.5541535 |   109405.5541535
  6 | -2.00000000006075 |          2 |  -435962.9448125 |  -435960.9448125
(6 rows)

select id, every(num::int::bool), covar_samp(num,num), covar_pop(num,num), corr(num,num), bool_or(num::int::bool), bool_and(num::int::bool), bit_or(num), bit_and(num) from vec_numeric_4 group by id order by 1;
 id | every |    covar_samp    |    covar_pop     | corr | bool_or | bool_and | bit_or  | bit_and 
----+-------+------------------+------------------+------+---------+----------+---------+---------
  1 | t     | 52431909787.2627 | 26215954893.6313 |    1 | t       | t        |  326079 |    2186
  2 | t     | 158212853058.292 | 79106426529.1461 |    1 | t       | t        |     -37 |  393728
  3 | t     | 91320691102.0903 | 60880460734.7269 |    1 | t       | t        | 1032183 |       0
  4 | t     |  1054994433.1571 | 527497216.578552 |    1 | t       | t        | -656453 | -743382
  5 | t     |    1458785025911 | 729392512955.499 |    1 | t       | t        |  -85127 |  303936
  6 | t     | 503951104912.693 | 251975552456.347 |    1 | t       | t        | -937478 |   65554
(6 rows)

---- window function
select id, rank() over (partition by id order by num), row_number() over (partition by id order by num) from vec_numeric_4 order by 1,2,3;
 id | rank | row_number 
----+------+------------
  1 |    1 |          1
  1 |    2 |          2
  2 |    1 |          1
  2 |    2 |          2
  2 |    3 |          3
  3 |    1 |          1
  3 |    2 |          2
  3 |    3 |          3
  4 |    1 |          1
  4 |    2 |          2
  4 |    3 |          3
  5 |    1 |          1
  5 |    2 |          2
  5 |    3 |          3
  6 |    1 |          1
  6 |    2 |          2
(16 rows)

---- conditional expression
select id, greatest(num, num + 10, num * 2), least(num, num + 10, num * 2), nvl(num, 100.00), nullif(num, @num), coalesce(num, 100.00), (case when num>0 then num else -num end) from vec_numeric_4 order by 1,2;
 id |     greatest     |       least       |       nvl        |      nullif      |     coalesce     |      case       
----+------------------+-------------------+------------------+------------------+------------------+-----------------
  1 |    4437.90505200 |     2218.95252600 |    2218.95252600 |                  |    2218.95252600 |   2218.95252600
  1 |  652091.57662200 |   326045.78831100 |  326045.78831100 |                  |  326045.78831100 | 326045.78831100
  2 |  -84402.90930200 |  -168825.81860400 |  -84412.90930200 |  -84412.90930200 |  -84412.90930200 |  84412.90930200
  2 |  956208.76951600 |   478104.38475800 |  478104.38475800 |                  |  478104.38475800 | 478104.38475800
  2 |                  |                   |           100.00 |                  |           100.00 |                
  3 |      12.00000000 |        2.00000000 |       2.00000000 |                  |       2.00000000 |      2.00000000
  3 | 1015754.97629800 |   507877.48814900 |  507877.48814900 |                  |  507877.48814900 | 507877.48814900
  3 | 1075361.43397400 |   537680.71698700 |  537680.71698700 |                  |  537680.71698700 | 537680.71698700
  4 | -722875.02145000 | -1445770.04290000 | -722885.02145000 | -722885.02145000 | -722885.02145000 | 722885.02145000
  4 | -676940.40632900 | -1353900.81265800 | -676950.40632900 | -676950.40632900 | -676950.40632900 | 676950.40632900
  4 |                  |                   |           100.00 |                  |           100.00 |                
  5 | -744630.24148400 | -1489280.48296800 | -744640.24148400 | -744640.24148400 | -744640.24148400 | 744640.24148400
  5 | 1926898.69958200 |   963449.34979100 |  963449.34979100 |                  |  963449.34979100 | 963449.34979100
  5 |                  |                   |           100.00 |                  |           100.00 |                
  6 | -937923.60980600 | -1875867.21961200 | -937933.60980600 | -937933.60980600 | -937933.60980600 | 937933.60980600
  6 |  132019.44036200 |    66009.72018100 |   66009.72018100 |                  |   66009.72018100 |  66009.72018100
(16 rows)

---- between and, inlist not inlist
select num + 1.00 from vec_numeric_4 where num between -100000000000 and 100000000000 order by 1;
     ?column?     
------------------
 -937932.60980600
 -744639.24148400
 -722884.02145000
 -676949.40632900
  -84411.90930200
       3.00000000
    2219.95252600
   66010.72018100
  326046.78831100
  478105.38475800
  507878.48814900
  537681.71698700
  963450.34979100
(13 rows)

select num from vec_numeric_4 where num in (select num from vec_numeric_4) order by 1;
       num        
------------------
 -937933.60980600
 -744640.24148400
 -722885.02145000
 -676950.40632900
  -84412.90930200
       2.00000000
    2218.95252600
   66009.72018100
  326045.78831100
  478104.38475800
  507877.48814900
  537680.71698700
  963449.34979100
(13 rows)

---- DROP SCHEMA
DROP SCHEMA vec_numeric_to_bigintger_1 CASCADE;
NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to table vec_numeric_3
drop cascades to table aggt_row
drop cascades to table aggt_col
drop cascades to table vec_numeric_4
