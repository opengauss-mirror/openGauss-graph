set enable_global_stats = true;
/*
 * This file is used to test the function of ExecVecGroup()
 */
----
--- Create Table and Insert Data
----
create schema vector_group_engine;
set current_schema=vector_group_engine;
set enable_hashagg=off;
create table vector_group_engine.ROW_GROUP_TABLE_01
(
	col_int0	int4
   ,col_int		int
   ,col_bint	bigint
   ,col_serial	bigint
   ,col_char	char(25)
   ,col_vchar	varchar(35)
   ,col_text	text
   ,col_num		numeric(10,4)
   ,col_decimal	decimal
   ,col_float	float
   ,col_date	date
   ,col_time	time
   ,col_timetz	timetz
   ,col_interval	interval
   ,col_tinterval	tinterval
)distribute by hash(col_int);
create table vector_group_engine.VECTOR_GROUP_TABLE_01
(
	col_int0	int4
   ,col_int		int
   ,col_bint	bigint
   ,col_serial	bigint
   ,col_char	char(25)
   ,col_vchar	varchar(35)
   ,col_text	text
   ,col_num		numeric(10,4)
   ,col_decimal	decimal
   ,col_float	float
   ,col_date	date
   ,col_time	time
   ,col_timetz	timetz
   ,col_interval	interval
   ,col_tinterval	tinterval
)with(orientation = orc) tablespace hdfs_ts distribute by hash(col_int);
insert into ROW_GROUP_TABLE_01 values(1, 10, 100, 2147483647, 'aa', 'aaaaaa', 'tiananmen', 9.01, 10.01, 1100.01, '2015-02-14', '16:00:38', '1996-2-6 01:00:30+8', '2 day 13:24:56','["Sep 4, 1983 23:59:12" "Oct4, 1983 23:59:12"]');
insert into ROW_GROUP_TABLE_01 values(11, 20, 100, -2147483647, 'aa', 'gggggg', 'xierqi', 7.01, 10.01, 1100.01, '2015-03-14', '16:02:38', '1996-2-8 01:00:30+8', '2 day 13:56:56','["May 10, 1947 23:59:12" "Jan 14, 1973 03:14:21"]');
insert into ROW_GROUP_TABLE_01 values(1, 30, 100, -2146483647, 'bb', 'aaaaaa', 'xierqi', 0.01, 10.01, 100.01, '2015-04-15', '16:02:38', '1996-2-6 01:00:30+8', '2 day 13:24:56','["May 10, 1947 23:59:12" "Jan 14, 1973 03:14:21"]');
insert into ROW_GROUP_TABLE_01 values(11, 40, 100, 2147483647, 'bb', 'aaaaaa', 'tiananmen', 0.04, 10.01, 100.01, '2015-05-16', '16:00:38', '1996-2-8 01:00:30+8', '2 day 13:24:56','["May 10, 1947 23:59:12" "Jan 14, 1973 03:14:21"]');
insert into ROW_GROUP_TABLE_01 values(1, 50, 200, 2119483647, 'cc', 'aaaaaa', 'wangfujing', 7.01, 10.11, 100.01, '2015-02-18', '16:00:38', '1996-2-6 01:00:30+8', '2 day 13:56:56','["Sep 4, 1983 23:59:12" "Oct4, 1983 23:59:12"]');
insert into ROW_GROUP_TABLE_01 values(11, 10, 100, 2105788455, 'dd', 'hhhhhh', 'wangfujing', 9.01, 10.01, 100.01, '2015-08-09', '16:00:38', '1996-2-8 01:00:30+8', '2 day 13:24:56','["Sep 4, 1983 23:59:12" "Oct4, 1983 23:59:12"]');
insert into ROW_GROUP_TABLE_01 values(1, 20, 100, 1158745898, 'dd', 'aaaaaa', 'tiananmen', 0.01, 10.01, 100.01, '2015-10-06', '16:05:38', '1996-2-6 01:00:30+8', '8 day 13:24:56','["Sep 4, 1983 23:59:12" "Oct4, 1983 23:59:12"]');
insert into ROW_GROUP_TABLE_01 values(11, 30, 100, 1198754521, 'ee', 'ffffff', 'xierqi', 0.08, 10.01, 1100.01, '2015-12-02', '16:05:38', '1996-2-6 01:00:30+8', '2 day 13:24:56','["Sep 4, 1983 23:59:12" "Oct4, 1983 23:59:12"]');
insert into ROW_GROUP_TABLE_01 values(1, 40, 200, -1246521526, 'ee', 'aaaaaa', 'wangfujing', 0.08, 10.01, 1100.01, '2015-06-16', '16:00:38', '1996-2-8 01:00:30+8', '10 day 13:24:56','["Feb 10, 1947 23:59:12" "Jan 14, 1973 03:14:21"]');
insert into ROW_GROUP_TABLE_01 values(11, 50, 100, 2024856154, 'gg', 'ffffff', 'tiananmen', 0.01, 10.11, 100.01, '2015-05-20', '16:00:38', '1996-2-6 01:00:30+8', '2 day 13:24:56','["Feb 10, 1947 23:59:12" "Jan 14, 1973 03:14:21"]');
insert into vector_group_table_01 select * from row_group_table_01;
CREATE TABLE vector_group_engine.row_group_table_02(
 C_CHAR_1 CHAR(1),
 C_CHAR_2 CHAR(10),
 C_CHAR_3 CHAR(100),
 C_VARCHAR_1 VARCHAR(1),
 C_VARCHAR_2 VARCHAR(10),
 C_VARCHAR_3 VARCHAR(1024),
 C_INT BIGINT,
 C_BIGINT BIGINT,
 C_SMALLINT BIGINT,
 C_FLOAT FLOAT,
 C_NUMERIC numeric(20,5),
 C_DP double precision,
 C_DATE DATE,
 C_TS_WITHOUT TIMESTAMP WITHOUT TIME ZONE,
 C_TS_WITH TIMESTAMP WITH TIME ZONE );
 
CREATE TABLE vector_group_engine.vector_group_table_02(
 C_CHAR_1 CHAR(1),
 C_CHAR_2 CHAR(10),
 C_CHAR_3 CHAR(100),
 C_VARCHAR_1 VARCHAR(1),
 C_VARCHAR_2 VARCHAR(10),
 C_VARCHAR_3 VARCHAR(1024),
 C_INT BIGINT,
 C_BIGINT BIGINT,
 C_SMALLINT BIGINT,
 C_FLOAT FLOAT,
 C_NUMERIC numeric(20,5),
 C_DP double precision,
 C_DATE DATE,
 C_TS_WITHOUT TIMESTAMP WITHOUT TIME ZONE,
 C_TS_WITH TIMESTAMP WITH TIME ZONE, PARTIAL CLUSTER KEY(C_NUMERIC))WITH (orientation = orc) tablespace hdfs_ts;
CREATE OR REPLACE PROCEDURE func_insert_tbl_group_01()
AS  
BEGIN  
       FOR I IN 1..110 LOOP  
	   FOR j IN 1..20 LOOP  
         INSERT INTO vector_group_engine.row_group_table_02 VALUES('A','b20_000eq','b20_000EFGGAHWGS','a','abcdx','b20_0001111ABHTFADFADFDAFAFEFAGEAFEAFEAGEAGEAGEE_'||i,i,j,i+j,i+0.0001,i+0.00001,i+0.000001,'2000-01-01','2000-01-01 01:01:01','2000-01-01 01:01:01+01');
       END LOOP; 
	    END LOOP; 
END;
/
CALL func_insert_tbl_group_01();
 func_insert_tbl_group_01 
--------------------------
 
(1 row)

 
insert into vector_group_table_02 select * from row_group_table_02;
analyze vector_group_table_01;
analyze vector_group_table_02; 
 
----
--- case 1: Basic Test
----
explain (verbose on, costs off) select col_bint from vector_group_table_01 group by col_bint having col_bint > 100 and col_bint < 300;
                                                                                                QUERY PLAN                                                                                                
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Row Adapter
   Output: vector_group_engine.vector_group_table_01.col_bint
   ->  Vector Group
         Output: vector_group_engine.vector_group_table_01.col_bint
         Group By Key: vector_group_engine.vector_group_table_01.col_bint
         ->  Vector Sort
               Output: vector_group_engine.vector_group_table_01.col_bint
               Sort Key: vector_group_engine.vector_group_table_01.col_bint
               ->  Vector Streaming (type: GATHER)
                     Output: vector_group_engine.vector_group_table_01.col_bint
                     Node/s: All datanodes
                     ->  Vector Group
                           Output: vector_group_engine.vector_group_table_01.col_bint
                           Group By Key: vector_group_engine.vector_group_table_01.col_bint
                           ->  Vector Sort
                                 Output: vector_group_engine.vector_group_table_01.col_bint
                                 Sort Key: vector_group_engine.vector_group_table_01.col_bint
                                 ->  Vector Result
                                       Output: vector_group_engine.vector_group_table_01.col_bint
                                       ->  Vector Append
                                             ->  Dfs Scan on vector_group_engine.vector_group_table_01
                                                   Output: vector_group_engine.vector_group_table_01.col_bint
                                                   Distribute Key: vector_group_engine.vector_group_table_01.col_int
                                                   Pushdown Predicate Filter: ((vector_group_engine.vector_group_table_01.col_bint > 100) AND (vector_group_engine.vector_group_table_01.col_bint < 300))
                                             ->  Vector Adapter
                                                   Output: cstore.vector_group_table_01.col_bint
                                                   ->  Seq Scan on cstore.pg_delta_vector_group_engine_vector_group_table_01 vector_group_table_01
                                                         Output: cstore.vector_group_table_01.col_bint
                                                         Distribute Key: cstore.vector_group_table_01.col_int
                                                         Filter: ((cstore.vector_group_table_01.col_bint > 100) AND (cstore.vector_group_table_01.col_bint < 300))
(30 rows)

select col_bint from vector_group_table_01 group by col_bint having col_bint > 100 and col_bint < 300;
 col_bint 
----------
      200
(1 row)

select col_vchar from vector_group_table_01 group by col_vchar having col_vchar > 'aaaaaa' order by 1;
 col_vchar 
-----------
 ffffff
 gggggg
 hhhhhh
(3 rows)

select col_text from vector_group_table_01 group by col_text having col_text = 'wangfujing' order by 1;
  col_text  
------------
 wangfujing
(1 row)

select col_num from vector_group_table_01 group by col_num order by 1;
 col_num 
---------
   .0100
   .0400
   .0800
  7.0100
  9.0100
(5 rows)

select col_time from vector_group_table_01 group by col_time having col_time > '16:00:38';
 col_time 
----------
 16:02:38
 16:05:38
(2 rows)

select col_timetz from vector_group_table_01 group by col_timetz order by 1;
 col_timetz  
-------------
 01:00:30+08
(1 row)

select col_interval from vector_group_table_01 group by col_interval order by 1;
            col_interval            
------------------------------------
 @ 2 days 13 hours 24 mins 56 secs
 @ 2 days 13 hours 56 mins 56 secs
 @ 8 days 13 hours 24 mins 56 secs
 @ 10 days 13 hours 24 mins 56 secs
(4 rows)

select A.col_float + A.col_decimal from vector_group_table_01 A group by A.col_float + A.col_decimal order by 1;
 ?column? 
----------
   110.02
   110.12
  1110.02
(3 rows)

select A.col_float + A.col_decimal, A.col_float, A.col_decimal from vector_group_table_01 A group by A.col_float, A.col_decimal order by 1, 2;
 ?column? | col_float | col_decimal 
----------+-----------+-------------
   110.02 |    100.01 |       10.01
   110.12 |    100.01 |       10.11
  1110.02 |   1100.01 |       10.01
(3 rows)

select A.col_int + B.col_bint from vector_group_table_01 A, row_group_table_01 B where A.col_int = B.col_int group by A.col_int + B.col_bint order by 1;
 ?column? 
----------
      110
      120
      130
      140
      150
      240
      250
(7 rows)

----
--- case 2: With NULL
----
insert into ROW_GROUP_TABLE_01 values(1, 40, 200, -1246521526, 'ee', NULL, 'wangfujing', 0.08, 10.01, 1100.01, NULL, '16:00:38', '1996-2-8 01:00:30+8', NULL);
insert into ROW_GROUP_TABLE_01 values(11, 50, 100, 2024856154, NULL, 'ffffff', 'tiananmen', 0.01, 10.11, 100.01, '2015-05-20', '16:00:38', '1996-2-6 01:00:30+8', '2 day 13:24:56','["Feb 10, 1947 23:59:12" "Jan 14, 1973 03:14:21"]');
insert into ROW_GROUP_TABLE_01 values(1, NULL, 200, -1246521526, 'ee', 'aaaaaa', 'wangfujing', 0.08, 10.01, 1100.01, NULL, '16:00:38', '1996-2-8 01:00:30+8', NULL);
insert into ROW_GROUP_TABLE_01 values(11, 50, 100, 2024856154, NULL, 'ffffff', 'tiananmen', 0.01, 10.11, 100.01, '2015-05-20', '16:00:38', '1996-2-6 01:00:30+8', '2 day 13:24:56','["Feb 10, 1947 23:59:12" "Jan 14, 1973 03:14:21"]');
insert into ROW_GROUP_TABLE_01 values(1, 40, 200, -1246521526, 'ee', NULL, 'wangfujing', 0.08, 10.01, 1100.01, '2015-06-15', NULL, '1996-2-8 01:00:30+8', NULL);
delete from vector_group_table_01;
insert into vector_group_table_01 select * from row_group_table_01;
select col_int from vector_group_table_01 group by col_int order by 1;
 col_int 
---------
      10
      20
      30
      40
      50
        
(6 rows)

select col_char from vector_group_table_01 group by col_char order by 1;
         col_char          
---------------------------
 aa                       
 bb                       
 cc                       
 dd                       
 ee                       
 gg                       
 
(7 rows)

select col_date from vector_group_table_01 group by col_date having col_date > '2015-01-01' order by 1;
         col_date         
--------------------------
 Sat Feb 14 00:00:00 2015
 Wed Feb 18 00:00:00 2015
 Sat Mar 14 00:00:00 2015
 Wed Apr 15 00:00:00 2015
 Sat May 16 00:00:00 2015
 Wed May 20 00:00:00 2015
 Mon Jun 15 00:00:00 2015
 Tue Jun 16 00:00:00 2015
 Sun Aug 09 00:00:00 2015
 Tue Oct 06 00:00:00 2015
 Wed Dec 02 00:00:00 2015
(11 rows)

----
--- case 3: With Big amount
----
SELECT C_INT,C_FLOAT,(C_INT+C_FLOAT) FROM vector_group_engine.vector_group_table_02 WHERE C_INT>10 GROUP BY C_INT,C_FLOAT HAVING C_FLOAT <20.0001 ORDER BY C_INT DESC LIMIT 5 OFFSET 2 ;
 c_int | c_float | ?column? 
-------+---------+----------
    17 | 17.0001 |  34.0001
    16 | 16.0001 |  32.0001
    15 | 15.0001 |  30.0001
    14 | 14.0001 |  28.0001
    13 | 13.0001 |  26.0001
(5 rows)

----
--- Clean Table and Resource
----
reset enable_hashagg;
drop schema vector_group_engine cascade;
NOTICE:  drop cascades to 5 other objects
DETAIL:  drop cascades to table row_group_table_01
drop cascades to table vector_group_table_01
drop cascades to table row_group_table_02
drop cascades to table vector_group_table_02
drop cascades to function func_insert_tbl_group_01()
