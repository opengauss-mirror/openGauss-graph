create database pl_test_llt DBCOMPATIBILITY 'pg';
\c pl_test_llt
--int1
create table source(a int);
insert into source values(1);
drop table t1;
ERROR:  table "t1" does not exist
drop table t2;
ERROR:  table "t2" does not exist
create table t1(a int1, b int1);
create table t2(a int1, b int1);
insert into t1 select generate_series(1, 127), generate_series(1, 127) from source;
insert into t2 select generate_series(1, 127), generate_series(1, 127) from source;
analyze t1;
analyze t2;
explain (costs off) select * from t1, t2 where t1.a = t2.b;
         QUERY PLAN         
----------------------------
 Hash Join
   Hash Cond: (t1.a = t2.b)
   ->  Seq Scan on t1
   ->  Hash
         ->  Seq Scan on t2
(5 rows)

select * from t1, t2 where t1.a = t2.b order by 1, 2, 3, 4;
  a  |  b  |  a  |  b  
-----+-----+-----+-----
 1   | 1   | 1   | 1
 2   | 2   | 2   | 2
 3   | 3   | 3   | 3
 4   | 4   | 4   | 4
 5   | 5   | 5   | 5
 6   | 6   | 6   | 6
 7   | 7   | 7   | 7
 8   | 8   | 8   | 8
 9   | 9   | 9   | 9
 10  | 10  | 10  | 10
 11  | 11  | 11  | 11
 12  | 12  | 12  | 12
 13  | 13  | 13  | 13
 14  | 14  | 14  | 14
 15  | 15  | 15  | 15
 16  | 16  | 16  | 16
 17  | 17  | 17  | 17
 18  | 18  | 18  | 18
 19  | 19  | 19  | 19
 20  | 20  | 20  | 20
 21  | 21  | 21  | 21
 22  | 22  | 22  | 22
 23  | 23  | 23  | 23
 24  | 24  | 24  | 24
 25  | 25  | 25  | 25
 26  | 26  | 26  | 26
 27  | 27  | 27  | 27
 28  | 28  | 28  | 28
 29  | 29  | 29  | 29
 30  | 30  | 30  | 30
 31  | 31  | 31  | 31
 32  | 32  | 32  | 32
 33  | 33  | 33  | 33
 34  | 34  | 34  | 34
 35  | 35  | 35  | 35
 36  | 36  | 36  | 36
 37  | 37  | 37  | 37
 38  | 38  | 38  | 38
 39  | 39  | 39  | 39
 40  | 40  | 40  | 40
 41  | 41  | 41  | 41
 42  | 42  | 42  | 42
 43  | 43  | 43  | 43
 44  | 44  | 44  | 44
 45  | 45  | 45  | 45
 46  | 46  | 46  | 46
 47  | 47  | 47  | 47
 48  | 48  | 48  | 48
 49  | 49  | 49  | 49
 50  | 50  | 50  | 50
 51  | 51  | 51  | 51
 52  | 52  | 52  | 52
 53  | 53  | 53  | 53
 54  | 54  | 54  | 54
 55  | 55  | 55  | 55
 56  | 56  | 56  | 56
 57  | 57  | 57  | 57
 58  | 58  | 58  | 58
 59  | 59  | 59  | 59
 60  | 60  | 60  | 60
 61  | 61  | 61  | 61
 62  | 62  | 62  | 62
 63  | 63  | 63  | 63
 64  | 64  | 64  | 64
 65  | 65  | 65  | 65
 66  | 66  | 66  | 66
 67  | 67  | 67  | 67
 68  | 68  | 68  | 68
 69  | 69  | 69  | 69
 70  | 70  | 70  | 70
 71  | 71  | 71  | 71
 72  | 72  | 72  | 72
 73  | 73  | 73  | 73
 74  | 74  | 74  | 74
 75  | 75  | 75  | 75
 76  | 76  | 76  | 76
 77  | 77  | 77  | 77
 78  | 78  | 78  | 78
 79  | 79  | 79  | 79
 80  | 80  | 80  | 80
 81  | 81  | 81  | 81
 82  | 82  | 82  | 82
 83  | 83  | 83  | 83
 84  | 84  | 84  | 84
 85  | 85  | 85  | 85
 86  | 86  | 86  | 86
 87  | 87  | 87  | 87
 88  | 88  | 88  | 88
 89  | 89  | 89  | 89
 90  | 90  | 90  | 90
 91  | 91  | 91  | 91
 92  | 92  | 92  | 92
 93  | 93  | 93  | 93
 94  | 94  | 94  | 94
 95  | 95  | 95  | 95
 96  | 96  | 96  | 96
 97  | 97  | 97  | 97
 98  | 98  | 98  | 98
 99  | 99  | 99  | 99
 100 | 100 | 100 | 100
 101 | 101 | 101 | 101
 102 | 102 | 102 | 102
 103 | 103 | 103 | 103
 104 | 104 | 104 | 104
 105 | 105 | 105 | 105
 106 | 106 | 106 | 106
 107 | 107 | 107 | 107
 108 | 108 | 108 | 108
 109 | 109 | 109 | 109
 110 | 110 | 110 | 110
 111 | 111 | 111 | 111
 112 | 112 | 112 | 112
 113 | 113 | 113 | 113
 114 | 114 | 114 | 114
 115 | 115 | 115 | 115
 116 | 116 | 116 | 116
 117 | 117 | 117 | 117
 118 | 118 | 118 | 118
 119 | 119 | 119 | 119
 120 | 120 | 120 | 120
 121 | 121 | 121 | 121
 122 | 122 | 122 | 122
 123 | 123 | 123 | 123
 124 | 124 | 124 | 124
 125 | 125 | 125 | 125
 126 | 126 | 126 | 126
 127 | 127 | 127 | 127
(127 rows)

drop table t1;
drop table t2;
--oid
create table t1(a oid, b oid);
create table t2(a oid, b oid);
insert into t1 select generate_series(1, 127), generate_series(1, 127) from source;
insert into t2 select generate_series(1, 127), generate_series(1, 127) from source;
analyze t1;
analyze t2;
explain (costs off) select * from t1, t2 where t1.a = t2.b;
         QUERY PLAN         
----------------------------
 Hash Join
   Hash Cond: (t1.a = t2.b)
   ->  Seq Scan on t1
   ->  Hash
         ->  Seq Scan on t2
(5 rows)

select * from t1, t2 where t1.a = t2.b order by 1, 2, 3, 4;
  a  |  b  |  a  |  b  
-----+-----+-----+-----
   1 |   1 |   1 |   1
   2 |   2 |   2 |   2
   3 |   3 |   3 |   3
   4 |   4 |   4 |   4
   5 |   5 |   5 |   5
   6 |   6 |   6 |   6
   7 |   7 |   7 |   7
   8 |   8 |   8 |   8
   9 |   9 |   9 |   9
  10 |  10 |  10 |  10
  11 |  11 |  11 |  11
  12 |  12 |  12 |  12
  13 |  13 |  13 |  13
  14 |  14 |  14 |  14
  15 |  15 |  15 |  15
  16 |  16 |  16 |  16
  17 |  17 |  17 |  17
  18 |  18 |  18 |  18
  19 |  19 |  19 |  19
  20 |  20 |  20 |  20
  21 |  21 |  21 |  21
  22 |  22 |  22 |  22
  23 |  23 |  23 |  23
  24 |  24 |  24 |  24
  25 |  25 |  25 |  25
  26 |  26 |  26 |  26
  27 |  27 |  27 |  27
  28 |  28 |  28 |  28
  29 |  29 |  29 |  29
  30 |  30 |  30 |  30
  31 |  31 |  31 |  31
  32 |  32 |  32 |  32
  33 |  33 |  33 |  33
  34 |  34 |  34 |  34
  35 |  35 |  35 |  35
  36 |  36 |  36 |  36
  37 |  37 |  37 |  37
  38 |  38 |  38 |  38
  39 |  39 |  39 |  39
  40 |  40 |  40 |  40
  41 |  41 |  41 |  41
  42 |  42 |  42 |  42
  43 |  43 |  43 |  43
  44 |  44 |  44 |  44
  45 |  45 |  45 |  45
  46 |  46 |  46 |  46
  47 |  47 |  47 |  47
  48 |  48 |  48 |  48
  49 |  49 |  49 |  49
  50 |  50 |  50 |  50
  51 |  51 |  51 |  51
  52 |  52 |  52 |  52
  53 |  53 |  53 |  53
  54 |  54 |  54 |  54
  55 |  55 |  55 |  55
  56 |  56 |  56 |  56
  57 |  57 |  57 |  57
  58 |  58 |  58 |  58
  59 |  59 |  59 |  59
  60 |  60 |  60 |  60
  61 |  61 |  61 |  61
  62 |  62 |  62 |  62
  63 |  63 |  63 |  63
  64 |  64 |  64 |  64
  65 |  65 |  65 |  65
  66 |  66 |  66 |  66
  67 |  67 |  67 |  67
  68 |  68 |  68 |  68
  69 |  69 |  69 |  69
  70 |  70 |  70 |  70
  71 |  71 |  71 |  71
  72 |  72 |  72 |  72
  73 |  73 |  73 |  73
  74 |  74 |  74 |  74
  75 |  75 |  75 |  75
  76 |  76 |  76 |  76
  77 |  77 |  77 |  77
  78 |  78 |  78 |  78
  79 |  79 |  79 |  79
  80 |  80 |  80 |  80
  81 |  81 |  81 |  81
  82 |  82 |  82 |  82
  83 |  83 |  83 |  83
  84 |  84 |  84 |  84
  85 |  85 |  85 |  85
  86 |  86 |  86 |  86
  87 |  87 |  87 |  87
  88 |  88 |  88 |  88
  89 |  89 |  89 |  89
  90 |  90 |  90 |  90
  91 |  91 |  91 |  91
  92 |  92 |  92 |  92
  93 |  93 |  93 |  93
  94 |  94 |  94 |  94
  95 |  95 |  95 |  95
  96 |  96 |  96 |  96
  97 |  97 |  97 |  97
  98 |  98 |  98 |  98
  99 |  99 |  99 |  99
 100 | 100 | 100 | 100
 101 | 101 | 101 | 101
 102 | 102 | 102 | 102
 103 | 103 | 103 | 103
 104 | 104 | 104 | 104
 105 | 105 | 105 | 105
 106 | 106 | 106 | 106
 107 | 107 | 107 | 107
 108 | 108 | 108 | 108
 109 | 109 | 109 | 109
 110 | 110 | 110 | 110
 111 | 111 | 111 | 111
 112 | 112 | 112 | 112
 113 | 113 | 113 | 113
 114 | 114 | 114 | 114
 115 | 115 | 115 | 115
 116 | 116 | 116 | 116
 117 | 117 | 117 | 117
 118 | 118 | 118 | 118
 119 | 119 | 119 | 119
 120 | 120 | 120 | 120
 121 | 121 | 121 | 121
 122 | 122 | 122 | 122
 123 | 123 | 123 | 123
 124 | 124 | 124 | 124
 125 | 125 | 125 | 125
 126 | 126 | 126 | 126
 127 | 127 | 127 | 127
(127 rows)

drop table t1;
drop table t2;
--bool
create table t1(a bool, b bool);
create table t2(a bool, b bool);
explain (costs off) select * from t1, t2 where t1.a = t2.b;
         QUERY PLAN         
----------------------------
 Hash Join
   Hash Cond: (t1.a = t2.b)
   ->  Seq Scan on t1
   ->  Hash
         ->  Seq Scan on t2
(5 rows)

select * from t1, t2 where t1.a = t2.b order by 1, 2, 3, 4;
 a | b | a | b 
---+---+---+---
(0 rows)

drop table t1;
drop table t2;
--char
create table t1(a "char", b "char");
create table t2(a "char", b "char");
insert into t1 select generate_series(1, 127)::char,generate_series(1, 127)::char from source;
insert into t2 select generate_series(1, 127)::char,generate_series(1, 127)::char from source;
analyze t1;
analyze t2;
explain (costs off) select * from t1, t2 where t1.a = t2.b;
         QUERY PLAN         
----------------------------
 Hash Join
   Hash Cond: (t1.a = t2.b)
   ->  Seq Scan on t1
   ->  Hash
         ->  Seq Scan on t2
(5 rows)

select * from t1, t2 where t1.a = t2.b order by 1, 2, 3, 4;
 a | b | a | b 
---+---+---+---
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 1 | 1 | 1 | 1
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 2 | 2 | 2 | 2
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 3 | 3 | 3 | 3
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 4 | 4 | 4 | 4
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 5 | 5 | 5 | 5
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 6 | 6 | 6 | 6
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 7 | 7 | 7 | 7
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 8 | 8 | 8 | 8
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
 9 | 9 | 9 | 9
(2489 rows)

drop table t1;
drop table t2;
--name
create table t1(a name, b name);
create table t2(a name, b name);
explain (costs off) select * from t1, t2 where t1.a = t2.b order by 1, 2, 3, 4;
            QUERY PLAN            
----------------------------------
 Sort
   Sort Key: t1.a, t1.b, t2.a
   ->  Hash Join
         Hash Cond: (t1.a = t2.b)
         ->  Seq Scan on t1
         ->  Hash
               ->  Seq Scan on t2
(7 rows)

select * from t1, t2 where t1.a = t2.b order by 1, 2, 3, 4;
 a | b | a | b 
---+---+---+---
(0 rows)

drop table t1;
drop table t2;
--int2vector
create table t1(a int2vector, b int2vector);
create table t2(a int2vector, b int2vector);
insert into t1 select * from t2;
drop table t1;
drop table t2;
--NVARCHAR2
create table t1(a NVARCHAR2, b NVARCHAR2);
create table t2(a NVARCHAR2, b NVARCHAR2);
insert into t1 select * from t2;
drop table t1;
drop table t2;
--OIDVECTOR
create table t1(a OIDVECTOR, b OIDVECTOR);
create table t2(a OIDVECTOR, b OIDVECTOR);
insert into t1 select * from t2;
drop table t1;
drop table t2;
--FLOAT4
create table t1(a FLOAT4, b FLOAT4);
create table t2(a FLOAT4, b FLOAT4);
insert into t1 select * from t2;
drop table t1;
drop table t2;
--ABSTIME
create table t1(a ABSTIME, b ABSTIME);
create table t2(a ABSTIME, b ABSTIME);
insert into t1 select * from t2;
drop table t1;
drop table t2;
--RELTIME
create table t1(a RELTIME, b RELTIME);
create table t2(a RELTIME, b RELTIME);
insert into t1 select * from t2;
drop table t1;
drop table t2;
--CASH
create table t1(a MONEY, b MONEY);
create table t2(a MONEY, b MONEY);
insert into t1 select * from t2;
drop table t1;
drop table t2;
--BYTEA
create table t1(a BYTEA, b BYTEA);
create table t2(a BYTEA, b BYTEA);
insert into t1 select * from t2;
drop table t1;
drop table t2;
--DATE
create table t1(a DATE, b DATE);
create table t2(a DATE, b DATE);
insert into t1 select * from t2;
drop table t1;
drop table t2;
--INTERVAL
create table t1(a INTERVAL, b INTERVAL);
create table t2(a INTERVAL, b INTERVAL);
insert into t1 select * from t2;
drop table t1;
drop table t2;
--TIMETZ
create table t1(a TIMETZ, b TIMETZ);
create table t2(a TIMETZ, b TIMETZ);
insert into t1 select * from t2;
drop table t1;
drop table t2;
-- SMALLDATETIME
create table t1(a SMALLDATETIME, b SMALLDATETIME);
create table t2(a SMALLDATETIME, b SMALLDATETIME);
insert into t1 select * from t2;
drop table t1;
drop table t2;
--check passwd
create user testtest password 'tsettset';
ERROR:  Password must contain at least three kinds of characters.
create user test_llt password 'Ttest@123';
alter user test_llt with password '321@tsetT';
ERROR:  New password should not equal to the reverse of old ones.
create table t1(a int);
create function test(t1) returns void
as $$
begin
return;
end $$ language plpgsql;
declare
a t1;
begin
perform test(a);
end;
/
explain (costs off) select * from t1 where not exists (select a from t2);
ERROR:  relation "t2" does not exist on datanode1
LINE 1: ...s off) select * from t1 where not exists (select a from t2);
                                                                   ^
select * from t1 where not exists (select a from t2);
ERROR:  relation "t2" does not exist on datanode1
LINE 1: select * from t1 where not exists (select a from t2);
                                                         ^
explain (costs off) select * from t1 where not a = any (select a from t2);
ERROR:  relation "t2" does not exist on datanode1
LINE 1: ... off) select * from t1 where not a = any (select a from t2);
                                                                   ^
select * from t1 where not a = any (select a from t2);
ERROR:  relation "t2" does not exist on datanode1
LINE 1: select * from t1 where not a = any (select a from t2);
                                                          ^
create table test_range_datatype_int2(a int2)
partition by range(a)
(
partition test_range_datatype_int2_p1 values less than (1),
partition test_range_datatype_int2_p2 values less than (2)
);
vacuum full test_range_datatype_int2;
set enable_kill_query=on;
create user test_llt_cancel password 'Ttest@123';
set current_schema = test_llt;
create table test(a int);
set current_schema = public;
drop user test_llt_cancel cascade;
--bytealt
create table test_bytea(a bytea, b bytea);
insert into test_bytea values('abc', 'abcd');
select * from test_bytea where a < b;
    a     |     b      
----------+------------
 \x616263 | \x61626364
(1 row)

--rawne
create table test_raw(a raw, b raw);
insert into test_raw values('abc', 'abc'), ('abc', 'abcde');
select * from test_raw where a != b;
  a   |   b    
------+--------
 0ABC | 0ABCDE
(1 row)

--rawtotext
select rawtohex(a) from test_raw;
 rawtohex 
----------
 0ABC
 0ABC
(2 rows)

--DCH_from_char
select to_timestamp('20120930 09:30 pm', 'yyyymmdd hh:MI pm');
       to_timestamp       
--------------------------
 Sun Sep 30 21:30:00 2012
(1 row)

select to_timestamp('20120930 09:30 p.m.', 'yyyymmdd hh:MI p.m.');
       to_timestamp       
--------------------------
 Sun Sep 30 21:30:00 2012
(1 row)

select to_timestamp('20120930 09:30 111', 'yyyymmdd hh:MI MS');
         to_timestamp         
------------------------------
 Sun Sep 30 09:30:00.111 2012
(1 row)

select to_timestamp('20120930 09:30 111', 'yyyymmdd hh:MI US');
         to_timestamp         
------------------------------
 Sun Sep 30 09:30:00.111 2012
(1 row)

select to_timestamp('20120930 09:30 11111', 'yyyymmdd hh:MI SSSSS');
ERROR:   minutes of hour conflicts with seconds in day
CONTEXT:  referenced column: to_timestamp
select to_timestamp('20120930 09:30 11111 TZ', 'yyyymmdd hh:MI SSSSS TZ');
ERROR:  "TZ"/"tz" format patterns are not supported in to_date
CONTEXT:  referenced column: to_timestamp
select to_timestamp('20120930 09:30 111 B.C.', 'yyyymmdd hh:MI US B.C.');
          to_timestamp           
---------------------------------
 Sat Sep 30 09:30:00.111 2012 BC
(1 row)

select to_timestamp('20120930 09:30 111 BC', 'yyyymmdd hh:MI US BC');
          to_timestamp           
---------------------------------
 Sat Sep 30 09:30:00.111 2012 BC
(1 row)

select to_timestamp('20120930 09:30 111 fri', 'yyyymmdd hh:MI US dy');
         to_timestamp         
------------------------------
 Sun Sep 30 09:30:00.111 2012
(1 row)

select to_timestamp('20120930 09:30 111 fri 3', 'yyyymmdd hh:MI US dy Q');
         to_timestamp         
------------------------------
 Sun Sep 30 09:30:00.111 2012
(1 row)

select to_timestamp('2012I30 09:30 111 fri 3', 'yyyyRMdd hh:MI US dy Q');
         to_timestamp         
------------------------------
 Mon Jan 30 09:30:00.111 2012
(1 row)

select to_timestamp('20120930 09:30 5 1234', 'yyyymmdd hh:MI W J');
ERROR:  year conflicts with Julian date
CONTEXT:  referenced column: to_timestamp
select to_timestamp('20120930 09:30 pm', 'yyyymmdd hh:MI pm FF');
       to_timestamp       
--------------------------
 Sun Sep 30 21:30:00 2012
(1 row)

select to_timestamp('20120930 09:30 5555', 'yyyymmdd hh:MI RRRR');
ERROR:  conflicting values for "RRRR" field in formatting string
DETAIL:  This value contradicts a previous setting for the same field type.
CONTEXT:  referenced column: to_timestamp
select to_timestamp('20120930 09:30 55', 'yyyymmdd hh:MI RR');
ERROR:  conflicting values for "RR" field in formatting string
DETAIL:  This value contradicts a previous setting for the same field type.
CONTEXT:  referenced column: to_timestamp
select to_timestamp('20120930 09:30 55', 'yyyymmdd hh:MI FF');
        to_timestamp         
-----------------------------
 Sun Sep 30 09:30:00.55 2012
(1 row)

--create role
create role llt_1 password 'Ttest@123' auditadmin;
create role llt_2 password 'Ttest@123' auditadmin auditadmin;
ERROR:  conflicting or redundant options
create role llt_3 password 'Ttest@123' sysadmin sysadmin;
ERROR:  conflicting or redundant options
create role llt_3 password 'Ttest@123' default tablespace abc;
create role llt_4 password 'Ttest@123' default tablespace abc default tablespace abc;
ERROR:  conflicting or redundant options
create role llt_5 password 'Ttest@123' profile default;
--alter role
alter role llt_5 auditadmin auditadmin;
ERROR:  conflicting or redundant options
alter role llt_5 sysadmin sysadmin;
ERROR:  conflicting or redundant options
--pg_test_err_contain_err
select pg_test_err_contain_err(1);
ERROR:  ERROR RETHROW
CONTEXT:  referenced column: pg_test_err_contain_err
select pg_test_err_contain_err(2);
ERROR:  ERROR CATCH
CONTEXT:  referenced column: pg_test_err_contain_err
select pg_test_err_contain_err(3);
ERROR:  ERR CONTAINS ERR, 3
CONTEXT:  referenced column: pg_test_err_contain_err
select pg_test_err_contain_err(4);
ERROR:  ERR ERR CATCH
CONTEXT:  referenced column: pg_test_err_contain_err
select pg_test_err_contain_err(5);
 pg_test_err_contain_err 
-------------------------
 
(1 row)

--DCH_check
select to_timestamp('20130230','yyyyMMDD');
ERROR:  ERR CONTAINS ERR, 5
CONTEXT:  referenced column: to_timestamp
select to_timestamp('0230','MMDD');
ERROR:  invalid data for "day of month =  30" ,value must be be fit for current month
CONTEXT:  referenced column: to_timestamp
select to_timestamp('2014366','yyyyddd');
ERROR:  invalid data for "days of year =  366" ,value must be be fit for current year
CONTEXT:  referenced column: to_timestamp
select to_timestamp('13','HH12');
ERROR:  invalid data for "hour =  13" ,value must be between 1 and 12
CONTEXT:  referenced column: to_timestamp
select to_timestamp('13000','sssss');
        to_timestamp         
-----------------------------
 Sat Jan 01 03:36:40 0001 BC
(1 row)

select to_timestamp('monday','DAY');
        to_timestamp         
-----------------------------
 Sat Jan 01 00:00:00 0001 BC
(1 row)

select to_timestamp('monday','Day');
        to_timestamp         
-----------------------------
 Sat Jan 01 00:00:00 0001 BC
(1 row)

select to_timestamp('monday','day');
        to_timestamp         
-----------------------------
 Sat Jan 01 00:00:00 0001 BC
(1 row)

select to_timestamp('mon','DY');
        to_timestamp         
-----------------------------
 Sat Jan 01 00:00:00 0001 BC
(1 row)

select to_timestamp('july','MONTH');
        to_timestamp         
-----------------------------
 Sat Jul 01 00:00:00 0001 BC
(1 row)

select to_timestamp('july','month');
        to_timestamp         
-----------------------------
 Sat Jul 01 00:00:00 0001 BC
(1 row)

select to_timestamp('feb','mon');
        to_timestamp         
-----------------------------
 Tue Feb 01 00:00:00 0001 BC
(1 row)

select to_timestamp('I','rm');
        to_timestamp         
-----------------------------
 Sat Jan 01 00:00:00 0001 BC
(1 row)

select to_date(19980101100000);
  to_date   
------------
 01-01-1998
(1 row)

create schema alter_llt1;
create user alter_llt2 password 'Ttest@123';
create table alter_llt1.t1(f1 serial primary key, f2 int check (f2 > 0));
NOTICE:  CREATE TABLE will create implicit sequence "t1_f1_seq" for serial column "t1.f1"
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "t1_pkey" for table "t1"
create view alter_llt1.v1 as select * from alter_llt1.t1;
create function alter_llt1.plus1(int) returns int as 'select $1+1' language sql; 
--create domain alter_llt1.posint integer check (value > 0);
create type alter_llt1.ctype as (f1 int, f2 text);
create function alter_llt1.same(alter_llt1.ctype, alter_llt1.ctype) returns boolean language sql
as 'select $1.f1 is not distinct from $2.f1 and $1.f2 is not distinct from $2.f2';
create operator alter_llt2.> (procedure = alter_llt1.same, leftarg  = alter_llt1.ctype, rightarg = alter_llt1.ctype);
--do_to_timestamp
select to_timestamp('20130101a','YYYYMMdd');
ERROR:  invalid data for match  in date string
CONTEXT:  referenced column: to_timestamp
SELECT TO_TIMESTAMP('2014', 'YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY');
       to_timestamp       
--------------------------
 Wed Jan 01 00:00:00 2014
(1 row)

SELECT TO_TIMESTAMP('2014-15', 'YYYY-HH-YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY');
ERROR:  invalid data for "hour =  15" ,value must be between 1 and 12
CONTEXT:  referenced column: to_timestamp
SELECT TO_TIMESTAMP('12-15', 'SSSSS-SS');
ERROR:   seconds of minute conflicts with seconds in day
CONTEXT:  referenced column: to_timestamp
SELECT TO_TIMESTAMP('12-01', 'SSSSS-HH');
ERROR:  hour conflicts with seconds in day
CONTEXT:  referenced column: to_timestamp
SELECT TO_TIMESTAMP('2014-01-02', 'YYYY-DDD-MM');
ERROR:  month conflicts with days of year
CONTEXT:  referenced column: to_timestamp
SELECT TO_TIMESTAMP('2014-01-02', 'YYYY-DDD-DD');
ERROR:  days of month conflicts with days of year
CONTEXT:  referenced column: to_timestamp
SELECT TO_TIMESTAMP('2014-01-02', 'YYYY12-DDD-DD');
ERROR:  invalid data for match in format string
CONTEXT:  referenced column: to_timestamp
SELECT TO_TIMESTAMP('2014', 'YYYY12YYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYYY');
ERROR:  invalid data for match in format string
CONTEXT:  referenced column: to_timestamp
CREATE TABLE LLT_PART_TEST1(A INT , B INT, C INT)
PARTITION BY RANGE(A)
(
    PARTITION P1 VALUES LESS THAN (1000)
);
SELECT * FROM LLT_PART_TEST1 WHERE A > 10 AND A IS NULL;
 a | b | c 
---+---+---
(0 rows)

INSERT INTO LLT_PART_TEST1 VALUES (GENERATE_SERIES(1, 130), GENERATE_SERIES(1, 130), GENERATE_SERIES(1, 130));
CREATE INDEX IDX_ON_T1 ON LLT_PART_TEST1(A) LOCAL;
VACUUM LLT_PART_TEST1 PARTITION (P1);
CLUSTER LLT_PART_TEST1 USING IDX_ON_T1;
CREATE VIEW VIEW_ON_LLT_PART_TEST1 AS SELECT * FROM LLT_PART_TEST1;
INSERT INTO VIEW_ON_LLT_PART_TEST1 SELECT * FROM LLT_PART_TEST1;
ERROR:  cannot insert into view "view_on_llt_part_test1"
HINT:  You need an unconditional ON INSERT DO INSTEAD rule or an INSTEAD OF INSERT trigger.
CREATE OR REPLACE FUNCTION RESULT_COUNT()
RETURNS INTEGER
AS $$
DECLARE
  MYINTEGER INTEGER ;
BEGIN
  SELECT COUNT(*) INTO MYINTEGER FROM LLT_PART_TEST1 WHERE A < 1;
  RETURN MYINTEGER;
END;
$$LANGUAGE PLPGSQL;
CALL RESULT_COUNT();
 result_count 
--------------
            0
(1 row)

DROP TABLE LLT_PART_TEST1 CASCADE;
NOTICE:  drop cascades to view view_on_llt_part_test1
DROP FUNCTION RESULT_COUNT();
CREATE TABLE LLT_INT1_AVG_ACCUM(A INT1);
INSERT INTO LLT_INT1_AVG_ACCUM VALUES (GENERATE_SERIES(1, 130));
SELECT AVG(A) FROM LLT_INT1_AVG_ACCUM;
         avg         
---------------------
 65.5000000000000000
(1 row)

DROP TABLE LLT_INT1_AVG_ACCUM;
select count(*)::bool from pg_stat_get_activity(NULL);
 count 
-------
 t
(1 row)

select smalldatetime_smaller('19860111','19860405');
  smalldatetime_smaller   
--------------------------
 Sat Jan 11 00:00:00 1986
(1 row)

select smalldatetime_smaller('19860405','19860111');
  smalldatetime_smaller   
--------------------------
 Sat Jan 11 00:00:00 1986
(1 row)

select smalldatetime_larger('19570906','19600907');
   smalldatetime_larger   
--------------------------
 Wed Sep 07 00:00:00 1960
(1 row)

select smalldatetime_larger('19600907','19570906');
   smalldatetime_larger   
--------------------------
 Wed Sep 07 00:00:00 1960
(1 row)

--blacklist in llt
SECURITY LABEL FOR selinux ON TABLE mytable IS 'system_u:object_r:sepgsql_table_t:s0';
ERROR:  SECURITY LABEL is not yet supported.
CREATE TYPE bigobj (INPUT = lo_filein, OUTPUT = lo_fileout, INTERNALLENGTH = VARIABLE);
ERROR:  function lo_filein(cstring) does not exist
CREATE TYPE float8_range AS RANGE (subtype = float8, subtype_diff = float8mi);
ALTER TYPE colors ADD VALUE 'orange' AFTER 'red';
ERROR:  type "colors" does not exist
CREATE COLLATION french (LOCALE = 'fr_FR.utf8');
ERROR:  user defined collation is not yet supported.
UNLISTEN virtual;
ERROR:  UNLISTEN statement is not yet supported.
NOTIFY virtual;
ERROR:  NOFITY statement is not yet supported.
CREATE LANGUAGE plperl;
ERROR:  new language is not yet supported.
CREATE OPERATOR FAMILY name USING
ALTER OPERATOR FAMILY integer_ops USING btree ADD
OPERATOR 1 < (int4, int2) ,
OPERATOR 2 <= (int4, int2) ,
FUNCTION 1 btint24cmp(int2, int4) ;
ERROR:  syntax error at or near "OPERATOR"
LINE 2: ALTER OPERATOR FAMILY integer_ops USING btree ADD
              ^
ALTER TEXT SEARCH DICTIONARY my_dict ( StopWords = newrussian ); 
ERROR:  text search dictionary "my_dict" does not exist
drop table t1 CASCADE;
NOTICE:  drop cascades to function test(t1)
drop table test_raw cascade;
\c regression;
drop database IF EXISTS pl_test_llt;
