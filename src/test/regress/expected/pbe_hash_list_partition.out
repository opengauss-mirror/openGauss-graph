CREATE TABLE r(a int, b int)
PARTITION BY RANGE (a)
(
	    PARTITION P1 VALUES LESS THAN(10),
	    PARTITION P2 VALUES LESS THAN(20),
	    PARTITION P3 VALUES LESS THAN(30),
	    PARTITION P4 VALUES LESS THAN(40)
);
create table l(a int, b int) partition by list(a)
( partition a_1 values(1,2), 
	  partition a_2 values(3,6));
 
create table h(a int, b int) partition by hash(a)
( partition h1_p_1, 
	  partition h2_p_2);
insert into r values(generate_series(1,39,1), generate_series(1,39,1));
insert into l values(1,1);
insert into h values(generate_series(1,39,1), generate_series(1,39,1));
--select
prepare p1(int,int) as SELECT * FROM r INNER JOIN h ON r.a=$1 and h.a=$2;
explain  execute p1(10,10);
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Nested Loop  (cost=0.00..67.27 rows=121 width=16)
   ->  Partition Iterator  (cost=0.00..28.86 rows=11 width=8)
         Iterations: PART
         ->  Partitioned Seq Scan on r  (cost=0.00..28.86 rows=11 width=8)
               Filter: (a = $1)
               Selected Partitions:  PART
   ->  Materialize  (cost=0.00..36.92 rows=11 width=8)
         ->  Partition Iterator  (cost=0.00..36.86 rows=11 width=8)
               Iterations: PART
               ->  Partitioned Seq Scan on h  (cost=0.00..36.86 rows=11 width=8)
                     Filter: (a = $2)
                     Selected Partitions:  PART
(12 rows)

execute p1(10,10);
 a  | b  | a  | b  
----+----+----+----
 10 | 10 | 10 | 10
(1 row)

prepare p2(int,int,int,int) as select * from r inner join h on r.a=$1 and h.a=$2 inner join l on r.a=$3 and l.a=$4;
explain  execute p2(1,1,1,1);
                                         QUERY PLAN                                          
---------------------------------------------------------------------------------------------
 Result  (cost=0.00..120.80 rows=1331 width=24)
   One-Time Filter: ($1 = $3)
   ->  Nested Loop  (cost=0.00..120.80 rows=1331 width=24)
         ->  Nested Loop  (cost=0.00..67.27 rows=121 width=16)
               ->  Partition Iterator  (cost=0.00..28.86 rows=11 width=8)
                     Iterations: PART
                     ->  Partitioned Seq Scan on r  (cost=0.00..28.86 rows=11 width=8)
                           Filter: (a = $3)
                           Selected Partitions:  PART
               ->  Materialize  (cost=0.00..36.92 rows=11 width=8)
                     ->  Partition Iterator  (cost=0.00..36.86 rows=11 width=8)
                           Iterations: PART
                           ->  Partitioned Seq Scan on h  (cost=0.00..36.86 rows=11 width=8)
                                 Filter: (a = $2)
                                 Selected Partitions:  PART
         ->  Materialize  (cost=0.00..36.92 rows=11 width=8)
               ->  Partition Iterator  (cost=0.00..36.86 rows=11 width=8)
                     Iterations: PART
                     ->  Partitioned Seq Scan on l  (cost=0.00..36.86 rows=11 width=8)
                           Filter: (a = $4)
                           Selected Partitions:  PART
(21 rows)

execute p2(1,1,1,1);
 a | b | a | b | a | b 
---+---+---+---+---+---
 1 | 1 | 1 | 1 | 1 | 1
(1 row)

prepare p3(int,int) as SELECT * FROM r right JOIN h ON r.a=$1 and h.a=$2;
explain  execute p3(10,10);
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Nested Loop Left Join  (cost=0.00..414.97 rows=2149 width=16)
   Join Filter: (h.a = $2)
   ->  Partition Iterator  (cost=0.00..31.49 rows=2149 width=8)
         Iterations: 2
         ->  Partitioned Seq Scan on h  (cost=0.00..31.49 rows=2149 width=8)
               Selected Partitions:  1..2
   ->  Materialize  (cost=0.00..28.92 rows=11 width=8)
         ->  Partition Iterator  (cost=0.00..28.86 rows=11 width=8)
               Iterations: PART
               ->  Partitioned Seq Scan on r  (cost=0.00..28.86 rows=11 width=8)
                     Filter: (a = $1)
                     Selected Partitions:  PART
(12 rows)

prepare p4(int,int) as SELECT * FROM r left JOIN h ON r.a=$1 and h.a=$2;
explain  execute p4(10,10);
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Nested Loop Left Join  (cost=0.00..422.97 rows=2149 width=16)
   Join Filter: (r.a = $1)
   ->  Partition Iterator  (cost=0.00..31.49 rows=2149 width=8)
         Iterations: 4
         ->  Partitioned Seq Scan on r  (cost=0.00..31.49 rows=2149 width=8)
               Selected Partitions:  1..4
   ->  Materialize  (cost=0.00..36.92 rows=11 width=8)
         ->  Partition Iterator  (cost=0.00..36.86 rows=11 width=8)
               Iterations: PART
               ->  Partitioned Seq Scan on h  (cost=0.00..36.86 rows=11 width=8)
                     Filter: (a = $2)
                     Selected Partitions:  PART
(12 rows)

prepare p5(int,int) as SELECT * FROM h right JOIN l ON h.a=$1 and l.a=$2;
explain  execute p5(10,10);
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Nested Loop Left Join  (cost=0.00..422.97 rows=2149 width=16)
   Join Filter: (l.a = $2)
   ->  Partition Iterator  (cost=0.00..31.49 rows=2149 width=8)
         Iterations: 2
         ->  Partitioned Seq Scan on l  (cost=0.00..31.49 rows=2149 width=8)
               Selected Partitions:  1..2
   ->  Materialize  (cost=0.00..36.92 rows=11 width=8)
         ->  Partition Iterator  (cost=0.00..36.86 rows=11 width=8)
               Iterations: PART
               ->  Partitioned Seq Scan on h  (cost=0.00..36.86 rows=11 width=8)
                     Filter: (a = $1)
                     Selected Partitions:  PART
(12 rows)

prepare p6(int,int) as SELECT * FROM h left JOIN l ON h.a=$1 and l.a=$2;
explain  execute p6(10,10);
                                   QUERY PLAN                                    
---------------------------------------------------------------------------------
 Nested Loop Left Join  (cost=0.00..422.97 rows=2149 width=16)
   Join Filter: (h.a = $1)
   ->  Partition Iterator  (cost=0.00..31.49 rows=2149 width=8)
         Iterations: 2
         ->  Partitioned Seq Scan on h  (cost=0.00..31.49 rows=2149 width=8)
               Selected Partitions:  1..2
   ->  Materialize  (cost=0.00..36.92 rows=11 width=8)
         ->  Partition Iterator  (cost=0.00..36.86 rows=11 width=8)
               Iterations: PART
               ->  Partitioned Seq Scan on l  (cost=0.00..36.86 rows=11 width=8)
                     Filter: (a = $2)
                     Selected Partitions:  PART
(12 rows)

prepare p7(int) as SELECT * FROM h where h.a=$1;
explain  execute p7(10);
                             QUERY PLAN                              
---------------------------------------------------------------------
 Partition Iterator  (cost=0.00..36.86 rows=11 width=8)
   Iterations: PART
   ->  Partitioned Seq Scan on h  (cost=0.00..36.86 rows=11 width=8)
         Filter: (a = $1)
         Selected Partitions:  PART
(5 rows)

execute p7(10);
 a  | b  
----+----
 10 | 10
(1 row)

prepare p8(int) as SELECT * FROM h where h.a<=$1+5*2 ORDER BY h.a;
explain  execute p8(18);
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Sort  (cost=76.19..77.98 rows=716 width=8)
   Sort Key: a
   ->  Partition Iterator  (cost=0.00..42.23 rows=716 width=8)
         Iterations: PART
         ->  Partitioned Seq Scan on h  (cost=0.00..42.23 rows=716 width=8)
               Filter: (a <= ($1 + 10))
               Selected Partitions:  PART
(7 rows)

execute p8(18);
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
 17 | 17
 18 | 18
 19 | 19
 20 | 20
 21 | 21
 22 | 22
 23 | 23
 24 | 24
 25 | 25
 26 | 26
 27 | 27
 28 | 28
(28 rows)

prepare p9(int) as SELECT * FROM l where l.a=$1;
explain  execute p9(1);
                             QUERY PLAN                              
---------------------------------------------------------------------
 Partition Iterator  (cost=0.00..36.86 rows=11 width=8)
   Iterations: PART
   ->  Partitioned Seq Scan on l  (cost=0.00..36.86 rows=11 width=8)
         Filter: (a = $1)
         Selected Partitions:  PART
(5 rows)

execute p9(1);
 a | b 
---+---
 1 | 1
(1 row)

prepare p10(int,int) as SELECT * FROM l where l.a>=$1+$2/5 ORDER BY l.a;
explain  execute p10(-2,5);
                                      QUERY PLAN                                      
--------------------------------------------------------------------------------------
 Sort  (cost=92.30..94.09 rows=716 width=8)
   Sort Key: a
   ->  Partition Iterator  (cost=0.00..58.35 rows=716 width=8)
         Iterations: 2
         ->  Partitioned Seq Scan on l  (cost=0.00..58.35 rows=716 width=8)
               Filter: ((a)::double precision >= (($1)::double precision + ($2 / 5)))
               Selected Partitions:  1..2
(7 rows)

execute p10(-2,5);
 a | b 
---+---
 1 | 1
(1 row)

--update
prepare p13(int) as UPDATE l set b = b + 10 where a = $1+1;
execute p13(0);
select * from l ORDER BY l.a;
 a | b  
---+----
 1 | 11
(1 row)

-- delete
prepare p14(int) as DELETE FROM h where a>$1+1;
execute p14(15);
select * from h ORDER BY h.a;
 a  | b  
----+----
  1 |  1
  2 |  2
  3 |  3
  4 |  4
  5 |  5
  6 |  6
  7 |  7
  8 |  8
  9 |  9
 10 | 10
 11 | 11
 12 | 12
 13 | 13
 14 | 14
 15 | 15
 16 | 16
(16 rows)

