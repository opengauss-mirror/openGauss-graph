create schema full_join_on_true_col_2;
set current_schema='full_join_on_true_col_2';
drop table if exists t1;
NOTICE:  table "t1" does not exist, skipping
drop table if exists t2;
NOTICE:  table "t2" does not exist, skipping
drop table if exists t3;
NOTICE:  table "t3" does not exist, skipping



create table t1(acct_id float, d int) WITH (ORIENTATION = COLUMN);
create table t2(acct_id float, d int) WITH (ORIENTATION = COLUMN);
create table t3(acct_id float, d int) WITH (ORIENTATION = COLUMN);
					 
insert into t1 values(1.1);
insert into t1 values(1.1);
insert into t1 values(121.1);
insert into t1 values(122.1);
insert into t1 values(122.1);
insert into t1 values(131.1);
insert into t1 values(132.1);
insert into t1 values(132.1);
insert into t1 values(888.1);
insert into t1 values(999.1);
insert into t1 values(999.1);

insert into t2 values(2.1);
insert into t2 values(2.1);
insert into t2 values(121.1);
insert into t2 values(122.1);
insert into t2 values(122.1);
insert into t2 values(231.1);
insert into t2 values(232.1);
insert into t2 values(232.1);
insert into t2 values(888.1);
insert into t2 values(999.1);
insert into t2 values(999.1);

insert into t3 values(3.1);
insert into t3 values(3.1);
insert into t3 values(231.1);
insert into t3 values(232.1);
insert into t3 values(232.1);
insert into t3 values(131.1);
insert into t3 values(132.1);
insert into t3 values(132.1);
insert into t3 values(888.1);
insert into t3 values(999.1);
insert into t3 values(999.1);

set enable_nestloop=on;
set enable_hashjoin=off;
set enable_mergejoin=off;	
				 
explain (verbose, costs off) select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;		
WARNING:  Statistics in some tables or columns(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id) are not collected.
HINT:  Do analyze for them in order to generate optimized plan.
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Streaming (type: GATHER)
   Output: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
   Merge Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id
   Node/s: All datanodes
   ->  Sort
         Output: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
         Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id
         ->  Hash Full Join
               Output: atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
               Hash Cond: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id) = full_join_on_true_col_2.t1.acct_id)
               ->  Streaming(type: REDISTRIBUTE)
                     Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, t3.acct_id, t3.d, (atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id))
                     Distribute Key: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id))
                     Spawn on: All datanodes
                     Consumer Nodes: All datanodes
                     ->  Hash Full Join
                           Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, t3.acct_id, t3.d, atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id)
                           Hash Cond: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id) = t3.acct_id)
                           ->  Streaming(type: REDISTRIBUTE)
                                 Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id))
                                 Distribute Key: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id))
                                 Spawn on: All datanodes
                                 Consumer Nodes: All datanodes
                                 ->  Hash Full Join
                                       Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)
                                       Hash Cond: (full_join_on_true_col_2.t1.acct_id = t2.acct_id)
                                       ->  Row Adapter
                                             Output: full_join_on_true_col_2.t1.acct_id
                                             ->  CStore Scan on full_join_on_true_col_2.t1
                                                   Output: full_join_on_true_col_2.t1.acct_id
                                                   Distribute Key: full_join_on_true_col_2.t1.acct_id
                                       ->  Hash
                                             Output: t2.acct_id
                                             ->  Row Adapter
                                                   Output: t2.acct_id
                                                   ->  CStore Scan on full_join_on_true_col_2.t2
                                                         Output: t2.acct_id
                                                         Distribute Key: t2.acct_id
                           ->  Hash
                                 Output: t3.acct_id, t3.d
                                 ->  Row Adapter
                                       Output: t3.acct_id, t3.d
                                       ->  CStore Scan on full_join_on_true_col_2.t3
                                             Output: t3.acct_id, t3.d
                                             Distribute Key: t3.acct_id
               ->  Hash
                     Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                     ->  Row Adapter
                           Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                           ->  CStore Scan on full_join_on_true_col_2.t1
                                 Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                                 Distribute Key: full_join_on_true_col_2.t1.acct_id
(52 rows)

select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;
     acct_id      | acct_id | d | acct_id | d 
------------------+---------+---+---------+---
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
                  |     3.1 |   |         |  
                  |     3.1 |   |         |  
                  |   131.1 |   |         |  
                  |   132.1 |   |         |  
                  |   132.1 |   |         |  
                  |   231.1 |   |         |  
                  |   232.1 |   |         |  
                  |   232.1 |   |         |  
                  |   888.1 |   |         |  
                  |   999.1 |   |         |  
                  |   999.1 |   |         |  
                  |         |   |     1.1 |  
                  |         |   |     1.1 |  
                  |         |   |   121.1 |  
                  |         |   |   122.1 |  
                  |         |   |   122.1 |  
                  |         |   |   131.1 |  
                  |         |   |   132.1 |  
                  |         |   |   132.1 |  
                  |         |   |   888.1 |  
                  |         |   |   999.1 |  
                  |         |   |   999.1 |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
(42 rows)



explain (verbose, costs off) select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join (select atan2(t3.acct_id,t2.acct_id)as acct_id from  t2 full outer join t3 on t3.acct_id=t2.acct_id )  t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;
WARNING:  Statistics in some tables or columns(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id) are not collected.
HINT:  Do analyze for them in order to generate optimized plan.
                                                                                                                                                                      QUERY PLAN                                                                                                                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Streaming (type: GATHER)
   Output: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
   Merge Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
   Node/s: All datanodes
   ->  Sort
         Output: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
         Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
         ->  Hash Full Join
               Output: atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
               Hash Cond: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)) = full_join_on_true_col_2.t1.acct_id)
               ->  Streaming(type: REDISTRIBUTE)
                     Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, (atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)))
                     Distribute Key: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)))
                     Spawn on: All datanodes
                     Consumer Nodes: All datanodes
                     ->  Hash Full Join
                           Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                           Hash Cond: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id) = atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                           ->  Streaming(type: REDISTRIBUTE)
                                 Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id))
                                 Distribute Key: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id))
                                 Spawn on: All datanodes
                                 Consumer Nodes: All datanodes
                                 ->  Hash Full Join
                                       Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)
                                       Hash Cond: (full_join_on_true_col_2.t1.acct_id = full_join_on_true_col_2.t2.acct_id)
                                       ->  Row Adapter
                                             Output: full_join_on_true_col_2.t1.acct_id
                                             ->  CStore Scan on full_join_on_true_col_2.t1
                                                   Output: full_join_on_true_col_2.t1.acct_id
                                                   Distribute Key: full_join_on_true_col_2.t1.acct_id
                                       ->  Hash
                                             Output: full_join_on_true_col_2.t2.acct_id
                                             ->  Row Adapter
                                                   Output: full_join_on_true_col_2.t2.acct_id
                                                   ->  CStore Scan on full_join_on_true_col_2.t2
                                                         Output: full_join_on_true_col_2.t2.acct_id
                                                         Distribute Key: full_join_on_true_col_2.t2.acct_id
                           ->  Hash
                                 Output: full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                 ->  Streaming(type: REDISTRIBUTE)
                                       Output: full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                       Distribute Key: (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                       Spawn on: All datanodes
                                       Consumer Nodes: All datanodes
                                       ->  Hash Full Join
                                             Output: full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)
                                             Hash Cond: (full_join_on_true_col_2.t2.acct_id = full_join_on_true_col_2.t3.acct_id)
                                             ->  Row Adapter
                                                   Output: full_join_on_true_col_2.t2.acct_id
                                                   ->  CStore Scan on full_join_on_true_col_2.t2
                                                         Output: full_join_on_true_col_2.t2.acct_id
                                                         Distribute Key: full_join_on_true_col_2.t2.acct_id
                                             ->  Hash
                                                   Output: full_join_on_true_col_2.t3.acct_id
                                                   ->  Row Adapter
                                                         Output: full_join_on_true_col_2.t3.acct_id
                                                         ->  CStore Scan on full_join_on_true_col_2.t3
                                                               Output: full_join_on_true_col_2.t3.acct_id
                                                               Distribute Key: full_join_on_true_col_2.t3.acct_id
               ->  Hash
                     Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                     ->  Row Adapter
                           Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                           ->  CStore Scan on full_join_on_true_col_2.t1
                                 Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                                 Distribute Key: full_join_on_true_col_2.t1.acct_id
(67 rows)

select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join (select atan2(t3.acct_id,t2.acct_id)as acct_id from  t2 full outer join t3 on t3.acct_id=t2.acct_id )  t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;
     acct_id      |     acct_id      | acct_id | d 
------------------+------------------+---------+---
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
                  |                  |     1.1 |  
                  |                  |     1.1 |  
                  |                  |   121.1 |  
                  |                  |   122.1 |  
                  |                  |   122.1 |  
                  |                  |   131.1 |  
                  |                  |   132.1 |  
                  |                  |   132.1 |  
                  |                  |   888.1 |  
                  |                  |   999.1 |  
                  |                  |   999.1 |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
(131 rows)


explain select /*+  leading((t1 t2)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Streaming (type: GATHER)  (cost=47.29..50.75 rows=120 width=24)
   Merge Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
   Node/s: All datanodes
   ->  Sort  (cost=46.66..46.69 rows=120 width=24)
         Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
         ->  Hash Full Join  (cost=23.31..46.49 rows=120 width=24)
               Hash Cond: (t1.acct_id = t2.acct_id)
               ->  Row Adapter  (cost=23.02..23.02 rows=121 width=12)
                     ->  CStore Scan on t1  (cost=0.00..23.02 rows=120 width=12)
               ->  Hash  (cost=23.02..23.02 rows=121 width=12)
                     ->  Row Adapter  (cost=23.02..23.02 rows=121 width=12)
                           ->  CStore Scan on t2  (cost=0.00..23.02 rows=120 width=12)
(12 rows)

select /*+  leading((t1 t2)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
 acct_id | d | acct_id | d 
---------+---+---------+---
     1.1 |   |         |  
     1.1 |   |         |  
   121.1 |   |   121.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   131.1 |   |         |  
   132.1 |   |         |  
   132.1 |   |         |  
   888.1 |   |   888.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
         |   |     2.1 |  
         |   |     2.1 |  
         |   |   231.1 |  
         |   |   232.1 |  
         |   |   232.1 |  
(20 rows)

explain select /*+  leading((t2 t1)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Streaming (type: GATHER)  (cost=47.29..50.75 rows=120 width=24)
   Merge Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
   Node/s: All datanodes
   ->  Sort  (cost=46.66..46.69 rows=120 width=24)
         Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
         ->  Hash Full Join  (cost=23.31..46.49 rows=120 width=24)
               Hash Cond: (t2.acct_id = t1.acct_id)
               ->  Row Adapter  (cost=23.02..23.02 rows=121 width=12)
                     ->  CStore Scan on t2  (cost=0.00..23.02 rows=120 width=12)
               ->  Hash  (cost=23.02..23.02 rows=121 width=12)
                     ->  Row Adapter  (cost=23.02..23.02 rows=121 width=12)
                           ->  CStore Scan on t1  (cost=0.00..23.02 rows=120 width=12)
(12 rows)

select /*+  leading((t2 t1)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
 acct_id | d | acct_id | d 
---------+---+---------+---
     1.1 |   |         |  
     1.1 |   |         |  
   121.1 |   |   121.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   131.1 |   |         |  
   132.1 |   |         |  
   132.1 |   |         |  
   888.1 |   |   888.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
         |   |     2.1 |  
         |   |     2.1 |  
         |   |   231.1 |  
         |   |   232.1 |  
         |   |   232.1 |  
(20 rows)


set enable_nestloop=off;
set enable_hashjoin=on;
set enable_mergejoin=off;

explain (verbose, costs off) select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;
WARNING:  Statistics in some tables or columns(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id) are not collected.
HINT:  Do analyze for them in order to generate optimized plan.
                                                                                  QUERY PLAN                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Streaming (type: GATHER)
   Output: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
   Merge Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id
   Node/s: All datanodes
   ->  Sort
         Output: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
         Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id
         ->  Hash Full Join
               Output: atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
               Hash Cond: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id) = full_join_on_true_col_2.t1.acct_id)
               ->  Streaming(type: REDISTRIBUTE)
                     Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, t3.acct_id, t3.d, (atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id))
                     Distribute Key: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id))
                     Spawn on: All datanodes
                     Consumer Nodes: All datanodes
                     ->  Hash Full Join
                           Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, t3.acct_id, t3.d, atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id)
                           Hash Cond: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id) = t3.acct_id)
                           ->  Streaming(type: REDISTRIBUTE)
                                 Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id))
                                 Distribute Key: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id))
                                 Spawn on: All datanodes
                                 Consumer Nodes: All datanodes
                                 ->  Hash Full Join
                                       Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)
                                       Hash Cond: (full_join_on_true_col_2.t1.acct_id = t2.acct_id)
                                       ->  Row Adapter
                                             Output: full_join_on_true_col_2.t1.acct_id
                                             ->  CStore Scan on full_join_on_true_col_2.t1
                                                   Output: full_join_on_true_col_2.t1.acct_id
                                                   Distribute Key: full_join_on_true_col_2.t1.acct_id
                                       ->  Hash
                                             Output: t2.acct_id
                                             ->  Row Adapter
                                                   Output: t2.acct_id
                                                   ->  CStore Scan on full_join_on_true_col_2.t2
                                                         Output: t2.acct_id
                                                         Distribute Key: t2.acct_id
                           ->  Hash
                                 Output: t3.acct_id, t3.d
                                 ->  Row Adapter
                                       Output: t3.acct_id, t3.d
                                       ->  CStore Scan on full_join_on_true_col_2.t3
                                             Output: t3.acct_id, t3.d
                                             Distribute Key: t3.acct_id
               ->  Hash
                     Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                     ->  Row Adapter
                           Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                           ->  CStore Scan on full_join_on_true_col_2.t1
                                 Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                                 Distribute Key: full_join_on_true_col_2.t1.acct_id
(52 rows)

select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;
     acct_id      | acct_id | d | acct_id | d 
------------------+---------+---+---------+---
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
                  |     3.1 |   |         |  
                  |     3.1 |   |         |  
                  |   131.1 |   |         |  
                  |   132.1 |   |         |  
                  |   132.1 |   |         |  
                  |   231.1 |   |         |  
                  |   232.1 |   |         |  
                  |   232.1 |   |         |  
                  |   888.1 |   |         |  
                  |   999.1 |   |         |  
                  |   999.1 |   |         |  
                  |         |   |     1.1 |  
                  |         |   |     1.1 |  
                  |         |   |   121.1 |  
                  |         |   |   122.1 |  
                  |         |   |   122.1 |  
                  |         |   |   131.1 |  
                  |         |   |   132.1 |  
                  |         |   |   132.1 |  
                  |         |   |   888.1 |  
                  |         |   |   999.1 |  
                  |         |   |   999.1 |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
(42 rows)


explain (verbose, costs off) select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join (select atan2(t3.acct_id,t2.acct_id)as acct_id from  t2 full outer join t3 on t3.acct_id=t2.acct_id )  t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;
WARNING:  Statistics in some tables or columns(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id) are not collected.
HINT:  Do analyze for them in order to generate optimized plan.
                                                                                                                                                                      QUERY PLAN                                                                                                                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Streaming (type: GATHER)
   Output: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
   Merge Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
   Node/s: All datanodes
   ->  Sort
         Output: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
         Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
         ->  Hash Full Join
               Output: atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
               Hash Cond: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)) = full_join_on_true_col_2.t1.acct_id)
               ->  Streaming(type: REDISTRIBUTE)
                     Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, (atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)))
                     Distribute Key: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)))
                     Spawn on: All datanodes
                     Consumer Nodes: All datanodes
                     ->  Hash Full Join
                           Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                           Hash Cond: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id) = atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                           ->  Streaming(type: REDISTRIBUTE)
                                 Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id))
                                 Distribute Key: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id))
                                 Spawn on: All datanodes
                                 Consumer Nodes: All datanodes
                                 ->  Hash Full Join
                                       Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)
                                       Hash Cond: (full_join_on_true_col_2.t1.acct_id = full_join_on_true_col_2.t2.acct_id)
                                       ->  Row Adapter
                                             Output: full_join_on_true_col_2.t1.acct_id
                                             ->  CStore Scan on full_join_on_true_col_2.t1
                                                   Output: full_join_on_true_col_2.t1.acct_id
                                                   Distribute Key: full_join_on_true_col_2.t1.acct_id
                                       ->  Hash
                                             Output: full_join_on_true_col_2.t2.acct_id
                                             ->  Row Adapter
                                                   Output: full_join_on_true_col_2.t2.acct_id
                                                   ->  CStore Scan on full_join_on_true_col_2.t2
                                                         Output: full_join_on_true_col_2.t2.acct_id
                                                         Distribute Key: full_join_on_true_col_2.t2.acct_id
                           ->  Hash
                                 Output: full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                 ->  Streaming(type: REDISTRIBUTE)
                                       Output: full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                       Distribute Key: (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                       Spawn on: All datanodes
                                       Consumer Nodes: All datanodes
                                       ->  Hash Full Join
                                             Output: full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)
                                             Hash Cond: (full_join_on_true_col_2.t2.acct_id = full_join_on_true_col_2.t3.acct_id)
                                             ->  Row Adapter
                                                   Output: full_join_on_true_col_2.t2.acct_id
                                                   ->  CStore Scan on full_join_on_true_col_2.t2
                                                         Output: full_join_on_true_col_2.t2.acct_id
                                                         Distribute Key: full_join_on_true_col_2.t2.acct_id
                                             ->  Hash
                                                   Output: full_join_on_true_col_2.t3.acct_id
                                                   ->  Row Adapter
                                                         Output: full_join_on_true_col_2.t3.acct_id
                                                         ->  CStore Scan on full_join_on_true_col_2.t3
                                                               Output: full_join_on_true_col_2.t3.acct_id
                                                               Distribute Key: full_join_on_true_col_2.t3.acct_id
               ->  Hash
                     Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                     ->  Row Adapter
                           Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                           ->  CStore Scan on full_join_on_true_col_2.t1
                                 Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                                 Distribute Key: full_join_on_true_col_2.t1.acct_id
(67 rows)

select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join (select atan2(t3.acct_id,t2.acct_id)as acct_id from  t2 full outer join t3 on t3.acct_id=t2.acct_id )  t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;
     acct_id      |     acct_id      | acct_id | d 
------------------+------------------+---------+---
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
                  |                  |     1.1 |  
                  |                  |     1.1 |  
                  |                  |   121.1 |  
                  |                  |   122.1 |  
                  |                  |   122.1 |  
                  |                  |   131.1 |  
                  |                  |   132.1 |  
                  |                  |   132.1 |  
                  |                  |   888.1 |  
                  |                  |   999.1 |  
                  |                  |   999.1 |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
(131 rows)


explain select /*+  leading((t1 t2)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Streaming (type: GATHER)  (cost=47.29..50.75 rows=120 width=24)
   Merge Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
   Node/s: All datanodes
   ->  Sort  (cost=46.66..46.69 rows=120 width=24)
         Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
         ->  Hash Full Join  (cost=23.31..46.49 rows=120 width=24)
               Hash Cond: (t1.acct_id = t2.acct_id)
               ->  Row Adapter  (cost=23.02..23.02 rows=121 width=12)
                     ->  CStore Scan on t1  (cost=0.00..23.02 rows=120 width=12)
               ->  Hash  (cost=23.02..23.02 rows=121 width=12)
                     ->  Row Adapter  (cost=23.02..23.02 rows=121 width=12)
                           ->  CStore Scan on t2  (cost=0.00..23.02 rows=120 width=12)
(12 rows)

select /*+  leading((t1 t2)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
 acct_id | d | acct_id | d 
---------+---+---------+---
     1.1 |   |         |  
     1.1 |   |         |  
   121.1 |   |   121.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   131.1 |   |         |  
   132.1 |   |         |  
   132.1 |   |         |  
   888.1 |   |   888.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
         |   |     2.1 |  
         |   |     2.1 |  
         |   |   231.1 |  
         |   |   232.1 |  
         |   |   232.1 |  
(20 rows)

explain select /*+  leading((t2 t1)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Streaming (type: GATHER)  (cost=47.29..50.75 rows=120 width=24)
   Merge Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
   Node/s: All datanodes
   ->  Sort  (cost=46.66..46.69 rows=120 width=24)
         Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
         ->  Hash Full Join  (cost=23.31..46.49 rows=120 width=24)
               Hash Cond: (t2.acct_id = t1.acct_id)
               ->  Row Adapter  (cost=23.02..23.02 rows=121 width=12)
                     ->  CStore Scan on t2  (cost=0.00..23.02 rows=120 width=12)
               ->  Hash  (cost=23.02..23.02 rows=121 width=12)
                     ->  Row Adapter  (cost=23.02..23.02 rows=121 width=12)
                           ->  CStore Scan on t1  (cost=0.00..23.02 rows=120 width=12)
(12 rows)

select /*+  leading((t2 t1)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
 acct_id | d | acct_id | d 
---------+---+---------+---
     1.1 |   |         |  
     1.1 |   |         |  
   121.1 |   |   121.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   131.1 |   |         |  
   132.1 |   |         |  
   132.1 |   |         |  
   888.1 |   |   888.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
         |   |     2.1 |  
         |   |     2.1 |  
         |   |   231.1 |  
         |   |   232.1 |  
         |   |   232.1 |  
(20 rows)



set enable_nestloop=off;
set enable_hashjoin=off;
set enable_mergejoin=on;
					 
explain (verbose, costs off) select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;
WARNING:  Statistics in some tables or columns(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id) are not collected.
HINT:  Do analyze for them in order to generate optimized plan.
                                                                                        QUERY PLAN                                                                                        
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Row Adapter
   Output: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
   ->  Vector Streaming (type: GATHER)
         Output: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
         Merge Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id
         Node/s: All datanodes
         ->  Vector Sort
               Output: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
               Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id
               ->  Vector Merge Full Join
                     Output: atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id, t3.d, full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                     Merge Cond: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id) = full_join_on_true_col_2.t1.acct_id)
                     ->  Vector Sort
                           Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, t3.acct_id, t3.d, (atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id))
                           Sort Key: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id))
                           ->  Vector Streaming(type: REDISTRIBUTE)
                                 Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, t3.acct_id, t3.d, (atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id))
                                 Distribute Key: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id))
                                 Spawn on: All datanodes
                                 Consumer Nodes: All datanodes
                                 ->  Vector Merge Full Join
                                       Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, t3.acct_id, t3.d, atan2(atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id), t3.acct_id)
                                       Merge Cond: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id) = t3.acct_id)
                                       ->  Vector Sort
                                             Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id))
                                             Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id))
                                             ->  Vector Streaming(type: REDISTRIBUTE)
                                                   Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id))
                                                   Distribute Key: (atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id))
                                                   Spawn on: All datanodes
                                                   Consumer Nodes: All datanodes
                                                   ->  Vector Merge Full Join
                                                         Output: full_join_on_true_col_2.t1.acct_id, t2.acct_id, atan2(full_join_on_true_col_2.t1.acct_id, t2.acct_id)
                                                         Merge Cond: (full_join_on_true_col_2.t1.acct_id = t2.acct_id)
                                                         ->  Vector Sort
                                                               Output: full_join_on_true_col_2.t1.acct_id
                                                               Sort Key: full_join_on_true_col_2.t1.acct_id
                                                               ->  CStore Scan on full_join_on_true_col_2.t1
                                                                     Output: full_join_on_true_col_2.t1.acct_id
                                                                     Distribute Key: full_join_on_true_col_2.t1.acct_id
                                                         ->  Vector Sort
                                                               Output: t2.acct_id
                                                               Sort Key: t2.acct_id
                                                               ->  CStore Scan on full_join_on_true_col_2.t2
                                                                     Output: t2.acct_id
                                                                     Distribute Key: t2.acct_id
                                       ->  Vector Sort
                                             Output: t3.acct_id, t3.d
                                             Sort Key: t3.acct_id
                                             ->  CStore Scan on full_join_on_true_col_2.t3
                                                   Output: t3.acct_id, t3.d
                                                   Distribute Key: t3.acct_id
                     ->  Vector Sort
                           Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                           Sort Key: full_join_on_true_col_2.t1.acct_id
                           ->  CStore Scan on full_join_on_true_col_2.t1
                                 Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                                 Distribute Key: full_join_on_true_col_2.t1.acct_id
(58 rows)

select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;
     acct_id      | acct_id | d | acct_id | d 
------------------+---------+---+---------+---
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
 .785398163397448 |         |   |         |  
                  |     3.1 |   |         |  
                  |     3.1 |   |         |  
                  |   131.1 |   |         |  
                  |   132.1 |   |         |  
                  |   132.1 |   |         |  
                  |   231.1 |   |         |  
                  |   232.1 |   |         |  
                  |   232.1 |   |         |  
                  |   888.1 |   |         |  
                  |   999.1 |   |         |  
                  |   999.1 |   |         |  
                  |         |   |     1.1 |  
                  |         |   |     1.1 |  
                  |         |   |   121.1 |  
                  |         |   |   122.1 |  
                  |         |   |   122.1 |  
                  |         |   |   131.1 |  
                  |         |   |   132.1 |  
                  |         |   |   132.1 |  
                  |         |   |   888.1 |  
                  |         |   |   999.1 |  
                  |         |   |   999.1 |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
                  |         |   |         |  
(42 rows)



explain (verbose, costs off) select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join (select atan2(t3.acct_id,t2.acct_id)as acct_id from  t2 full outer join t3 on t3.acct_id=t2.acct_id )  t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;
WARNING:  Statistics in some tables or columns(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id) are not collected.
HINT:  Do analyze for them in order to generate optimized plan.
                                                                                                                                                                            QUERY PLAN                                                                                                                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Row Adapter
   Output: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
   ->  Vector Streaming (type: GATHER)
         Output: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
         Merge Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
         Node/s: All datanodes
         ->  Vector Sort
               Output: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
               Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)), (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
               ->  Vector Merge Full Join
                     Output: atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id), full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                     Merge Cond: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)) = full_join_on_true_col_2.t1.acct_id)
                     ->  Vector Sort
                           Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, (atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)))
                           Sort Key: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)))
                           ->  Vector Streaming(type: REDISTRIBUTE)
                                 Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, (atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)))
                                 Distribute Key: (atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)))
                                 Spawn on: All datanodes
                                 Consumer Nodes: All datanodes
                                 ->  Vector Merge Full Join
                                       Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, atan2(atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id), atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                       Merge Cond: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id) = atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                       ->  Vector Sort
                                             Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id))
                                             Sort Key: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id))
                                             ->  Vector Streaming(type: REDISTRIBUTE)
                                                   Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id))
                                                   Distribute Key: (atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id))
                                                   Spawn on: All datanodes
                                                   Consumer Nodes: All datanodes
                                                   ->  Vector Merge Full Join
                                                         Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id, atan2(full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t2.acct_id)
                                                         Merge Cond: (full_join_on_true_col_2.t1.acct_id = full_join_on_true_col_2.t2.acct_id)
                                                         ->  Vector Sort
                                                               Output: full_join_on_true_col_2.t1.acct_id
                                                               Sort Key: full_join_on_true_col_2.t1.acct_id
                                                               ->  CStore Scan on full_join_on_true_col_2.t1
                                                                     Output: full_join_on_true_col_2.t1.acct_id
                                                                     Distribute Key: full_join_on_true_col_2.t1.acct_id
                                                         ->  Vector Sort
                                                               Output: full_join_on_true_col_2.t2.acct_id
                                                               Sort Key: full_join_on_true_col_2.t2.acct_id
                                                               ->  CStore Scan on full_join_on_true_col_2.t2
                                                                     Output: full_join_on_true_col_2.t2.acct_id
                                                                     Distribute Key: full_join_on_true_col_2.t2.acct_id
                                       ->  Vector Sort
                                             Output: full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                             Sort Key: (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                             ->  Vector Streaming(type: REDISTRIBUTE)
                                                   Output: full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                                   Distribute Key: (atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id))
                                                   Spawn on: All datanodes
                                                   Consumer Nodes: All datanodes
                                                   ->  Vector Merge Full Join
                                                         Output: full_join_on_true_col_2.t2.acct_id, full_join_on_true_col_2.t3.acct_id, atan2(full_join_on_true_col_2.t3.acct_id, full_join_on_true_col_2.t2.acct_id)
                                                         Merge Cond: (full_join_on_true_col_2.t2.acct_id = full_join_on_true_col_2.t3.acct_id)
                                                         ->  Vector Sort
                                                               Output: full_join_on_true_col_2.t2.acct_id
                                                               Sort Key: full_join_on_true_col_2.t2.acct_id
                                                               ->  CStore Scan on full_join_on_true_col_2.t2
                                                                     Output: full_join_on_true_col_2.t2.acct_id
                                                                     Distribute Key: full_join_on_true_col_2.t2.acct_id
                                                         ->  Vector Sort
                                                               Output: full_join_on_true_col_2.t3.acct_id
                                                               Sort Key: full_join_on_true_col_2.t3.acct_id
                                                               ->  CStore Scan on full_join_on_true_col_2.t3
                                                                     Output: full_join_on_true_col_2.t3.acct_id
                                                                     Distribute Key: full_join_on_true_col_2.t3.acct_id
                     ->  Vector Sort
                           Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                           Sort Key: full_join_on_true_col_2.t1.acct_id
                           ->  CStore Scan on full_join_on_true_col_2.t1
                                 Output: full_join_on_true_col_2.t1.acct_id, full_join_on_true_col_2.t1.d
                                 Distribute Key: full_join_on_true_col_2.t1.acct_id
(75 rows)

select * from (select atan2(t1.acct_id,t2.acct_id)as acct_id from  t1 full outer join t2 on t1.acct_id=t2.acct_id ) A full join (select atan2(t3.acct_id,t2.acct_id)as acct_id from  t2 full outer join t3 on t3.acct_id=t2.acct_id )  t3 on a.acct_id=t3.acct_id full join t1 on atan2(a.acct_id,t3.acct_id)=t1.acct_id order by 1,2,3,4;
     acct_id      |     acct_id      | acct_id | d 
------------------+------------------+---------+---
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
 .785398163397448 | .785398163397448 |         |  
                  |                  |     1.1 |  
                  |                  |     1.1 |  
                  |                  |   121.1 |  
                  |                  |   122.1 |  
                  |                  |   122.1 |  
                  |                  |   131.1 |  
                  |                  |   132.1 |  
                  |                  |   132.1 |  
                  |                  |   888.1 |  
                  |                  |   999.1 |  
                  |                  |   999.1 |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
                  |                  |         |  
(131 rows)



explain select /*+  leading((t1 t2)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Row Adapter  (cost=51.67..51.67 rows=120 width=24)
   ->  Vector Streaming (type: GATHER)  (cost=48.21..51.67 rows=120 width=24)
         Merge Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
         Node/s: All datanodes
         ->  Vector Sort  (cost=47.58..47.61 rows=120 width=24)
               Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
               ->  Vector Merge Full Join  (cost=47.09..47.42 rows=120 width=24)
                     Merge Cond: (t1.acct_id = t2.acct_id)
                     ->  Vector Sort  (cost=23.54..23.60 rows=121 width=12)
                           Sort Key: t1.acct_id
                           ->  CStore Scan on t1  (cost=0.00..23.02 rows=120 width=12)
                     ->  Vector Sort  (cost=23.54..23.60 rows=121 width=12)
                           Sort Key: t2.acct_id
                           ->  CStore Scan on t2  (cost=0.00..23.02 rows=120 width=12)
(14 rows)

select /*+  leading((t1 t2)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
 acct_id | d | acct_id | d 
---------+---+---------+---
     1.1 |   |         |  
     1.1 |   |         |  
   121.1 |   |   121.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   131.1 |   |         |  
   132.1 |   |         |  
   132.1 |   |         |  
   888.1 |   |   888.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
         |   |     2.1 |  
         |   |     2.1 |  
         |   |   231.1 |  
         |   |   232.1 |  
         |   |   232.1 |  
(20 rows)

explain select /*+  leading((t2 t1)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
                                      QUERY PLAN                                       
---------------------------------------------------------------------------------------
 Row Adapter  (cost=51.67..51.67 rows=120 width=24)
   ->  Vector Streaming (type: GATHER)  (cost=48.21..51.67 rows=120 width=24)
         Merge Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
         Node/s: All datanodes
         ->  Vector Sort  (cost=47.58..47.61 rows=120 width=24)
               Sort Key: t1.acct_id, t1.d, t2.acct_id, t2.d
               ->  Vector Merge Full Join  (cost=47.09..47.42 rows=120 width=24)
                     Merge Cond: (t2.acct_id = t1.acct_id)
                     ->  Vector Sort  (cost=23.54..23.60 rows=121 width=12)
                           Sort Key: t2.acct_id
                           ->  CStore Scan on t2  (cost=0.00..23.02 rows=120 width=12)
                     ->  Vector Sort  (cost=23.54..23.60 rows=121 width=12)
                           Sort Key: t1.acct_id
                           ->  CStore Scan on t1  (cost=0.00..23.02 rows=120 width=12)
(14 rows)

select /*+  leading((t2 t1)) */ *from t1 full join t2 on t1.acct_id=t2.acct_id order by 1,2,3,4;
 acct_id | d | acct_id | d 
---------+---+---------+---
     1.1 |   |         |  
     1.1 |   |         |  
   121.1 |   |   121.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   122.1 |   |   122.1 |  
   131.1 |   |         |  
   132.1 |   |         |  
   132.1 |   |         |  
   888.1 |   |   888.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
   999.1 |   |   999.1 |  
         |   |     2.1 |  
         |   |     2.1 |  
         |   |   231.1 |  
         |   |   232.1 |  
         |   |   232.1 |  
(20 rows)



drop schema full_join_on_true_col_2 CASCADE;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to table t1
drop cascades to table t2
drop cascades to table t3
