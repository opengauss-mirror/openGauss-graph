DROP SCHEMA subpartition_index CASCADE;
ERROR:  schema "subpartition_index" does not exist
CREATE SCHEMA subpartition_index;
SET CURRENT_SCHEMA TO subpartition_index;
CREATE TABLE source
(
    month_code VARCHAR2 ( 30 ) NOT NULL ,
    dept_code  VARCHAR2 ( 30 ) NOT NULL ,
    user_no    VARCHAR2 ( 30 ) NOT NULL ,
    sales_amt  int
);
CREATE TABLE range_list
(
    month_code VARCHAR2 ( 30 ) NOT NULL ,
    dept_code  VARCHAR2 ( 30 ) NOT NULL ,
    user_no    VARCHAR2 ( 30 ) NOT NULL ,
    sales_amt  int
)
PARTITION BY RANGE (month_code) SUBPARTITION BY LIST (dept_code)
(
  PARTITION p_201901 VALUES LESS THAN( '201903' )
  (
    SUBPARTITION p_201901_a values ('1'),
    SUBPARTITION p_201901_b values ('2')
  ),
  PARTITION p_201902 VALUES LESS THAN( '201910' )
  (
    SUBPARTITION p_201902_a values ('1'),
    SUBPARTITION p_201902_b values ('2')
  )
);
insert into source values('201902', '1', '1', 1);
insert into source values('201902', '2', '1', 1);
insert into source values('201902', '1', '1', 1);
insert into source values('201903', '2', '1', 1);
insert into source values('201903', '1', '1', 1);
insert into source values('201903', '2', '1', 1);
insert into range_list select * from source;
CREATE INDEX range_list_idx ON range_list(month_code) LOCAL
(
 PARTITION p_201901_idx
 (
  SUBPARTITION p_201901_a_idx,
  SUBPARTITION p_201901_b_idx
 ),
 PARTITION p_201902_idx
 (
  SUBPARTITION p_201902_a_idx,
  SUBPARTITION p_201902_b_idx
 )
);
-- test subpartition index scan
explain (costs off) select * from range_list where month_code = '201902';
                           QUERY PLAN                            
-----------------------------------------------------------------
 Partition Iterator
   Iterations: 1, Sub Iterations: 2
   ->  Partitioned Bitmap Heap Scan on range_list
         Recheck Cond: ((month_code)::text = '201902'::text)
         Selected Partitions:  1
         Selected Subpartitions:  ALL
         ->  Partitioned Bitmap Index Scan on range_list_idx
               Index Cond: ((month_code)::text = '201902'::text)
               Selected Partitions:  1
               Selected Subpartitions:  ALL
(10 rows)

select * from range_list where month_code = '201902' order by 1,2,3,4;
 month_code | dept_code | user_no | sales_amt 
------------+-----------+---------+-----------
 201902     | 1         | 1       |         1
 201902     | 1         | 1       |         1
 201902     | 2         | 1       |         1
(3 rows)

explain (costs off) select /*+ indexscan(range_list range_list_idx)*/* from range_list where month_code = '201902';
                           QUERY PLAN                            
-----------------------------------------------------------------
 Partition Iterator
   Iterations: 1, Sub Iterations: 2
   ->  Partitioned Index Scan using range_list_idx on range_list
         Index Cond: ((month_code)::text = '201902'::text)
         Selected Partitions:  1
         Selected Subpartitions:  ALL
(6 rows)

select /*+ indexscan(range_list range_list_idx)*/* from range_list where month_code = '201902' order by 1,2,3,4;
 month_code | dept_code | user_no | sales_amt 
------------+-----------+---------+-----------
 201902     | 1         | 1       |         1
 201902     | 1         | 1       |         1
 201902     | 2         | 1       |         1
(3 rows)

-- test index unusable and rebuild
ALTER INDEX range_list_idx MODIFY PARTITION p_201901_a_idx UNUSABLE;
select indisusable from pg_partition where relname = 'p_201901_a_idx';
 indisusable 
-------------
 f
(1 row)

REINDEX INDEX range_list_idx PARTITION p_201901_a_idx;
select indisusable from pg_partition where relname = 'p_201901_a_idx';
 indisusable 
-------------
 t
(1 row)

truncate table range_list;
ALTER INDEX range_list_idx MODIFY PARTITION p_201901_a_idx UNUSABLE;
ALTER INDEX range_list_idx MODIFY PARTITION p_201901_b_idx UNUSABLE;
ALTER INDEX range_list_idx MODIFY PARTITION p_201902_a_idx UNUSABLE;
ALTER INDEX range_list_idx MODIFY PARTITION p_201902_b_idx UNUSABLE;
insert into range_list select * from source;
explain (costs off) select /*+ indexscan(range_list range_list_idx)*/* from range_list where month_code = '201902';
                      QUERY PLAN                       
-------------------------------------------------------
 Partition Iterator
   Iterations: 1, Sub Iterations: 2
   ->  Partitioned Seq Scan on range_list
         Filter: ((month_code)::text = '201902'::text)
         Selected Partitions:  1
         Selected Subpartitions:  ALL
(6 rows)

explain (costs off) select /*+ indexscan(range_list range_list_idx)*/* from range_list where month_code = '201903';
                      QUERY PLAN                       
-------------------------------------------------------
 Partition Iterator
   Iterations: 1, Sub Iterations: 2
   ->  Partitioned Seq Scan on range_list
         Filter: ((month_code)::text = '201903'::text)
         Selected Partitions:  2
         Selected Subpartitions:  ALL
(6 rows)

REINDEX INDEX range_list_idx;
explain (costs off) select /*+ indexscan(range_list range_list_idx)*/* from range_list where month_code = '201902';
                           QUERY PLAN                            
-----------------------------------------------------------------
 Partition Iterator
   Iterations: 1, Sub Iterations: 2
   ->  Partitioned Index Scan using range_list_idx on range_list
         Index Cond: ((month_code)::text = '201902'::text)
         Selected Partitions:  1
         Selected Subpartitions:  ALL
(6 rows)

explain (costs off) select /*+ indexscan(range_list range_list_idx)*/* from range_list where month_code = '201903';
                           QUERY PLAN                            
-----------------------------------------------------------------
 Partition Iterator
   Iterations: 1, Sub Iterations: 2
   ->  Partitioned Index Scan using range_list_idx on range_list
         Index Cond: ((month_code)::text = '201903'::text)
         Selected Partitions:  2
         Selected Subpartitions:  ALL
(6 rows)

select /*+ indexscan(range_list range_list_idx)*/* from range_list where month_code = '201902' order by 1,2,3,4;
 month_code | dept_code | user_no | sales_amt 
------------+-----------+---------+-----------
 201902     | 1         | 1       |         1
 201902     | 1         | 1       |         1
 201902     | 2         | 1       |         1
(3 rows)

select /*+ indexscan(range_list range_list_idx)*/* from range_list where month_code = '201903' order by 1,2,3,4;
 month_code | dept_code | user_no | sales_amt 
------------+-----------+---------+-----------
 201903     | 1         | 1       |         1
 201903     | 2         | 1       |         1
 201903     | 2         | 1       |         1
(3 rows)

-- wrong case
CREATE INDEX range_list_idxx ON range_list(month_code) LOCAL
(
 PARTITION p_201902_idx
 (
  SUBPARTITION p_201901_a_idx,
  SUBPARTITION p_201901_b_idx,
  SUBPARTITION p_201902_a_idx,
  SUBPARTITION p_201902_b_idx
 )
);
ERROR:  Wrong number of partitions when create index specify subpartition.
CREATE INDEX range_list_idxx ON range_list(month_code) LOCAL
(
 PARTITION p_201901_idx
 (
  SUBPARTITION p_201901_a_idx,
  SUBPARTITION p_201901_b_idx
 ),
 PARTITION p_201902_idx
 (
  SUBPARTITION p_201902_a_idx,
  SUBPARTITION p_201902_b_idx
 ),
 PARTITION p_201903_idx
 (
  SUBPARTITION p_201902_a_idx
 )
);
ERROR:  Wrong number of partitions when create index specify subpartition.
CREATE INDEX range_list_idxx ON range_list(month_code) LOCAL
(
 PARTITION p_201901_idx
 (
  SUBPARTITION p_201901_a_idx
 ),
 PARTITION p_201902_idx
 (
  SUBPARTITION p_201902_a_idx,
  SUBPARTITION p_201902_b_idx
 )
);
ERROR:  Cannot match subpartitions when create subpartition indexes.
CREATE INDEX range_list_idxx ON range_list(month_code) LOCAL
(
 PARTITION p_201901_idx
 (
  SUBPARTITION p_201901_a_idx
 ),
 PARTITION p_201902_idx
 (
  SUBPARTITION p_201901_b_idx,
  SUBPARTITION p_201902_a_idx,
  SUBPARTITION p_201902_b_idx
 )
);
ERROR:  Cannot match subpartitions when create subpartition indexes.
drop table source;
drop table range_list;
reset current_schema;
DROP SCHEMA subpartition_index CASCADE;
