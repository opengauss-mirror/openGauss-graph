set current_schema=postgis;
SELECT ST_Dump(the_geom) AS the_geom FROM geom_point order by id limit 10;
                    the_geom                     
-------------------------------------------------
 ({},010100000000000000000000000000000000000000)
 ({},010100000000000000000000000000000000002440)
 ({},010100000000000000000000000000000000003440)
 ({},010100000000000000000000000000000000003E40)
 ({},010100000000000000000000000000000000004440)
 ({},010100000000000000000000000000000000004940)
 ({},010100000000000000000000000000000000004E40)
 ({},010100000000000000000000000000000000805140)
 ({},010100000000000000000000000000000000005440)
 ({},010100000000000000000000000000000000805640)
(10 rows)

--Break a compound curve into its constituent linestrings and circularstrings
SELECT ST_AsEWKT(a.geom), ST_HasArc(a.geom)FROM ( SELECT (ST_Dump(p_geom)).geom AS geom FROM (SELECT ST_GeomFromEWKT('COMPOUNDCURVE(CIRCULARSTRING(0 0, 1 1, 1 0),(1 0, 0 1))') AS p_geom) AS b) AS a;
          st_asewkt          | st_hasarc 
-----------------------------+-----------
 CIRCULARSTRING(0 0,1 1,1 0) | t
 LINESTRING(1 0,0 1)         | f
(2 rows)

--S10.验证函数ST_DumpPoints返回组成几何图形的所有点的一组Geometry_dump值
SELECT edge_id, (dp).path[1] As index, ST_AsText((dp).geom) As wktnode FROM (SELECT 1 As edge_id, ST_DumpPoints(ST_GeomFromText('LINESTRING(1 2, 3 4, 10 10)')) AS dp UNION ALL SELECT 2 As edge_id, ST_DumpPoints(ST_GeomFromText('LINESTRING(3 5, 5 6, 9 10)')) AS dp) As foo;
 edge_id | index |   wktnode    
---------+-------+--------------
       1 |     1 | POINT(1 2)
       1 |     2 | POINT(3 4)
       1 |     3 | POINT(10 10)
       2 |     1 | POINT(3 5)
       2 |     2 | POINT(5 6)
       2 |     3 | POINT(9 10)
(6 rows)


--S12.验证函数ST_FlipCoordinates返回翻转X轴或Y轴的几何体
SELECT ST_AsEWKT(ST_FlipCoordinates(GeomFromEWKT('POINT(1 2)')));
 st_asewkt  
------------
 POINT(2 1)
(1 row)

--S13.验证函数ST_Intersection返回两个几何的共享部分
SELECT ST_AsText(ST_Intersection('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 2 )':: geometry));
        st_astext         
--------------------------
 GEOMETRYCOLLECTION EMPTY
(1 row)

--S14.验证函数ST_LineToCurve将线或多边形转换成循环或曲线
SELECT ST_AsText(ST_LineToCurve(foo.the_geom)) As curvedastext,ST_AsText(foo.the_geom) As non_curvedastext
FROM (SELECT ST_Buffer('POINT(1 3)'::geometry, 3) As the_geom) As foo;
                       curvedastext                        |non_curvedastext

--?
(1 row)

SELECT ST_AsText(ST_LineToCurve(geom)) As curved, ST_AsText(geom) AS not_curved
FROM (SELECT ST_Translate(ST_Force3D(ST_Boundary(ST_Buffer(ST_Point(1,3), 2,2))),0,0,3) AS geom) AS foo;
                        curved                        |                                                                                                          not_curved                                                                                                           
------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 CIRCULARSTRING Z (3 3 3,-1 2.99999999999999 3,3 3 3) | LINESTRING Z (3 3 3,2.4142135623731 1.58578643762691 3,1 1 3,-0.414213562373092 1.5857864376269 3,-1 2.99999999999999 3,-0.414213562373101 4.41421356237309 3,0.999999999999991 5 3,2.41421356237309 4.4142135623731 3,3 3 3)
(1 row)

--S17.验证函数ST_MinimumBoundingCircle返回可以完全包含几何的最小圆
SELECT ST_AsText(ST_MinimumBoundingCircle(
ST_Collect(
ST_GeomFromEWKT('LINESTRING(55 75,125 150)'),
ST_Point(20, 80)), 8
)) As wktmbc;
wktmbc

 POLYGON((72.5 178.402447434669,84.8692038866403 177.184187185463,96.7630662046465 173.576223496014,107.724512495292 167.717208387537,117.332300524878 159.832300524878,125.217208387537 150.224512495292,131.076223496014 139.263066204646,134.684187185463 127.36920388664,135.902447434669 115,134.684187185463 102.63079611336,131.076223496014 90.7369337953535,125.217208387537 79.7754875047077,117.332300524878 70.1676994751216,107.724512495292 62.2827916124629,96.7630662046465 56.4237765039862,84.8692038866403 52.8158128145367,72.5 51.5975525653306,60.1307961133597 52.8158128145367,48.2369337953535 56.4237765039862,37.2754875047076 62.2827916124629,27.6676994751216 70.1676994751216,19.7827916124629 79.7754875047076,13.9237765039862 90.7369337953535,10.3158128145367 102.63079611336,9.09755256533059 115,10.3158128145367 127.36920388664,13.9237765039862 139.263066204646,19.7827916124629 150.224512495292,27.6676994751216 159.832300524878,37.2754875047076 167.717208387537,48.2369337953535 173.576223496014,60.1307961133597 177.184187185463,72.5 178.402447434669))
(1 row)

--S18.验证函数ST_Polygonize返回一个几何集合
SELECT '#3470b', ST_Area(ST_Polygonize(ARRAY[NULL, 'LINESTRING (0 0, 10 0, 10 10)', NULL, 'LINESTRING (0 0, 10 10)', NULL]::geometry[]));
 ?column? | st_area 
----------+---------
 #3470b   |      50
(1 row)

--S19.验证函数ST_Node返回一组线串的节点
SELECT ST_AsText(
ST_Node('LINESTRINGZ(0 0 0, 10 10 10, 0 10 5, 10 0 3)'::geometry)
) As output;
                                         output                                         
----------------------------------------------------------------------------------------
 MULTILINESTRING Z ((0 0 0,5 5 4.5),(5 5 4.5,10 10 10,0 10 5,5 5 4.5),(5 5 4.5,10 0 3))
(1 row)

--S20.验证函数ST_OffsetCurve给定距离和输入线一侧的偏移线
SELECT ST_AsText(ST_OffsetCurve( 
ST_GeomFromText(
'LINESTRING(164 16,144 16,124 16,104 
16,84 16,64 16,44 16,24 16,20 16,18 16,17 17,
16 18,16 20,16 40,16 60,16 80,16 
100,16 120,16 140,16 160,16 180,16 195)'),
15, 'quad_segs=4 join=round'));
                                                                                st_astext                                                                                 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 LINESTRING(164 1,18 1,12.2597485145237 2.1418070123307,7.39339828220179 5.39339828220179,5.39339828220179 7.39339828220179,2.14180701233067 12.2597485145237,1 18,1 195)
(1 row)

--S21.验证函数ST_RemoveRepeatedPoints返回删除重复点的几何
--S22.验证函数ST_SharedPaths返回包含由两个输入线或多边形的路径的集合
SELECT ST_AsText(ST_SharedPaths(ST_GeomFromText('MULTILINESTRING((26 125,26 200,126 200,126 125,26 125),(51 150,101 150,76 175,51 150))'),ST_GeomFromText('LINESTRING(151 100,126 156.25,126 125,90 161, 76 175)'))) As wkt;
                                                       wkt                                                        
------------------------------------------------------------------------------------------------------------------
 GEOMETRYCOLLECTION(MULTILINESTRING((126 156.25,126 125),(101 150,90 161),(90 161,76 175)),MULTILINESTRING EMPTY)
(1 row)

--S23.验证函数ST_ShiftLongitude在-180到180和0到360范围之间切换几何坐标
SELECT ST_AsEWKT(ST_ShiftLongitude(ST_GeomFromEWKT('SRID=4326;POINT(-118.58 38.38 10)'))) As geomA,
ST_AsEWKT(ST_ShiftLongitude(ST_GeomFromEWKT('SRID=4326;POINT(241.42 38.38 10)'))) As geomb;
              geoma               |               geomb               
----------------------------------+-----------------------------------
 SRID=4326;POINT(241.42 38.38 10) | SRID=4326;POINT(-118.58 38.38 10)
(1 row)

--S24.验证函数ST_Simplify返回给定几何的简化几何
SELECT ST_Npoints(the_geom) As np_before, ST_NPoints(ST_Simplify(the_geom,0.1)) As np01_notbadcircle, ST_NPoints(ST_Simplify(the_geom,0.5)) As np05_notquitecircle,
ST_NPoints(ST_Simplify(the_geom,1)) As np1_octagon, ST_NPoints(ST_Simplify(the_geom,10)) As np10_triangle,
(ST_Simplify(the_geom,100) is null) As np100_geometrygoesaway
FROM (SELECT ST_Buffer('POINT(1 3)', 10,12) As the_geom) As foo;
 np_before | np01_notbadcircle | np05_notquitecircle | np1_octagon | np10_triangle | np100_geometrygoesaway 
-----------+-------------------+---------------------+-------------+---------------+------------------------
        49 |                33 |                  17 |           9 |             4 | t
(1 row)

--S25.验证函数ST_SimplifyPreserveTopology返回给定几何的简化几何
SELECT ST_Npoints(the_geom) As np_before, ST_NPoints(ST_SimplifyPreserveTopology(the_geom ,0.1)) As np01_notbadcircle, ST_NPoints(ST_SimplifyPreserveTopology(the_geom,0.5)) As np05_notquitecircle,
ST_NPoints(ST_SimplifyPreserveTopology(the_geom,1)) As np1_octagon, ST_NPoints( ST_SimplifyPreserveTopology(the_geom,10)) As np10_square,
ST_NPoints(ST_SimplifyPreserveTopology(the_geom,100)) As np100_stillsquare
FROM (SELECT ST_Buffer('POINT(1 3)', 10,12) As the_geom) As foo;
 np_before | np01_notbadcircle | np05_notquitecircle | np1_octagon | np10_square | np100_stillsquare 
-----------+-------------------+---------------------+-------------+-------------+-------------------
        49 |                33 |                  17 |           9 |           5 |                 5
(1 row)

--S26.验证函数ST_Split拆分几何
SELECT ST_Split(circle, line)
FROM (SELECT
ST_MakeLine(ST_MakePoint(10, 10),ST_MakePoint(190, 190)) As line,
ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50) As circle) As foo;
st_split

--?
(1 row)

--S27.验证函数ST_SymDifference返回表示A和B不相交的部分几何图形
SELECT ST_AsText(
ST_SymDifference(
ST_GeomFromText('LINESTRING(50 100, 50 200)'),
ST_GeomFromText('LINESTRING(50 50, 50 150)')
)
);
                    st_astext                    
-------------------------------------------------
 MULTILINESTRING((50 150,50 200),(50 50,50 100))
(1 row)

--S28.验证函数ST_Union返回表示几何体的点集合并的几何
SELECT geom_point.id,ST_AsText(ST_Union(st_setsrid(geom_point.the_geom,4326),st_setsrid(geom_line.the_geom,4326))) from geom_point inner join geom_line on geom_point.id=geom_line.id order by id limit 10;
 id |       st_astext       
----+-----------------------
  0 | LINESTRING(0 0,5 5)
  1 | LINESTRING(0 10,5 15)
  2 | LINESTRING(0 20,5 25)
  3 | LINESTRING(0 30,5 35)
  4 | LINESTRING(0 40,5 45)
  5 | LINESTRING(0 50,5 55)
  6 | LINESTRING(0 60,5 65)
  7 | LINESTRING(0 70,5 75)
  8 | LINESTRING(0 80,5 85)
  9 | LINESTRING(0 90,5 95)
(10 rows)

--S29.验证函数ST_UnaryUnion返回表示几何体的点集合并的几何
select ST_AsText(ST_UnaryUnion(the_geom)) from geom_point where id=1;
  st_astext  
-------------
 POINT(0 10)
(1 row)





