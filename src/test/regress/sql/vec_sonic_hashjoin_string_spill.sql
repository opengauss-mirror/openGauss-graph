-- To guarantee that all the tests (except for cound(*))
-- are spilt or respilt, we had better to execute explain performance first.
-- However, this will cost much longer time.
-- Thus, we constructed those spill cases offline to avoid explain performance here.
-- When any memory related modification committed,
-- please make sure all the cases are still spilt or respilt
-- by playing explain performance per case.

SET current_schema = sonic_hashjoin_test_string;

SET enable_nestloop to off;
SET enable_mergejoin to off;
SET enable_hashjoin to on;
SET enable_sonic_hashjoin to on;
SET query_mem = 0;
SHOW enable_sonic_hashjoin;
SET explain_perf_mode=pretty;

-- TEST SPILL
--- test data number of single DN > 64K
SELECT COUNT(*) FROM VEC_HASHJOIN_TABLE_STRING_01 A INNER JOIN VEC_HASHJOIN_TABLE_STRING_01 B ON
A.C_INT = B.C_INT AND A.C_BIGINT = B.C_BIGINT AND A.C_SMALLINT = B.C_SMALLINT;

SET work_mem = '28MB';
SELECT * FROM VEC_HASHJOIN_TABLE_STRING_01 A INNER JOIN VEC_HASHJOIN_TABLE_STRING_01 B ON
A.C_INT = B.C_INT AND A.C_BIGINT = B.C_BIGINT AND A.C_SMALLINT = B.C_SMALLINT
ORDER BY 1,2,3,4,5,6,7,8,9,10,11 LIMIT 100;

SET work_mem = '30MB';
SELECT * FROM VEC_HASHJOIN_TABLE_STRING_01 A INNER JOIN VEC_HASHJOIN_TABLE_STRING_01 B ON
A.C_INT = B.C_INT AND A.C_BIGINT = B.C_BIGINT AND A.C_SMALLINT = B.C_SMALLINT AND
A.C_CHAR_1 = B.C_CHAR_1 AND A.C_CHAR_2 = B.C_CHAR_2 AND A.C_CHAR_3 = B.C_CHAR_3 AND A.C_CHAR_4 = B.C_CHAR_4 AND
A.C_BPCHAR_1 = B.C_BPCHAR_1 AND A.C_BPCHAR_2 = B.C_BPCHAR_2 AND
A.C_VARCHAR_1 = B.C_VARCHAR_1 AND A.C_VARCHAR_2 = B.C_VARCHAR_2 AND A.C_TEXT = B.C_TEXT
ORDER BY 1,2,3,4,5,6,7,8,9,10,11 LIMIT 100;

SELECT COUNT(*) FROM VEC_HASHJOIN_TABLE_STRING_01 A INNER JOIN VEC_HASHJOIN_TABLE_STRING_01 B ON
A.C_INT = B.C_INT AND A.C_BIGINT = B.C_BIGINT AND A.C_SMALLINT = B.C_SMALLINT AND
A.C_CHAR_1 = B.C_CHAR_1 AND A.C_CHAR_2 = B.C_CHAR_2 AND A.C_CHAR_3 = B.C_CHAR_3 AND A.C_CHAR_4 = B.C_CHAR_4 AND
A.C_BPCHAR_1 = B.C_BPCHAR_1 AND A.C_BPCHAR_2 = B.C_BPCHAR_2 AND
A.C_VARCHAR_1 = B.C_VARCHAR_1 AND A.C_VARCHAR_2 = B.C_VARCHAR_2 AND A.C_TEXT = B.C_TEXT;

SET work_mem = '28MB';
--test complicate join key
SELECT * FROM VEC_HASHJOIN_TABLE_STRING_01 A INNER JOIN VEC_HASHJOIN_TABLE_STRING_01 B ON
A.C_INT + 5 = B.C_INT AND substring(A.C_BPCHAR_1 FROM 1 FOR 1) = left(B.C_CHAR_1, 1)
WHERE A.C_BPCHAR_2 IS NOT NULL AND A.C_INT > 10000 AND A.C_INT < 20000
ORDER BY 1,2,3,4,5,6,7,8,9,10,11;

-- TEST RESPILL
SET work_mem = 3700;
-- test data number of single DN > 16K
SELECT COUNT(*) FROM VEC_HASHJOIN_TABLE_STRING_01 A INNER JOIN VEC_HASHJOIN_TABLE_STRING_02 B ON
A.C_INT = B.C_INT AND A.C_BIGINT = B.C_BIGINT AND A.C_SMALLINT = B.C_SMALLINT;

SELECT * FROM VEC_HASHJOIN_TABLE_STRING_01 A INNER JOIN VEC_HASHJOIN_TABLE_STRING_02 B ON
A.C_INT = B.C_INT AND A.C_BIGINT = B.C_BIGINT AND A.C_SMALLINT = B.C_SMALLINT
ORDER BY 1,2,3,4,5,6,7,8,9,10,11 LIMIT 100;

SET work_mem = 2400;
SELECT * FROM VEC_HASHJOIN_TABLE_STRING_01 A INNER JOIN VEC_HASHJOIN_TABLE_STRING_02 B ON
A.C_INT = B.C_INT AND A.C_BIGINT = B.C_BIGINT AND A.C_SMALLINT = B.C_SMALLINT AND
A.C_CHAR_1 = B.C_CHAR_1 AND A.C_CHAR_2 = B.C_CHAR_2 AND A.C_CHAR_3 = B.C_CHAR_3 AND A.C_CHAR_4 = B.C_CHAR_4 AND
A.C_BPCHAR_1 = B.C_BPCHAR_1 AND A.C_BPCHAR_2 = B.C_BPCHAR_2 AND
A.C_VARCHAR_1 = B.C_VARCHAR_1 AND A.C_VARCHAR_2 = B.C_VARCHAR_2 AND A.C_TEXT = B.C_TEXT
ORDER BY 1,2,3,4,5,6,7,8,9,10,11 LIMIT 100;

SELECT COUNT(*) FROM VEC_HASHJOIN_TABLE_STRING_01 A INNER JOIN VEC_HASHJOIN_TABLE_STRING_02 B ON
A.C_INT = B.C_INT AND A.C_BIGINT = B.C_BIGINT AND A.C_SMALLINT = B.C_SMALLINT AND
A.C_CHAR_1 = B.C_CHAR_1 AND A.C_CHAR_2 = B.C_CHAR_2 AND A.C_CHAR_3 = B.C_CHAR_3 AND A.C_CHAR_4 = B.C_CHAR_4 AND
A.C_BPCHAR_1 = B.C_BPCHAR_1 AND A.C_BPCHAR_2 = B.C_BPCHAR_2 AND
A.C_VARCHAR_1 = B.C_VARCHAR_1 AND A.C_VARCHAR_2 = B.C_VARCHAR_2 AND A.C_TEXT = B.C_TEXT;

--test complicate join key
SET work_mem = 3700;
SELECT * FROM VEC_HASHJOIN_TABLE_STRING_01 A INNER JOIN VEC_HASHJOIN_TABLE_STRING_02 B ON
A.C_INT + 5 = B.C_INT AND substring(A.C_BPCHAR_1 FROM 1 FOR 1) = left(B.C_CHAR_1, 1)
WHERE A.C_BPCHAR_2 IS NOT NULL AND A.C_INT > 10000 AND A.C_INT < 20000
ORDER BY 1,2,3,4,5,6,7,8,9,10,11;

-- test data number of one build side partition > 64k
set work_mem='2MB';
SELECT /*+ leading ((A B))*/ * FROM VEC_HASHJOIN_TABLE_STRING_01 A INNER JOIN VEC_HASHJOIN_TABLE_STRING_03 B ON
A.C_INT = B.C_INT ORDER BY 1,2,3,4,5,6,7,8,9,10,11 LIMIT 100;

RESET query_mem;
RESET work_mem;
