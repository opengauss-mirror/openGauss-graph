
create table source_table(c1 int, c2 int);
insert into source_table values(generate_series(1,100),10);

CREATE OR REPLACE FUNCTION pg_get_redis_rel_start_ctid(text,name) RETURNS tid AS '@abs_bindir@/../lib/postgresql/gsredistribute@DLSUFFIX@', 'pg_get_redis_rel_start_ctid' LANGUAGE C STABLE NOT FENCED;
CREATE OR REPLACE FUNCTION pg_get_redis_rel_end_ctid(text,name) RETURNS tid AS '@abs_bindir@/../lib/postgresql/gsredistribute@DLSUFFIX@', 'pg_get_redis_rel_end_ctid' LANGUAGE C STABLE NOT FENCED;
CREATE OR REPLACE FUNCTION pg_tupleid_get_blocknum(tid) RETURNS bigint AS '@abs_bindir@/../lib/postgresql/gsredistribute@DLSUFFIX@', 'pg_tupleid_get_blocknum' LANGUAGE C STABLE NOT FENCED;
CREATE OR REPLACE FUNCTION pg_tupleid_get_offset(tid) RETURNS int AS '@abs_bindir@/../lib/postgresql/gsredistribute@DLSUFFIX@', 'pg_tupleid_get_offset' LANGUAGE C STABLE NOT FENCED;

create table t3 (c1 int, c2 int);

create schema data_redis;
CREATE TABLE data_redis.data_redis_tmp_16399 (LIKE t3 INCLUDING STORAGE INCLUDING RELOPTIONS INCLUDING DISTRIBUTION, nodeid int,tupleblocknum bigint,tupleoffset int);

create unlogged table data_redis.pg_delete_delta_16399
(
        xcnodeid int,
        dnrelid int,
        block_number bigint,
        block_offset int
)
distribute by hash(xcnodeid,dnrelid,block_number,block_offset);

insert into t3 select * from source_table;

ALTER TABLE t3 SET(append_mode=on, rel_cn_oid=16399);

insert into data_redis.data_redis_tmp_16399 select *,xc_node_id,pg_tupleid_get_blocknum(ctid),pg_tupleid_get_offset(ctid) FROM ONLY t3 WHERE ctid BETWEEN pg_get_redis_rel_start_ctid('t3',NULL) AND pg_get_redis_rel_end_ctid('t3',NULL);

delete from t3;

select count(*) from data_redis.data_redis_tmp_16399;
select count(*) from data_redis.pg_delete_delta_16399;

truncate table t3;

select count(*) from data_redis.data_redis_tmp_16399;
select count(*) from data_redis.pg_delete_delta_16399;

insert into t3 select * from source_table;

ALTER TABLE t3 SET(append_mode=on, rel_cn_oid=16399);

insert into data_redis.data_redis_tmp_16399 select *,xc_node_id,pg_tupleid_get_blocknum(ctid),pg_tupleid_get_offset(ctid) FROM ONLY t3 WHERE ctid BETWEEN pg_get_redis_rel_start_ctid('t3',NULL) AND pg_get_redis_rel_end_ctid('t3',NULL);

delete from t3;

select count(*) from data_redis.data_redis_tmp_16399;
select count(*) from data_redis.pg_delete_delta_16399;

truncate table t3;

select count(*) from data_redis.data_redis_tmp_16399;
select count(*) from data_redis.pg_delete_delta_16399;

-- test error path -- 

create table t4 (c1 int, c2 int);
ALTER TABLE t4 SET(append_mode=on, rel_cn_oid=12345);

-- error with no delete_delta table is found
truncate table t4;

create unlogged table data_redis.pg_delete_delta_12345
(
        xcnodeid int,
        dnrelid int,
        block_number bigint,
        block_offset int
)
distribute by hash(xcnodeid,dnrelid,block_number,block_offset);

-- error with no new temp table is found
truncate table t4;

CREATE TABLE data_redis.data_redis_tmp_12345 (LIKE t4 INCLUDING STORAGE INCLUDING RELOPTIONS INCLUDING DISTRIBUTION, nodeid int,tupleblocknum bigint,tupleoffset int);

-- truncate is succeed
truncate table t4;

-- clean up -- 
drop function pg_get_redis_rel_start_ctid(text, name);
drop function pg_get_redis_rel_end_ctid(text, name);
drop function pg_tupleid_get_offset;
drop function pg_tupleid_get_blocknum;


drop table t3;
drop table t4;
drop table source_table;
drop table data_redis.pg_delete_delta_16399;
drop table data_redis.data_redis_tmp_16399;
drop table data_redis.pg_delete_delta_12345;
drop table data_redis.data_redis_tmp_12345;
drop schema data_redis;
