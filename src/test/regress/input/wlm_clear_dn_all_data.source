CREATE DATABASE wlm_clear_dn_all_data;
\c wlm_clear_dn_all_data
set resource_track_duration=0;
set query_band='wlm_clear_dn_all_data_test';
set xc_maintenance_mode = on;
set transaction_read_only = off;
DECLARE
sql_stmt VARCHAR2(500);
my_cursor REFCURSOR;
respool_name text;
mem_percent int;
control_group text;
active_statements int;
max_dop int;
memory_limit text;
io_limits int;
io_priority text;
nodegroup text;
BEGIN
sql_stmt := 'select respool_name,mem_percent,control_group,active_statements,max_dop,memory_limit,io_limits,io_priority,nodegroup from  pg_resource_pool';
OPEN my_cursor FOR EXECUTE sql_stmt;
FETCH FROM my_cursor INTO respool_name,mem_percent,control_group,active_statements,max_dop,memory_limit,io_limits,io_priority,nodegroup;
WHILE my_cursor % FOUND LOOP
IF respool_name != 'default_pool' THEN
EXECUTE IMMEDIATE 'DROP RESOURCE POOL '||respool_name||';';
EXECUTE IMMEDIATE 'CREATE RESOURCE POOL '||respool_name||' WITH(mem_percent='||mem_percent||',control_group='''||control_group||''',active_statements='||active_statements||',max_dop='||max_dop||',memory_limit='''||memory_limit||''',io_limits='||io_limits||',io_priority='''||io_priority||''',nodegroup=''$logic_cluster'');';
END IF;

FETCH FROM my_cursor INTO respool_name,mem_percent,control_group,active_statements,max_dop,memory_limit,io_limits,io_priority,nodegroup;

END LOOP;
CLOSE my_cursor;
END;
/
set xc_maintenance_mode = on;
set transaction_read_only = off;
DECLARE
sql_stmt VARCHAR2(500);
my_cursor REFCURSOR;
username text;
respool_name text;
BEGIN
sql_stmt := 'select rolname from  pg_authid  where rolsuper != ''t'' and rolname !~ ''^gs_role_'' ';
OPEN my_cursor FOR EXECUTE sql_stmt;
FETCH FROM my_cursor INTO username;
WHILE my_cursor % FOUND LOOP
EXECUTE IMMEDIATE 'DROP USER '||username||' CASCADE';
FETCH FROM my_cursor INTO username;
END LOOP;
CLOSE my_cursor;

-- drop all resource pool except default_respool pool.
sql_stmt := 'SELECT respool_name FROM pg_resource_pool  WHERE oid != 10 ';

OPEN my_cursor FOR EXECUTE sql_stmt;
FETCH FROM my_cursor INTO respool_name;
WHILE my_cursor % FOUND LOOP
EXECUTE IMMEDIATE 'DROP RESOURCE POOL '||respool_name||' ';
FETCH FROM my_cursor INTO respool_name;
END LOOP;
CLOSE my_cursor;
END;
/
\! @abs_bindir@/gsql -r -p @portstring@ -d wlm_clear_dn_all_data -c "SELECT * from pg_tables where schemaname != 'pg_catalog' and schemaname != 'information_schema';"
--output
\c postgres
drop database wlm_clear_dn_all_data;
\c regression
--end of file
