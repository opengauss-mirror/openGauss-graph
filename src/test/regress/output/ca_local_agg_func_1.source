set explain_perf_mode=normal;
select stddev_samp(c4), stddev_samp(c5), stddev_samp(c7) from aggtable1 group by c8 order by c8;
     stddev_samp     |     stddev_samp     |   stddev_samp    
---------------------+---------------------+------------------
 13.2004008772373181 | 13.2004008772373181 | 13.2004008772373
 13.2004008772373181 | 13.2004008772373181 | 13.2004008772373
(2 rows)

select stddev(c4), stddev(c5), stddev(c7) from aggtable1 group by c8 order by c8;
       stddev        |       stddev        |      stddev      
---------------------+---------------------+------------------
 13.2004008772373181 | 13.2004008772373181 | 13.2004008772373
 13.2004008772373181 | 13.2004008772373181 | 13.2004008772373
(2 rows)

explain (verbose on, costs off) select var_pop(c4), var_samp(c5), variance(c7), stddev_pop(c4), stddev_samp(c5), stddev(c7) from aggtable1 group by c8 order by c8;
                                                                                                                                                                                                                                             QUERY PLAN                                                                                                                                                                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Streaming (type: GATHER)
   Output: (pg_catalog.var_pop((var_pop(c4)))), (pg_catalog.var_samp((var_samp(c5)))), (pg_catalog.variance((variance(c7)))), (pg_catalog.stddev_pop((stddev_pop(c4)))), (pg_catalog.stddev_samp((stddev_samp(c5)))), (pg_catalog.stddev((stddev(c7)))), c8
   Merge Sort Key: aggtable1.c8
   Node/s: All datanodes
   ->  Sort
         Output: (pg_catalog.var_pop((var_pop(c4)))), (pg_catalog.var_samp((var_samp(c5)))), (pg_catalog.variance((variance(c7)))), (pg_catalog.stddev_pop((stddev_pop(c4)))), (pg_catalog.stddev_samp((stddev_samp(c5)))), (pg_catalog.stddev((stddev(c7)))), c8
         Sort Key: aggtable1.c8
         ->  HashAggregate
               Output: pg_catalog.var_pop((var_pop(c4))), pg_catalog.var_samp((var_samp(c5))), pg_catalog.variance((variance(c7))), pg_catalog.stddev_pop((stddev_pop(c4))), pg_catalog.stddev_samp((stddev_samp(c5))), pg_catalog.stddev((stddev(c7))), c8
               Group By Key: aggtable1.c8
               ->  Streaming(type: REDISTRIBUTE)
                     Output: (var_pop(c4)), (var_samp(c5)), (variance(c7)), (stddev_pop(c4)), (stddev_samp(c5)), (stddev(c7)), c8
                     Distribute Key: c8
                     Spawn on: All datanodes
                     Consumer Nodes: All datanodes
                     ->  Dummy HashAggregate
                           Output: var_pop(c4), var_samp(c5), variance(c7), stddev_pop(c4), stddev_samp(c5), stddev(c7), c8
                           Group By Key: aggtable1.c8
                           ->  Foreign Scan on public.aggtable1
                                 Output: count((c4)), sum(((c4))::numeric), sum((((c4))::numeric)*(((c4))::numeric)), count((c5)), sum(((c5))::numeric), sum((((c5))::numeric)*(((c5))::numeric)), count((c7)), sum((c7)), sum(((c7))*((c7))), count((c4)), sum(((c4))::numeric), sum((((c4))::numeric)*(((c4))::numeric)), count((c5)), sum(((c5))::numeric), sum((((c5))::numeric)*(((c5))::numeric)), count((c7)), sum((c7)), sum(((c7))*((c7))), c8
                                 Remote SQL: SELECT count((c4)), sum(((c4))::numeric), sum((((c4))::numeric)*(((c4))::numeric)), count((c5)), sum(((c5))::numeric), sum((((c5))::numeric)*(((c5))::numeric)), count((c7)), sum((c7)), sum(((c7))*((c7))), count((c4)), sum(((c4))::numeric), sum((((c4))::numeric)*(((c4))::numeric)), count((c5)), sum(((c5))::numeric), sum((((c5))::numeric)*(((c5))::numeric)), count((c7)), sum((c7)), sum(((c7))*((c7))), c8 FROM public.aggtable1 GROUP BY c8
(21 rows)

select regr_count(c4,c7), regr_sxx(c4,c7), regr_syy(c4,c7), regr_sxy(c4,c7), regr_avgx(c4,c7), regr_avgy(c4,c7) from aggtable1 group by c8 order by c8;
 regr_count |     regr_sxx     |     regr_syy     |     regr_sxy     |    regr_avgx     |    regr_avgy     
------------+------------------+------------------+------------------+------------------+------------------
       6144 | 1070421.33333333 | 1070421.33333333 | 1070421.33333333 | 16.3333333333333 | 13.3333333333333
       6144 | 1070421.33333333 | 1070421.33333333 | 1070421.33333333 | 23.3333333333333 | 20.3333333333333
(2 rows)

select regr_r2(c4,c7), regr_slope(c4,c7), regr_intercept(c4,c7), covar_pop(c4,c7), covar_samp(c4,c7), corr(c4,c7) from aggtable1 group by c8 order by c8;
 regr_r2 | regr_slope | regr_intercept |    covar_pop     |    covar_samp    | corr 
---------+------------+----------------+------------------+------------------+------
       1 |          1 |             -3 | 174.222222222222 | 174.250583319768 |    1
       1 |          1 |             -3 | 174.222222222222 | 174.250583319768 |    1
(2 rows)

explain (verbose on, costs off) select regr_count(c4,c7), regr_sxx(c4,c7), regr_syy(c4,c7), regr_sxy(c4,c7), regr_avgx(c4,c7), regr_avgy(c4,c7) from aggtable1 group by c8 order by c8;


 Streaming (type: GATHER)
   Output: (pg_catalog.regr_count((regr_count((c4)::double precision, c7)))), (pg_catalog.regr_sxx((regr_sxx((c4)::double precision, c7)))), (pg_catalog.regr_syy((regr_syy((c4)::double precision, c7)))), (pg_catalog.regr_sxy((regr_sxy((c4)::double precision, c7)))), (pg_catalog.regr_avgx((regr_avgx((c4)::double precision, c7)))), (pg_catalog.regr_avgy((regr_avgy((c4)::double precision, c7)))), c8
   Merge Sort Key: aggtable1.c8
   Node/s: All datanodes
   ->  Sort
         Output: (pg_catalog.regr_count((regr_count((c4)::double precision, c7)))), (pg_catalog.regr_sxx((regr_sxx((c4)::double precision, c7)))), (pg_catalog.regr_syy((regr_syy((c4)::double precision, c7)))), (pg_catalog.regr_sxy((regr_sxy((c4)::double precision, c7)))), (pg_catalog.regr_avgx((regr_avgx((c4)::double precision, c7)))), (pg_catalog.regr_avgy((regr_avgy((c4)::double precision, c7)))), c8
         Sort Key: aggtable1.c8
         ->  HashAggregate
               Output: pg_catalog.regr_count((regr_count((c4)::double precision, c7))), pg_catalog.regr_sxx((regr_sxx((c4)::double precision, c7))), pg_catalog.regr_syy((regr_syy((c4)::double precision, c7))), pg_catalog.regr_sxy((regr_sxy((c4)::double precision, c7))), pg_catalog.regr_avgx((regr_avgx((c4)::double precision, c7))), pg_catalog.regr_avgy((regr_avgy((c4)::double precision, c7))), c8
               Group By Key: aggtable1.c8
               ->  Streaming(type: REDISTRIBUTE)
                     Output: (regr_count((c4)::double precision, c7)), (regr_sxx((c4)::double precision, c7)), (regr_syy((c4)::double precision, c7)), (regr_sxy((c4)::double precision, c7)), (regr_avgx((c4)::double precision, c7)), (regr_avgy((c4)::double precision, c7)), c8
                     Distribute Key: c8
                     Spawn on: All datanodes
                     Consumer Nodes: All datanodes
                     ->  Dummy HashAggregate
                           Output: regr_count((c4)::double precision, c7), regr_sxx((c4)::double precision, c7), regr_syy((c4)::double precision, c7), regr_sxy((c4)::double precision, c7), regr_avgx((c4)::double precision, c7), regr_avgy((c4)::double precision, c7), c8
                           Group By Key: aggtable1.c8
                           ->  Foreign Scan on public.aggtable1
                                 Output: regr_count(c4::double precision, c7), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c7)+(c4::double precision)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum(((c7)::numeric)*((c4::double precision)::numeric)), count((c7)+(c4::double precision)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum(((c7)::numeric)*((c4::double precision)::numeric)), c8
                                 Remote SQL: SELECT regr_count(c4::double precision, c7), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c7)+(c4::double precision)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum(((c7)::numeric)*((c4::double precision)::numeric)), count((c7)+(c4::double precision)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum(((c7)::numeric)*((c4::double precision)::numeric)), c8 FROM public.aggtable1 GROUP BY c8
(21 rows)

explain (verbose on, costs off) select regr_r2(c4,c7), regr_slope(c4,c7), regr_intercept(c4,c7), covar_pop(c4,c7), covar_samp(c4,c7), corr(c4,c7) from aggtable1 group by c8 order by c8;


 Streaming (type: GATHER)
   Output: (pg_catalog.regr_r2((regr_r2((c4)::double precision, c7)))), (pg_catalog.regr_slope((regr_slope((c4)::double precision, c7)))), (pg_catalog.regr_intercept((regr_intercept((c4)::double precision, c7)))), (pg_catalog.covar_pop((covar_pop((c4)::double precision, c7)))), (pg_catalog.covar_samp((covar_samp((c4)::double precision, c7)))), (pg_catalog.corr((corr((c4)::double precision, c7)))), c8
   Merge Sort Key: aggtable1.c8
   Node/s: All datanodes
   ->  Sort
         Output: (pg_catalog.regr_r2((regr_r2((c4)::double precision, c7)))), (pg_catalog.regr_slope((regr_slope((c4)::double precision, c7)))), (pg_catalog.regr_intercept((regr_intercept((c4)::double precision, c7)))), (pg_catalog.covar_pop((covar_pop((c4)::double precision, c7)))), (pg_catalog.covar_samp((covar_samp((c4)::double precision, c7)))), (pg_catalog.corr((corr((c4)::double precision, c7)))), c8
         Sort Key: aggtable1.c8
         ->  HashAggregate
               Output: pg_catalog.regr_r2((regr_r2((c4)::double precision, c7))), pg_catalog.regr_slope((regr_slope((c4)::double precision, c7))), pg_catalog.regr_intercept((regr_intercept((c4)::double precision, c7))), pg_catalog.covar_pop((covar_pop((c4)::double precision, c7))), pg_catalog.covar_samp((covar_samp((c4)::double precision, c7))), pg_catalog.corr((corr((c4)::double precision, c7))), c8
               Group By Key: aggtable1.c8
               ->  Streaming(type: REDISTRIBUTE)
                     Output: (regr_r2((c4)::double precision, c7)), (regr_slope((c4)::double precision, c7)), (regr_intercept((c4)::double precision, c7)), (covar_pop((c4)::double precision, c7)), (covar_samp((c4)::double precision, c7)), (corr((c4)::double precision, c7)), c8
                     Distribute Key: c8
                     Spawn on: All datanodes
                     Consumer Nodes: All datanodes
                     ->  Dummy HashAggregate
                           Output: regr_r2((c4)::double precision, c7), regr_slope((c4)::double precision, c7), regr_intercept((c4)::double precision, c7), covar_pop((c4)::double precision, c7), covar_samp((c4)::double precision, c7), corr((c4)::double precision, c7), c8
                           Group By Key: aggtable1.c8
                           ->  Foreign Scan on public.aggtable1
                                 Output: count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c7)+(c4::double precision)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum(((c7)::numeric)*((c4::double precision)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), c8
                                 Remote SQL: SELECT count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c7)+(c4::double precision)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum(((c7)::numeric)*((c4::double precision)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), count((c4::double precision)+(c7)), sum((c4::double precision)::numeric), sum(((c4::double precision)::numeric)*((c4::double precision)::numeric)), sum((c7)::numeric), sum(((c7)::numeric)*((c7)::numeric)), sum(((c4::double precision)::numeric)*((c7)::numeric)), c8 FROM public.aggtable1 GROUP BY c8
(21 rows)

