--test excutor result in this text
----first, test foreign scan result
------bulid foreign table
Drop server if exists obs_server cascade;
NOTICE:  server "obs_server" does not exist, skipping
set enable_constraint_optimization = on;
CREATE SERVER obs_server FOREIGN DATA WRAPPER 	dfs_fdw OPTIONS (address '@obshostname@', type 'obs', access_key '@ak@', secret_access_key '@sk@');
drop foreign table nation;
ERROR:  foreign table "nation" does not exist
create foreign table nation  (
 N_NATIONKEY INT4 ,
 N_NAME TEXT,
 N_REGIONKEY INT4 ,
 N_COMMENT TEXT) 
SERVER obs_server
OPTIONS(encoding 'utf-8',format 'orc', foldername '/@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/')
distribute by roundrobin;
WARNING:  It is not specified totalrows option for the foreign table.
--------obtain this result when N_REGIONKEY is not defined informational constraint 
select n_regionkey from nation where n_regionkey = 4 order by n_regionkey;
 n_regionkey 
-------------
           4
           4
           4
           4
           4
(5 rows)

--------obtain this result when N_REGIONKEY is defined informational constraint 
alter foreign table nation add constraint primary_key_n_regionkey primary key (n_regionkey) not enforced;
NOTICE:  ALTER FOREIGN TABLE / ADD PRIMARY KEY will create constraint "primary_key_n_regionkey" for foreign table "nation"
----------test, when enable_hdfs_predicate_pushdown is on, enable_vector_engine is off.
set enable_hdfs_predicate_pushdown =on;
set enable_vector_engine = on;
select n_regionkey from nation where n_regionkey = 4 order by n_regionkey;
 n_regionkey 
-------------
           4
(1 row)

----------test, when enable_hdfs_predicate_pushdown is on, enable_vector_engine is on.
set enable_hdfs_predicate_pushdown =on;
set enable_vector_engine = off;
select n_regionkey from nation where n_regionkey = 4 order by n_regionkey;
 n_regionkey 
-------------
           4
(1 row)

----------test, when enable_hdfs_predicate_pushdown is off, enable_vector_engine is on.
set enable_hdfs_predicate_pushdown =off;
set enable_vector_engine = on;
select n_regionkey from nation where n_regionkey = 4 order by n_regionkey;
 n_regionkey 
-------------
           4
(1 row)

----------test, when enable_hdfs_predicate_pushdown is off, enable_vector_engine is off.
set enable_hdfs_predicate_pushdown =off;
set enable_vector_engine = off;
select n_regionkey from nation where n_regionkey = 4 order by n_regionkey;
 n_regionkey 
-------------
           4
(1 row)

----second,test join scan
drop foreign table region;
ERROR:  foreign table "region" does not exist
create foreign table region  (
 R_REGIONKEY  int,
 R_NAME TEXT,
 R_COMMENT TEXT
)
SERVER obs_server
OPTIONS(encoding 'utf-8',format 'orc', foldername '/@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/')
distribute by roundrobin;
WARNING:  It is not specified totalrows option for the foreign table.
drop foreign table nation;
create foreign table nation  (
 N_NATIONKEY INT4,
 N_NAME TEXT,
 N_REGIONKEY INT4 ,
 N_COMMENT TEXT) 
SERVER obs_server
OPTIONS(encoding 'utf-8',format 'orc', foldername '/@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/')
distribute by roundrobin;
WARNING:  It is not specified totalrows option for the foreign table.
--*************************************
------test inner join
------get the following result when do not using informatinal constraint
select region.r_regionkey from region, nation where region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey 
-------------
           0
           0
           0
           0
           0
           1
           1
           1
           1
           1
           2
           2
           2
           2
           2
           3
           3
           3
           3
           3
           4
           4
           4
           4
           4
(25 rows)

-------get the following result when using informational constraint
alter foreign table nation add constraint primary_key_n_regionkey primary key(n_regionkey) not enforced;
NOTICE:  ALTER FOREIGN TABLE / ADD PRIMARY KEY will create constraint "primary_key_n_regionkey" for foreign table "nation"
---------test nestloop , enable_vector_engine is on.
set enable_nestloop = on;
set enable_mergejoin = off;
set enable_hashjoin = off;
set enable_vector_engine = on;
select region.r_regionkey from region, nation where region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey 
-------------
           0
           1
           2
           3
           4
(5 rows)

---------test mergejoin, enable_vector_engine is on.
set enable_mergejoin = on;
set enable_nestloop = off;
set enable_hashjoin = off;
set enable_vector_engine = on;
select region.r_regionkey from region, nation where region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey 
-------------
           0
           0
           0
           0
           0
           1
           1
           1
           1
           1
           2
           2
           2
           2
           2
           3
           3
           3
           3
           3
           4
           4
           4
           4
           4
(25 rows)

---------test nestloop , enable_vector_engine is off.
set enable_nestloop = on;
set enable_mergejoin = off;
set enable_hashjoin = off;
set enable_vector_engine = off;
select region.r_regionkey from region, nation where region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey 
-------------
           0
           1
           2
           3
           4
(5 rows)

---------test mergejoin, enable_vector_engine is off.
set enable_mergejoin = on;
set enable_nestloop = off;
set enable_hashjoin = off;
set enable_vector_engine = off;
select region.r_regionkey from region, nation where region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey 
-------------
           0
           0
           0
           0
           0
           1
           1
           1
           1
           1
           2
           2
           2
           2
           2
           3
           3
           3
           3
           3
           4
           4
           4
           4
           4
(25 rows)

--*************************************
------test left join
--------get the following result when do not using informational constraint
alter foreign table nation drop constraint primary_key_n_regionkey ;
select region.r_regionkey from region left join  nation on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey 
-------------
           0
           0
           0
           0
           0
           1
           1
           1
           1
           1
           2
           2
           2
           2
           2
           3
           3
           3
           3
           3
           4
           4
           4
           4
           4
(25 rows)

--------get the following result when using informational constraint
alter foreign table nation add constraint primary_key_n_regionkey primary key(n_regionkey) not enforced;
NOTICE:  ALTER FOREIGN TABLE / ADD PRIMARY KEY will create constraint "primary_key_n_regionkey" for foreign table "nation"
---------test left nestloop , enable_vector_engine is on.
set enable_nestloop = on;
set enable_mergejoin = off;
set enable_hashjoin = off;
set enable_vector_engine = on;
explain (costs off) select region.r_regionkey from region left join  nation on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
--?.*
--?.*
 Row Adapter
   ->  Vector Streaming (type: GATHER)
         Merge Sort Key: region.r_regionkey
         ->  Vector Sort
               Sort Key: region.r_regionkey
               ->  Vector Nest Loop Left Join
                     Join Filter(Informational Constraint Optimization): (region.r_regionkey = nation.n_regionkey)
                     ->  Vector Foreign Scan on region
                           Server Type: obs
                           Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
                     ->  Vector Materialize
                           ->  Vector Streaming(type: BROADCAST)
                                 ->  Vector Foreign Scan on nation
                                       Server Type: obs
                                       Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(15 rows)

select region.r_regionkey from region left join  nation on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey 
-------------
           0
           1
           2
           3
           4
(5 rows)

---------test left mergejoin, enable_vector_engine is on.
set enable_mergejoin = on;
set enable_nestloop = off;
set enable_hashjoin = off;
set enable_vector_engine = on;
explain (costs off) select region.r_regionkey from region left join  nation on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
--?.*
--?.*
 Row Adapter
   ->  Vector Streaming (type: GATHER)
         Merge Sort Key: region.r_regionkey
         ->  Vector Merge Left Join
               Merge Cond(Informational Constraint Optimization): (region.r_regionkey = nation.n_regionkey)
               ->  Vector Sort
                     Sort Key: region.r_regionkey
                     ->  Vector Foreign Scan on region
                           Server Type: obs
                           Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
               ->  Vector Sort
                     Sort Key: nation.n_regionkey
                     ->  Vector Streaming(type: BROADCAST)
                           ->  Vector Foreign Scan on nation
                                 Server Type: obs
                                 Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(16 rows)

select region.r_regionkey from region left join  nation on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey 
-------------
           0
           0
           0
           0
           0
           1
           1
           1
           1
           1
           2
           2
           2
           2
           2
           3
           3
           3
           3
           3
           4
           4
           4
           4
           4
(25 rows)

---------test left nestloop , enable_vector_engine is off.
set enable_nestloop = on;
set enable_mergejoin = off;
set enable_hashjoin = off;
set enable_vector_engine = off;
explain (costs off) select region.r_regionkey from region left join  nation on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
--?.*
--?.*
 Streaming (type: GATHER)
   Merge Sort Key: region.r_regionkey
   ->  Sort
         Sort Key: region.r_regionkey
         ->  Nested Loop Left Join
               Join Filter(Informational Constraint Optimization): (region.r_regionkey = nation.n_regionkey)
               ->  Foreign Scan on region
                     Server Type: obs
                     Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
               ->  Materialize
                     ->  Streaming(type: BROADCAST)
                           ->  Foreign Scan on nation
                                 Server Type: obs
                                 Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(14 rows)

select region.r_regionkey from region left join  nation on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey 
-------------
           0
           1
           2
           3
           4
(5 rows)

---------test left mergejoin, enable_vector_engine is off.
set enable_mergejoin = on;
set enable_nestloop = off;
set enable_hashjoin = off;
set enable_vector_engine = off;
explain (costs off) select region.r_regionkey from region left join  nation on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
--?.*
--?.*
 Streaming (type: GATHER)
   Merge Sort Key: region.r_regionkey
   ->  Merge Left Join
         Merge Cond(Informational Constraint Optimization): (region.r_regionkey = nation.n_regionkey)
         ->  Sort
               Sort Key: region.r_regionkey
               ->  Foreign Scan on region
                     Server Type: obs
                     Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
         ->  Sort
               Sort Key: nation.n_regionkey
               ->  Streaming(type: BROADCAST)
                     ->  Foreign Scan on nation
                           Server Type: obs
                           Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(15 rows)

select region.r_regionkey from region left join  nation on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey 
-------------
           0
           0
           0
           0
           0
           1
           1
           1
           1
           1
           2
           2
           2
           2
           2
           3
           3
           3
           3
           3
           4
           4
           4
           4
           4
(25 rows)

--*************************************
------test right join
--------get the following result when do not using informational constraint
alter foreign table nation drop constraint primary_key_n_regionkey ;
select region.r_regionkey, nation.n_regionkey from nation right join region on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey | n_regionkey 
-------------+-------------
           0 |           0
           0 |           0
           0 |           0
           0 |           0
           0 |           0
           1 |           1
           1 |           1
           1 |           1
           1 |           1
           1 |           1
           2 |           2
           2 |           2
           2 |           2
           2 |           2
           2 |           2
           3 |           3
           3 |           3
           3 |           3
           3 |           3
           3 |           3
           4 |           4
           4 |           4
           4 |           4
           4 |           4
           4 |           4
(25 rows)

--------get the following result when using informational constraint
alter foreign table nation add constraint primary_key_n_regionkey primary key(n_regionkey) not enforced;
NOTICE:  ALTER FOREIGN TABLE / ADD PRIMARY KEY will create constraint "primary_key_n_regionkey" for foreign table "nation"
---------test left nestloop , enable_vector_engine is on.
set enable_nestloop = on;
set enable_mergejoin = off;
set enable_hashjoin = off;
set enable_vector_engine = on;
explain (costs off) select region.r_regionkey from nation right join region on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
--?.*
--?.*
 Row Adapter
   ->  Vector Streaming (type: GATHER)
         Merge Sort Key: region.r_regionkey
         ->  Vector Sort
               Sort Key: region.r_regionkey
               ->  Vector Nest Loop Left Join
                     Join Filter(Informational Constraint Optimization): (region.r_regionkey = nation.n_regionkey)
                     ->  Vector Foreign Scan on region
                           Server Type: obs
                           Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
                     ->  Vector Materialize
                           ->  Vector Streaming(type: BROADCAST)
                                 ->  Vector Foreign Scan on nation
                                       Server Type: obs
                                       Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(15 rows)

select region.r_regionkey, nation.n_regionkey from nation right join region on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey | n_regionkey 
-------------+-------------
           0 |           0
           1 |           1
           2 |           2
           3 |           3
           4 |           4
(5 rows)

---------test right mergejoin, enable_vector_engine is on.
set enable_mergejoin = on;
set enable_nestloop = off;
set enable_hashjoin = off;
set enable_vector_engine = on;
explain (costs off) select region.r_regionkey from nation right join region on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
--?.*
--?.*
 Row Adapter
   ->  Vector Streaming (type: GATHER)
         Merge Sort Key: region.r_regionkey
         ->  Vector Merge Left Join
               Merge Cond(Informational Constraint Optimization): (region.r_regionkey = nation.n_regionkey)
               ->  Vector Sort
                     Sort Key: region.r_regionkey
                     ->  Vector Foreign Scan on region
                           Server Type: obs
                           Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
               ->  Vector Sort
                     Sort Key: nation.n_regionkey
                     ->  Vector Streaming(type: BROADCAST)
                           ->  Vector Foreign Scan on nation
                                 Server Type: obs
                                 Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(16 rows)

select region.r_regionkey, nation.n_regionkey from nation right join region on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey | n_regionkey 
-------------+-------------
           0 |           0
           0 |           0
           0 |           0
           0 |           0
           0 |           0
           1 |           1
           1 |           1
           1 |           1
           1 |           1
           1 |           1
           2 |           2
           2 |           2
           2 |           2
           2 |           2
           2 |           2
           3 |           3
           3 |           3
           3 |           3
           3 |           3
           3 |           3
           4 |           4
           4 |           4
           4 |           4
           4 |           4
           4 |           4
(25 rows)

---------test right nestloop , enable_vector_engine is off.
set enable_nestloop = on;
set enable_mergejoin = off;
set enable_hashjoin = off;
set enable_vector_engine = off;
explain (costs off) select region.r_regionkey from nation right join region on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
--?.*
--?.*
 Streaming (type: GATHER)
   Merge Sort Key: region.r_regionkey
   ->  Sort
         Sort Key: region.r_regionkey
         ->  Nested Loop Left Join
               Join Filter(Informational Constraint Optimization): (region.r_regionkey = nation.n_regionkey)
               ->  Foreign Scan on region
                     Server Type: obs
                     Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
               ->  Materialize
                     ->  Streaming(type: BROADCAST)
                           ->  Foreign Scan on nation
                                 Server Type: obs
                                 Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(14 rows)

select region.r_regionkey, nation.n_regionkey from nation right join region on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey | n_regionkey 
-------------+-------------
           0 |           0
           1 |           1
           2 |           2
           3 |           3
           4 |           4
(5 rows)

---------test right mergejoin, enable_vector_engine is off.
set enable_mergejoin = on;
set enable_nestloop = off;
set enable_hashjoin = off;
set enable_vector_engine = off;
explain (costs off) select region.r_regionkey from nation right join region on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
--?.*
--?.*
 Streaming (type: GATHER)
   Merge Sort Key: region.r_regionkey
   ->  Merge Left Join
         Merge Cond(Informational Constraint Optimization): (region.r_regionkey = nation.n_regionkey)
         ->  Sort
               Sort Key: region.r_regionkey
               ->  Foreign Scan on region
                     Server Type: obs
                     Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
         ->  Sort
               Sort Key: nation.n_regionkey
               ->  Streaming(type: BROADCAST)
                     ->  Foreign Scan on nation
                           Server Type: obs
                           Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(15 rows)

select region.r_regionkey, nation.n_regionkey from nation right join region on region.r_regionkey = nation.n_regionkey order by region.r_regionkey;
 r_regionkey | n_regionkey 
-------------+-------------
           0 |           0
           0 |           0
           0 |           0
           0 |           0
           0 |           0
           1 |           1
           1 |           1
           1 |           1
           1 |           1
           1 |           1
           2 |           2
           2 |           2
           2 |           2
           2 |           2
           2 |           2
           3 |           3
           3 |           3
           3 |           3
           3 |           3
           3 |           3
           4 |           4
           4 |           4
           4 |           4
           4 |           4
           4 |           4
(25 rows)

-- third, test NOT IN
set enable_hashjoin = on;
set enable_nestloop = on;
set enable_mergejoin = on;
--------get the following result when do not using informational constraint
alter foreign table nation drop constraint primary_key_n_regionkey ;
set enable_vector_engine = off;
alter foreign table nation alter N_REGIONKEY set not null;
explain (costs off) select * from region where R_REGIONKEY not in (select N_REGIONKEY from nation ) order by 1;
--?.*
--?.*
 Streaming (type: GATHER)
   Merge Sort Key: region.r_regionkey
   ->  Sort
         Sort Key: region.r_regionkey
         ->  Nested Loop Anti Join
               Join Filter: ((region.r_regionkey = nation.n_regionkey) OR (region.r_regionkey IS NULL))
               ->  Foreign Scan on region
                     Server Type: obs
                     Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
               ->  Materialize
                     ->  Streaming(type: BROADCAST)
                           ->  Foreign Scan on nation
                                 Server Type: obs
                                 Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(14 rows)

set enable_vector_engine = on;
explain (costs off) select * from region where R_REGIONKEY not in (select N_REGIONKEY from nation ) order by 1;
--?.*
--?.*
 Row Adapter
   ->  Vector Streaming (type: GATHER)
         Merge Sort Key: region.r_regionkey
         ->  Vector Sort
               Sort Key: region.r_regionkey
               ->  Vector Nest Loop Anti Join
                     Join Filter: ((region.r_regionkey = nation.n_regionkey) OR (region.r_regionkey IS NULL))
                     ->  Vector Foreign Scan on region
                           Server Type: obs
                           Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
                     ->  Vector Materialize
                           ->  Vector Streaming(type: BROADCAST)
                                 ->  Vector Foreign Scan on nation
                                       Server Type: obs
                                       Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(15 rows)

--------get the following result when using informational constraint
alter foreign table nation add constraint primary_key_n_regionkey primary key(n_regionkey) not enforced;
NOTICE:  ALTER FOREIGN TABLE / ADD PRIMARY KEY will create constraint "primary_key_n_regionkey" for foreign table "nation"
alter foreign table region add constraint primary_key_r_regionkey primary key(r_regionkey) not enforced;
NOTICE:  ALTER FOREIGN TABLE / ADD PRIMARY KEY will create constraint "primary_key_r_regionkey" for foreign table "region"
set enable_vector_engine = off;
explain (costs off) select * from region where R_REGIONKEY not in (select N_REGIONKEY from nation ) order by 1;
--?.*
--?.*
 Streaming (type: GATHER)
   Merge Sort Key: region.r_regionkey
   ->  Sort
         Sort Key: region.r_regionkey
         ->  Nested Loop Anti Join
               Join Filter: (region.r_regionkey = nation.n_regionkey)
               ->  Foreign Scan on region
                     Server Type: obs
                     Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
               ->  Materialize
                     ->  Streaming(type: BROADCAST)
                           ->  Foreign Scan on nation
                                 Server Type: obs
                                 Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(14 rows)

set enable_vector_engine = on;
explain (costs off) select * from region where R_REGIONKEY not in (select N_REGIONKEY from nation ) order by 1;
--?.*
--?.*
 Row Adapter
   ->  Vector Streaming (type: GATHER)
         Merge Sort Key: region.r_regionkey
         ->  Vector Sort
               Sort Key: region.r_regionkey
               ->  Vector Nest Loop Anti Join
                     Join Filter: (region.r_regionkey = nation.n_regionkey)
                     ->  Vector Foreign Scan on region
                           Server Type: obs
                           Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
                     ->  Vector Materialize
                           ->  Vector Streaming(type: BROADCAST)
                                 ->  Vector Foreign Scan on nation
                                       Server Type: obs
                                       Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(15 rows)

--test group by 
---------get the following result when do not using informational constraint
alter foreign table nation drop constraint primary_key_n_regionkey; 
alter foreign table region drop constraint primary_key_r_regionkey;
explain (costs off) select region.r_regionkey from region, nation where region.r_regionkey = nation.n_regionkey group by region.r_regionkey order by 1; 
--?.*
--?.*
 Row Adapter
   ->  Vector Group
         Group By Key: region.r_regionkey
         ->  Vector Sort
               Sort Key: region.r_regionkey
               ->  Vector Streaming (type: GATHER)
                     ->  Vector Group
                           Group By Key: region.r_regionkey
                           ->  Vector Sort
                                 Sort Key: region.r_regionkey
                                 ->  Vector Nest Loop
                                       Join Filter: (region.r_regionkey = nation.n_regionkey)
                                       ->  Vector Foreign Scan on region
                                             Server Type: obs
                                             Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
                                       ->  Vector Materialize
                                             ->  Vector Streaming(type: BROADCAST)
                                                   ->  Vector Foreign Scan on nation
                                                         Server Type: obs
                                                         Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(20 rows)

--------get the following result when using informational constraint
alter foreign table region add constraint primary_key_r_regionkey primary key(r_regionkey) not enforced;
NOTICE:  ALTER FOREIGN TABLE / ADD PRIMARY KEY will create constraint "primary_key_r_regionkey" for foreign table "region"
------this case will do not optimization
explain (costs off) select region.r_regionkey from region, nation where region.r_regionkey = nation.n_regionkey group by region.r_regionkey order by 1; 
--?.*
--?.*
 Row Adapter
   ->  Vector Group
         Group By Key: region.r_regionkey
         ->  Vector Sort
               Sort Key: region.r_regionkey
               ->  Vector Streaming (type: GATHER)
                     ->  Vector Group
                           Group By Key: region.r_regionkey
                           ->  Vector Sort
                                 Sort Key: region.r_regionkey
                                 ->  Vector Nest Loop
                                       Join Filter: (region.r_regionkey = nation.n_regionkey)
                                       ->  Vector Foreign Scan on region
                                             Server Type: obs
                                             Orc File: /@obsbucket@/obsorccheck/mppdb.db/region_orc11_64stripe/
                                       ->  Vector Materialize
                                             ->  Vector Streaming(type: BROADCAST)
                                                   ->  Vector Foreign Scan on nation
                                                         Server Type: obs
                                                         Orc File: /@obsbucket@/obsorccheck/mppdb.db/nation_orc11_64stripe/
(20 rows)

--add llt
drop foreign table bool_skip_1;
ERROR:  foreign table "bool_skip_1" does not exist
create foreign table bool_skip_1(i int primary key not enforced, a smallint, b bool, c float4, d decimal(10,5))
server obs_server
options(encoding 'utf-8',format 'orc', foldername '/@obsbucket@/obsorccheck/bool_skip_1/')
distribute by roundrobin;
WARNING:  It is not specified totalrows option for the foreign table.
NOTICE:  CREATE FOREIGN TABLE / PRIMARY KEY will create constraint "bool_skip_1_pkey" for foreign table "bool_skip_1"
analyze bool_skip_1;
set enable_hdfs_predicate_pushdown =on;
select * from bool_skip_1 where b is null and i=15000 and i<15020 order by 1,2,3,4,5;
   i   | a | b | c  |   d    
-------+---+---+----+--------
 15000 | 5 |   | .5 | .80000
(1 row)

create foreign table tab_query_1 ( 
 c_id1 int,
 c_id2 varchar(2),
 constraint tab_query_1_cons  unique(c_id1) not enforced ENABLE QUERY OPTIMIZATION
 )
server obs_server OPTIONS(encoding 'utf-8',format 'orc', foldername '/@obsbucket@/obsorccheck/tab_query_1/')
distribute by roundrobin;
WARNING:  It is not specified totalrows option for the foreign table.
NOTICE:  CREATE FOREIGN TABLE / UNIQUE will create constraint "tab_query_1_cons" for foreign table "tab_query_1"
select c_id1 from tab_query_1 group by c_id1 order by 1;
 c_id1 
-------
     1
     2
      
(3 rows)

drop foreign table tab_query_1;
drop foreign table if exists    txt_soft_constraint_ft;;
NOTICE:  foreign table "txt_soft_constraint_ft" does not exist, skipping
create foreign table txt_soft_constraint_ft
(
a int,
b int constraint txt_soft_constraint_ft_constr_unique unique not enforced
)
SERVER gsmpp_server OPTIONS (
    location 'gsobs://@obshostname@/@obsbucket@/obs_ddl/test_case_data/txt_obs_informatonal_test001',
    format 'text',
    encoding 'utf8',
    chunksize '32',
    encrypt 'off',
    access_key '@ak@',
    secret_access_key '@sk@'
) read only;
NOTICE:  CREATE FOREIGN TABLE / UNIQUE will create constraint "txt_soft_constraint_ft_constr_unique" for foreign table "txt_soft_constraint_ft"
-- select one tuple
select * from txt_soft_constraint_ft where b=3;
 a | b 
---+---
 2 | 3
(1 row)

drop foreign table if exists    txt_soft_constraint_ft;;
create foreign table txt_soft_constraint_ft
(
a int,
b int constraint txt_soft_constraint_ft_constr_unique unique not enforced disable query optimization
)
SERVER gsmpp_server OPTIONS (
    location 'gsobs://@obshostname@/@obsbucket@/obs_ddl/test_case_data/txt_obs_informatonal_test001',
    format 'text',
    encoding 'utf8',
    chunksize '32',
    encrypt 'off',
    access_key '@ak@',
    secret_access_key '@sk@'
) read only;
NOTICE:  CREATE FOREIGN TABLE / UNIQUE will create constraint "txt_soft_constraint_ft_constr_unique" for foreign table "txt_soft_constraint_ft"
--select two tuple
select * from txt_soft_constraint_ft where b=3;
 a | b 
---+---
 2 | 3
 2 | 3
(2 rows)

alter foreign table txt_soft_constraint_ft drop constraint txt_soft_constraint_ft_constr_unique;
alter foreign table txt_soft_constraint_ft add constraint txt_soft_constraint_ft_constr_unique primary key(b) not enforced;
NOTICE:  ALTER FOREIGN TABLE / ADD PRIMARY KEY will create constraint "txt_soft_constraint_ft_constr_unique" for foreign table "txt_soft_constraint_ft"
drop foreign table if exists    txt_soft_constraint_ft;
-- throw a error
CREATE FOREIGN TABLE gds_ft (
   a int,
   b int constraint gds_ft_unique unique not enforced
)SERVER gsmpp_server OPTIONS(format 'text', location 'gsfs://127.0.0.1:8900/bulkload_compatible_illegal_chars_test_data/smartcare_test.data', encoding 'sql_ascii', delimiter '|', mode 'normal', compatible_illegal_chars 'true', ignore_extra_data 'true');
ERROR:  It is not allowed to support "NOT ENFORCED" informational constraint.
drop server if exists obs_server cascade;
NOTICE:  drop cascades to 3 other objects
DETAIL:  drop cascades to foreign table region
drop cascades to foreign table nation
drop cascades to foreign table bool_skip_1
set enable_constraint_optimization = off;
