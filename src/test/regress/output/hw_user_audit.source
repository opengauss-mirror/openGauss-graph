--
-- test audit for new object
--
-- open the audit guc parameter.
\! @abs_bindir@/gs_guc reload -Z coordinator -D @abs_srcdir@/tmp_check/coordinator1/ -c "audit_system_object=8191" > /dev/null 2>&1
select pg_sleep(1);
 pg_sleep 
----------
 
(1 row)

--1¡¢audit for resouce pool and workload.
select * from pg_delete_audit('1111-1-1','2222-2-2');
 pg_delete_audit 
-----------------
 
(1 row)

create resource pool test_resourcepool_audit;
create workload group test_workloadgroup_audit;
alter workload group test_workloadgroup_audit using resource pool test_resourcepool_audit;
drop workload group test_workloadgroup_audit;
drop resource pool test_resourcepool_audit;
select type,result,object_name,detail_info from pg_query_audit('1111-1-1','2222-2-2') where object_name = 'test_resourcepool';
 type | result | object_name | detail_info 
------+--------+-------------+-------------
(0 rows)

select type,result,object_name,detail_info from pg_query_audit('1111-1-1','2222-2-2') where object_name = 'test_workloadgroup';
 type | result | object_name | detail_info 
------+--------+-------------+-------------
(0 rows)

--2¡¢audit for app workload group mapping.
select * from pg_delete_audit('1111-1-1','2222-2-2');
 pg_delete_audit 
-----------------
 
(1 row)

create app workload group mapping test_appworkloadgroupmapping_audit;
alter app workload group mapping test_appworkloadgroupmapping_audit with (workload_gpname='default_group');
drop app workload group mapping test_appworkloadgroupmapping_audit;
select type,result,object_name,detail_info from pg_query_audit('1111-1-1','2222-2-2') where object_name = 'test_appworkloadgroupmapping';
 type | result | object_name | detail_info 
------+--------+-------------+-------------
(0 rows)

--3¡¢audit for server in hardoop
select * from pg_delete_audit('1111-1-1','2222-2-2');
 pg_delete_audit 
-----------------
 
(1 row)

create role temp_role password 'Gauss@123';
create server test_serverforhardoop_audit foreign data wrapper hdfs_fdw options (address '10.10.0.100:25000', hdfscfgpath '/home/omm', type 'hdfs');
--alter server test_serverforhardoop_audit options (add hdfscfgpath '/opt/hadoop');
alter server test_serverforhardoop_audit owner to temp_role;
alter server test_serverforhardoop_audit rename to test_serverforhardoop_audit1;
drop server test_serverforhardoop_audit1;
drop role temp_role;
select type,result,object_name,detail_info from pg_query_audit('1111-1-1','2222-2-2') where object_name LIKE 'test_serverforhardoop';
 type | result | object_name | detail_info 
------+--------+-------------+-------------
(0 rows)

-- close the audit guc parameter.
\! @abs_bindir@/gs_guc reload -Z coordinator -D @abs_srcdir@/tmp_check/coordinator1/ -c "audit_system_object=7" > /dev/null 2>&1
select pg_sleep(1);
 pg_sleep 
----------
 
(1 row)

GRANT CREATE ON SCHEMA public TO PUBLIC;
create role nologin_privilege_role password 'Gauss@123';
set role nologin_privilege_role password 'Gauss@123';
create table stream_test(id int);
insert into stream_test values(1),(2);
drop table stream_test;
reset role;
drop role nologin_privilege_role;
REVOKE CREATE ON SCHEMA public FROM PUBLIC;
--ALTER SYSTEM KILL SESSION '123456789101213,0' IMMEDIATE;
--select pg_stat_get_backend_pid(1);
--select pg_stat_get_activity(123456789101112);
create user sec_app_account_02_001_roleadmin with createrole identified by 'Gauss_234';
\! @abs_bindir@/gsql -d postgres -p @portstring@ -U sec_app_account_02_001_roleadmin -W Gauss_234 -r -c "create user sec_app_account_02_001_testa identified by 'Gauss_234';"
CREATE ROLE
\! @abs_bindir@/gsql -d postgres -p @portstring@ -U sec_app_account_02_001_roleadmin -W Gauss_234 -r -c "drop user sec_app_account_02_001_testa;"
DROP ROLE
drop user sec_app_account_02_001_roleadmin;
--audit for set parameter operator.
select * from pg_delete_audit('1111-1-1','2222-2-2');
 pg_delete_audit 
-----------------
 
(1 row)

create user set_role_user password 'gauss@123';
set role set_role_user password 'gauss@123';
reset role;
drop user set_role_user;
select type,result,object_name,detail_info from pg_query_audit('1111-1-1','2222-2-2') where detail_info like '%set_role_user%';
     type      | result |  object_name  |                  detail_info                   
---------------+--------+---------------+------------------------------------------------
 ddl_user      | ok     | set_role_user | create user set_role_user password '********';
 set_parameter | ok     | role          | set role set_role_user password '********';
 ddl_user      | ok     | set_role_user | drop user set_role_user;
(3 rows)

select * from pg_delete_audit('1111-1-1','2222-2-2');
 pg_delete_audit 
-----------------
 
(1 row)

\! @abs_bindir@/gs_guc reload -Z coordinator -D @abs_srcdir@/tmp_check/coordinator1/ -c "audit_dml_state=1" > /dev/null 2>&1
\! @abs_bindir@/gs_guc reload -Z coordinator -D @abs_srcdir@/tmp_check/coordinator1/ -c "audit_dml_state_select=1" > /dev/null 2>&1
select pg_sleep(1);
 pg_sleep 
----------
 
(1 row)

\! @abs_bindir@/gsql -r -p @portstring@ -d postgres -c "show audit_dml_state;show audit_dml_state_select;create table TESTTABLE_t1 (id int, num int) distribute by hash(id);"
 audit_dml_state 
-----------------
 1
(1 row)

 audit_dml_state_select 
------------------------
 1
(1 row)

CREATE TABLE
\! @abs_bindir@/gsql -r -p @portstring@ -d postgres -c "insert into TESTTABLE_t1 values (1,1);"
INSERT 0 1
\! @abs_bindir@/gsql -r -p @portstring@ -d postgres -c "select * from TESTTABLE_t1 where id=1;"
 id | num 
----+-----
  1 |   1
(1 row)

\! @abs_bindir@/gsql -r -p @portstring@ -d postgres -c "drop table TESTTABLE_t1;"
DROP TABLE
\! @abs_bindir@/gsql -r -p @portstring@ -d postgres -c "select type,result,object_name,detail_info from pg_query_audit('0007-1-1','9999-12-31') where OBJECT_name ='testtable_t1' order by time;";
       type        | result | object_name  |                  detail_info                  
-------------------+--------+--------------+-----------------------------------------------
 dml_action        | ok     | testtable_t1 | insert into TESTTABLE_t1 values (1,1);
 dml_action_select | ok     | testtable_t1 | select * from TESTTABLE_t1 where id=1;
(2 rows)

\! @abs_bindir@/gsql -r -p @portstring@ -d postgres -c "select * from pg_delete_audit('0007-1-1','9999-12-31');";
 pg_delete_audit 
-----------------
 
(1 row)

-- llt for pbe and lightcn
\! @abs_bindir@/gsql -r -p @portstring@ -d postgres -c "show audit_dml_state;show audit_dml_state_select;create table lightcn_t1 (id int, num int) distribute by hash(id);"
 audit_dml_state 
-----------------
 1
(1 row)

 audit_dml_state_select 
------------------------
 1
(1 row)

CREATE TABLE
\! @pgbench_dir@/pgbench -p @portstring@ postgres -c 1 -t 1 -M prepared -f @abs_srcdir@/data/pgbench.sql -n > /dev/null
\! @abs_bindir@/gsql -r -p @portstring@ -d postgres -c "drop table lightcn_t1;"
DROP TABLE
\! @abs_bindir@/gsql -r -p @portstring@ -d postgres -c "select type,result,object_name,detail_info from pg_query_audit('0007-1-1','9999-12-31') where OBJECT_name ='lightcn_t1' order by time;";
       type        | result | object_name |                   detail_info                    
-------------------+--------+-------------+--------------------------------------------------
 dml_action        | ok     | lightcn_t1  | insert into lightcn_t1 values ($1, $2);
 dml_action_select | ok     | lightcn_t1  | select * from lightcn_t1 where id = $1;
 dml_action        | ok     | lightcn_t1  | update lightcn_t1 set num = num+1 where id = $1;
 dml_action        | ok     | lightcn_t1  | delete from lightcn_t1 where id = $1;
(4 rows)

\! @abs_bindir@/gsql -r -p @portstring@ -d postgres -c "select * from pg_delete_audit('0007-1-1','9999-12-31');";
 pg_delete_audit 
-----------------
 
(1 row)

\! @abs_bindir@/gs_guc reload -Z coordinator -D @abs_srcdir@/tmp_check/coordinator1/ -c "audit_dml_state=0" > /dev/null 2>&1
\! @abs_bindir@/gs_guc reload -Z coordinator -D @abs_srcdir@/tmp_check/coordinator1/ -c "audit_dml_state_select=0" > /dev/null 2>&1
select pg_sleep(1);
 pg_sleep 
----------
 
(1 row)

