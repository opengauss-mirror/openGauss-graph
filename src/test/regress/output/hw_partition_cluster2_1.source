-- 3. test cluster without table
create table test_cluster_without_table (a int, b int, c text)
partition by range (a)
(
	partition p1_test_cluster_without_table values less than (1),
	partition p2_test_cluster_without_table values less than (4),
	partition p3_test_cluster_without_table values less than (7)
);
create index test_cluster_without_table_a_index on test_cluster_without_table (a) local;
create index test_cluster_without_table_b_index on test_cluster_without_table (b) local;
create index test_cluster_without_table_c_index on test_cluster_without_table (c) local;
create index test_cluster_without_talbe_a_c_index on test_cluster_without_table (a, c) local;
create index test_cluster_without_table_b_c_index on test_cluster_without_table (b, c) local;
insert into test_cluster_without_table values (0, 0, 'd');
insert into test_cluster_without_table values (0, 0, 'c');
insert into test_cluster_without_table values (0, 5, 'a');
insert into test_cluster_without_table values (0, 3, 'b');
insert into test_cluster_without_table values (0, 6, 'e');
insert into test_cluster_without_table values (0, 6, 'd');
insert into test_cluster_without_table values (0, 1, 'ab');
insert into test_cluster_without_table values (0, 2, 'bd');
insert into test_cluster_without_table values (0, 4, 'fg');
insert into test_cluster_without_table values (2, 0, 'd');
insert into test_cluster_without_table values (2, 0, 'c');
insert into test_cluster_without_table values (2, 5, 'a');
insert into test_cluster_without_table values (2, 3, 'b');
insert into test_cluster_without_table values (2, 6, 'e');
insert into test_cluster_without_table values (2, 6, 'd');
insert into test_cluster_without_table values (2, 1, 'ab');
insert into test_cluster_without_table values (2, 2, 'bd');
insert into test_cluster_without_table values (2, 4, 'fg');
-- create ordinary table
create table test_ordinary_table (a int, b text);
create index test_ordinary_table_a_index on test_ordinary_table(a);
create index test_ordinary_table_b_index on test_ordinary_table(b);
insert into test_ordinary_table values (0, 'd');
insert into test_ordinary_table values (5, 'a');
insert into test_ordinary_table values (3, 'b');
insert into test_ordinary_table values (4, 'e');
insert into test_ordinary_table values (1, 'c');
insert into test_ordinary_table values (2, 'f');
-- failed
cluster test_cluster_without_table;
ERROR:  there is no previously clustered index for table "test_cluster_without_table"
cluster test_ordinary_table;
ERROR:  there is no previously clustered index for table "test_ordinary_table"
cluster test_cluster_without_table using test_cluster_without_table_a_index;
cluster test_ordinary_table using test_ordinary_table_a_index;
-- success
cluster test_cluster_without_table;
cluster test_ordinary_table;
select * from test_cluster_without_table order by 1, 2, 3;
 a | b | c  
---+---+----
 0 | 0 | c
 0 | 0 | d
 0 | 1 | ab
 0 | 2 | bd
 0 | 3 | b
 0 | 4 | fg
 0 | 5 | a
 0 | 6 | d
 0 | 6 | e
 2 | 0 | c
 2 | 0 | d
 2 | 1 | ab
 2 | 2 | bd
 2 | 3 | b
 2 | 4 | fg
 2 | 5 | a
 2 | 6 | d
 2 | 6 | e
(18 rows)

select * from test_ordinary_table order by 1, 2;
 a | b 
---+---
 0 | d
 1 | c
 2 | f
 3 | b
 4 | e
 5 | a
(6 rows)

alter table test_cluster_without_table cluster on test_cluster_without_table_b_index;
-- Verify that indisclustered is correctly set
SELECT pg_class.relname FROM pg_index, pg_class, pg_class AS pg_class_2
WHERE pg_class.oid=indexrelid
	AND indrelid=pg_class_2.oid
	AND pg_class_2.relname = 'test_cluster_without_table'
	AND indisclustered;
              relname               
------------------------------------
 test_cluster_without_table_b_index
(1 row)

	
alter table test_ordinary_table cluster on test_ordinary_table_b_index;
-- Verify that indisclustered is correctly set
SELECT pg_class.relname FROM pg_index, pg_class, pg_class AS pg_class_2
WHERE pg_class.oid=indexrelid
	AND indrelid=pg_class_2.oid
	AND pg_class_2.relname = 'test_ordinary_table'
	AND indisclustered;
           relname           
-----------------------------
 test_ordinary_table_b_index
(1 row)

	
	
-- success
cluster test_cluster_without_table;
cluster test_ordinary_table;
select * from test_cluster_without_table order by 1, 2, 3;
 a | b | c  
---+---+----
 0 | 0 | c
 0 | 0 | d
 0 | 1 | ab
 0 | 2 | bd
 0 | 3 | b
 0 | 4 | fg
 0 | 5 | a
 0 | 6 | d
 0 | 6 | e
 2 | 0 | c
 2 | 0 | d
 2 | 1 | ab
 2 | 2 | bd
 2 | 3 | b
 2 | 4 | fg
 2 | 5 | a
 2 | 6 | d
 2 | 6 | e
(18 rows)

select * from test_ordinary_table order by 1, 2;
 a | b 
---+---
 0 | d
 1 | c
 2 | f
 3 | b
 4 | e
 5 | a
(6 rows)

-- clean
drop table test_cluster_without_table;
drop table test_ordinary_table;
----------------------------- Cluster Partition ------------------------------
create table test_cluster_partition (a int, b int, c text)
distribute by replication 
partition by range (a)
(
	partition test_cluster_partition_p1 values less than (1),
	partition test_cluster_partition_p2 values less than (4),
	partition test_cluster_partition_p3 values less than (7)
);
create index test_cluster_partition_a_index on test_cluster_partition (a) local;
create index test_cluster_partition_b_index on test_cluster_partition (b) local;
create index test_cluster_partition_c_index on test_cluster_partition (c) local;
create index test_cluster_partition_a_c_index on test_cluster_partition (a, c) local;
create index test_cluster_partition_b_c_index on test_cluster_partition (b, c) local;
insert into test_cluster_partition values (0, 0, 'd');
insert into test_cluster_partition values (0, 0, 'c');
insert into test_cluster_partition values (0, 5, 'a');
insert into test_cluster_partition values (0, 3, 'b');
insert into test_cluster_partition values (0, 6, 'e');
insert into test_cluster_partition values (0, 6, 'd');
insert into test_cluster_partition values (0, 1, 'ab');
insert into test_cluster_partition values (0, 2, 'bd');
insert into test_cluster_partition values (0, 4, 'fg');
insert into test_cluster_partition values (2, 0, 'd');
insert into test_cluster_partition values (2, 0, 'c');
insert into test_cluster_partition values (2, 5, 'a');
insert into test_cluster_partition values (2, 3, 'b');
insert into test_cluster_partition values (2, 6, 'e');
insert into test_cluster_partition values (2, 6, 'd');
insert into test_cluster_partition values (2, 1, 'ab');
insert into test_cluster_partition values (2, 2, 'bd');
insert into test_cluster_partition values (2, 4, 'fg');
select * from test_cluster_partition partition (test_cluster_partition_p1);
 a | b | c  
---+---+----
 0 | 0 | d
 0 | 0 | c
 0 | 5 | a
 0 | 3 | b
 0 | 6 | e
 0 | 6 | d
 0 | 1 | ab
 0 | 2 | bd
 0 | 4 | fg
(9 rows)

--cluster partition p1
cluster test_cluster_partition partition (test_cluster_partition_p1) using test_cluster_partition_b_index;
select * from test_cluster_partition partition (test_cluster_partition_p1);
 a | b | c  
---+---+----
 0 | 0 | c
 0 | 0 | d
 0 | 1 | ab
 0 | 2 | bd
 0 | 3 | b
 0 | 4 | fg
 0 | 5 | a
 0 | 6 | d
 0 | 6 | e
(9 rows)

cluster test_cluster_partition partition (test_cluster_partition_p1) using test_cluster_partition_c_index;
select * from test_cluster_partition partition (test_cluster_partition_p1);
 a | b | c  
---+---+----
 0 | 5 | a
 0 | 1 | ab
 0 | 3 | b
 0 | 2 | bd
 0 | 0 | c
 0 | 0 | d
 0 | 6 | d
 0 | 6 | e
 0 | 4 | fg
(9 rows)

cluster test_cluster_partition partition (test_cluster_partition_p1) using test_cluster_partition_b_c_index;
select * from test_cluster_partition partition (test_cluster_partition_p1);
 a | b | c  
---+---+----
 0 | 0 | c
 0 | 0 | d
 0 | 1 | ab
 0 | 2 | bd
 0 | 3 | b
 0 | 4 | fg
 0 | 5 | a
 0 | 6 | d
 0 | 6 | e
(9 rows)

--cluster partition p2
cluster test_cluster_partition partition (test_cluster_partition_p2) using test_cluster_partition_b_index;
select * from test_cluster_partition partition (test_cluster_partition_p2);
 a | b | c  
---+---+----
 2 | 0 | c
 2 | 0 | d
 2 | 1 | ab
 2 | 2 | bd
 2 | 3 | b
 2 | 4 | fg
 2 | 5 | a
 2 | 6 | d
 2 | 6 | e
(9 rows)

cluster test_cluster_partition partition (test_cluster_partition_p2) using test_cluster_partition_c_index;
select * from test_cluster_partition partition (test_cluster_partition_p2);
 a | b | c  
---+---+----
 2 | 5 | a
 2 | 1 | ab
 2 | 3 | b
 2 | 2 | bd
 2 | 0 | c
 2 | 0 | d
 2 | 6 | d
 2 | 6 | e
 2 | 4 | fg
(9 rows)

cluster test_cluster_partition partition (test_cluster_partition_p2) using test_cluster_partition_b_c_index;
select * from test_cluster_partition partition (test_cluster_partition_p2);
 a | b | c  
---+---+----
 2 | 0 | c
 2 | 0 | d
 2 | 1 | ab
 2 | 2 | bd
 2 | 3 | b
 2 | 4 | fg
 2 | 5 | a
 2 | 6 | d
 2 | 6 | e
(9 rows)

--cluster partitioned table
cluster test_cluster_partition using test_cluster_partition_b_index;
select * from test_cluster_partition;
 a | b | c  
---+---+----
 0 | 0 | c
 0 | 0 | d
 0 | 1 | ab
 0 | 2 | bd
 0 | 3 | b
 0 | 4 | fg
 0 | 5 | a
 0 | 6 | d
 0 | 6 | e
 2 | 0 | c
 2 | 0 | d
 2 | 1 | ab
 2 | 2 | bd
 2 | 3 | b
 2 | 4 | fg
 2 | 5 | a
 2 | 6 | d
 2 | 6 | e
(18 rows)

cluster test_cluster_partition using test_cluster_partition_c_index;
select * from test_cluster_partition;
 a | b | c  
---+---+----
 0 | 5 | a
 0 | 1 | ab
 0 | 3 | b
 0 | 2 | bd
 0 | 0 | c
 0 | 0 | d
 0 | 6 | d
 0 | 6 | e
 0 | 4 | fg
 2 | 5 | a
 2 | 1 | ab
 2 | 3 | b
 2 | 2 | bd
 2 | 0 | c
 2 | 0 | d
 2 | 6 | d
 2 | 6 | e
 2 | 4 | fg
(18 rows)

cluster test_cluster_partition using test_cluster_partition_b_c_index;
select * from test_cluster_partition;
 a | b | c  
---+---+----
 0 | 0 | c
 0 | 0 | d
 0 | 1 | ab
 0 | 2 | bd
 0 | 3 | b
 0 | 4 | fg
 0 | 5 | a
 0 | 6 | d
 0 | 6 | e
 2 | 0 | c
 2 | 0 | d
 2 | 1 | ab
 2 | 2 | bd
 2 | 3 | b
 2 | 4 | fg
 2 | 5 | a
 2 | 6 | d
 2 | 6 | e
(18 rows)

--cluster
cluster test_cluster_partition;
select * from test_cluster_partition;
 a | b | c  
---+---+----
 0 | 0 | c
 0 | 0 | d
 0 | 1 | ab
 0 | 2 | bd
 0 | 3 | b
 0 | 4 | fg
 0 | 5 | a
 0 | 6 | d
 0 | 6 | e
 2 | 0 | c
 2 | 0 | d
 2 | 1 | ab
 2 | 2 | bd
 2 | 3 | b
 2 | 4 | fg
 2 | 5 | a
 2 | 6 | d
 2 | 6 | e
(18 rows)

-- cluster sync using index info
create table test_sync_using_index(a int, b int);
create index idx_sync on test_sync_using_index(a);
cluster test_sync_using_index using idx_sync;
cluster test_sync_using_index;
\d+ test_sync_using_index
                Table "public.test_sync_using_index"
 Column |  Type   | Modifiers | Storage | Stats target | Description 
--------+---------+-----------+---------+--------------+-------------
 a      | integer |           | plain   |              | 
 b      | integer |           | plain   |              | 
Indexes:
    "idx_sync" btree (a) TABLESPACE pg_default CLUSTER
Has OIDs: no
Distribute By: HASH(a)
Location Nodes: ALL DATANODES
Options: orientation=row, compression=no

\! @abs_bindir@/gsql -r -p @cn2_portstring@ -d regression -c "cluster test_sync_using_index;"
CLUSTER
drop table test_sync_using_index;
drop table test_cluster_partition;
-- vacuum full + partial cluster key
CREATE TABLE hw_pck_tbl_00
(
a int,
b int
) with (orientation = column);
COPY hw_pck_tbl_00 FROM STDIN;
alter table hw_pck_tbl_00 add partial cluster key(b);
select * from hw_pck_tbl_00 ;
 a | b  
---+----
 1 | 10
 1 |  9
 1 |  8
(3 rows)

vacuum full hw_pck_tbl_00 ;
select * from hw_pck_tbl_00 ;
 a | b  
---+----
 1 |  8
 1 |  9
 1 | 10
(3 rows)

DROP TABLE hw_pck_tbl_00;
CREATE TABLE hw_pck_tbl_01
(
a int,
b int,
c int
) with (orientation = column)
partition by range (b)
(
partition p1 values less than (5),
partition p2 values less than (10),
partition p3 values less than (15)
);
COPY hw_pck_tbl_01 FROM STDIN;
alter table hw_pck_tbl_01 add partial cluster key(c);
SELECT c FROM hw_pck_tbl_01 WHERE b < 5;
 c  
----
 10
  9
  8
(3 rows)

VACUUM FULL hw_pck_tbl_01;
SELECT c FROM hw_pck_tbl_01 WHERE b < 5;
 c  
----
  8
  9
 10
(3 rows)

DROP TABLE hw_pck_tbl_01;
