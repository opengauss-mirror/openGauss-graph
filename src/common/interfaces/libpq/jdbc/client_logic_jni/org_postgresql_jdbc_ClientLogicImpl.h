/*
 * Copyright (c) 2020 Huawei Technologies Co.,Ltd.
 *
 * openGauss is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *
 * http://license.coscl.org.cn/MulanPSL2
 *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 * -------------------------------------------------------------------------
 *
 * org_postgresql_jdbc_ClientLogicImpl.h
 *
 * IDENTIFICATION
 * src/common/interfaces/libpq/jdbc/client_logic_jni/org_postgresql_jdbc_ClientLogicImpl.h
 *
 * -------------------------------------------------------------------------
 */

#ifndef _Included_org_postgresql_jdbc_ClientLogicImpl
#define _Included_org_postgresql_jdbc_ClientLogicImpl

/* DO NOT EDIT THIS FILE - it is machine generated */
#ifndef ENABLE_LITE_MODE
#include <jni.h>
#endif
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     org_postgresql_jdbc_ClientLogicImpl
 * Method:    linkClientLogicImpl
 * Signature: ()[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_linkClientLogicImpl
    (JNIEnv *, jobject, jstring);

JNIEXPORT jobjectArray JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_setKmsInfoImpl(JNIEnv *env, jobject,
    jlong, jstring, jstring);

/*
 * Class:     org_postgresql_jdbc_ClientLogicImpl
 * Method:    runQueryPreProcessImpl
 * Signature: (JLjava/lang/String;)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_runQueryPreProcessImpl(JNIEnv *, jobject, jlong,
    jstring);

/*
 * Class:     org_postgresql_jdbc_ClientLogicImpl
 * Method:    runQueryPostProcessImpl
 * Signature: (JLjava/lang/String;)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_runQueryPostProcessImpl(JNIEnv *, jobject,
    jlong);

/*
 * Class:     org_postgresql_jdbc_ClientLogicImpl
 * Method:    runClientLogicImpl
 * Signature: (JLjava/lang/String;I)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_runClientLogicImpl(JNIEnv *, jobject, jlong,
    jstring, jint);

/*
 * Class:     org_postgresql_jdbc_ClientLogicImpl
 * Method:    getRecordIDsImpl
 * Signature: (JLjava/lang/String;I)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_getRecordIDsImpl(JNIEnv *, jobject, jlong,
    jstring, jint);

/*
 * Class:     org_postgresql_jdbc_ClientLogicImpl
 * Method:    runClientLogic4RecordImpl
 * Signature: (JLjava/lang/String;[I)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_runClientLogic4RecordImpl(JNIEnv *, jobject,
    jlong, jstring, jintArray);

/*
 * Class:     org_postgresql_jdbc_ClientLogicImpl
 * Method:    prepareQueryImpl
 * Signature: (JLjava/lang/String;Ljava/lang/String;I)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_prepareQueryImpl(JNIEnv *, jobject, jlong,
    jstring, jstring, jint);

/*
 * Class:     org_postgresql_jdbc_ClientLogicImpl
 * Method:    replaceStatementParamsImpl
 * Signature: (JLjava/lang/String;[Ljava/lang/String;)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_replaceStatementParamsImpl(JNIEnv *, jobject,
    jlong, jstring, jobjectArray);

/*
 * Class:     org_postgresql_jdbc_ClientLogicImpl
 * Method:    replaceErrorMessageImpl
 * Signature: (JLjava/lang/String;)[Ljava/lang/Object;
 */
JNIEXPORT jobjectArray JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_replaceErrorMessageImpl(JNIEnv *, jobject,
    jlong, jstring);

/*
 * Class:     Java_org_postgresql_jdbc_ClientLogicImpl_reloadCacheIfNeededImpl
 * Method:    reloadCache
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_reloadCacheIfNeededImpl (JNIEnv *, jobject, jlong);

/*
 * Class:     org_postgresql_jdbc_ClientLogicImpl
 * Method:    reloadCache
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_reloadCacheImpl
  (JNIEnv *, jobject, jlong);

/*
 * Class:     Java_org_postgresql_jdbc_ClientLogicImpl_reloadCacheIfNeededImpl
 * Method:    reloadCache
 * Signature: (J)V
 */

JNIEXPORT void JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_reloadCacheIfNeededImpl
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_postgresql_jdbc_ClientLogicImpl
 * Method:    destroy
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_postgresql_jdbc_ClientLogicImpl_destroy(JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
